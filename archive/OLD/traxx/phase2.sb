#let freqs=[64, 66, 71, 73, 74, 66, 64, 73, 71, 66, 74, 73];
#let freqs=[47, 44, 47, 43, 37, 44, 40];
#let freqs=[30, 33, 34, 28, 44];
#let freqs=[20, 22, 24, 23];



let phasefn = fn(soundgen1, soundgen2, pat_array, sg2_px, carry, bars_to_phase_over, note_dur)
{
  let pp = 3840 / len(pat_array);
  let qpp = (3840* bars_to_phase_over) / (len(pat_array) * bars_to_phase_over + 1);

  # normal time
  for (i = 0; i < len(pat_array); ++i) {
    #print("sg:", soundgen1, "I:", pat_array[i], " dru:" ,note_dur, " pp:", pp);
    note_on_at(soundgen1, notes_in_chord(pat_array[i], 0, true), i * pp, dur=note_dur);
  }

  # phased time
  for (i = 0; i < len(pat_array); ++i ) {
    let time_at = i * qpp + carry;
    note_on_at(soundgen2, notes_in_chord(pat_array[sg2_px],0, true), time_at, dur=note_dur);
    sg2_px = incr(sg2_px, 0, len(pat_array));
  }
  let last_idx = (len(pat_array) * qpp) + carry;
  if (last_idx < 3840) {
    note_on_at(soundgen2, notes_in_chord(pat_array[sg2_px], 0, true), last_idx, dur=note_dur);
    sg2_px = incr(sg2_px, 0, len(pat_array));
    let diff = 3840 - last_idx;
    carry = qpp - diff;
  } else {
    carry = last_idx - 3840;
  }
  return [sg2_px, carry];
}


let dxgen = gen()
{
  setup()
  {
    let notez = [20, 20, 20];
    let nx = 0;
    let beat = rand_beat();
    let mel = combinor(beat, notez);
    let barsz = [2, 3, 4, 7, 12];
    let bx = 0;
    let bars_to_phase_over = 2;
    let carry = 0;
    let durz = [ 100, 7, 12, 25, 50];
    let drx = 0;
  }
  run()
  {
    if (count % bars_to_phase_over == 0) {
      bars_to_phase_over = barsz[bx];
      bx = incr(bx, 0, len(barsz));
    }
    let ntz = notez;
    if (count % 7 == 0 ) {
      fast(dx2, mel, 0.5);
      ntz = reverse(ntz);
    }
    if (count % 8 == 0 ) {
      ntz = rotate(ntz, barsz[bx]);
      play_array(dx, mel, dur=durz[dx]);
    }
    let idx_and_carry = phasefn(dx, dx2, ntz, nx, carry, bars_to_phase_over, dur=durz[drx]);
    nx = idx_and_carry[0];
    carry = idx_and_carry[1];
    drx = incr(drx, 0, len(durz));
  }
}

