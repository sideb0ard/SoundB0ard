
let play0r = fn(sg, list, read_idx, play_idx, offset, pp)
{
  if (type(list[read_idx]) == "ARRAY") {
    for (i = 0; i < len(list[read_idx]); ++i) {
      play0r(sg, list[read_idx], i, i, play_idx * pp, pp / len(list[read_idx]));
    }

  }
  else {
    if (type(list[read_idx]) == "NUMBER" && list[read_idx] > 0) {
      note_on_at(sg, list[read_idx], offset + (play_idx * pp));
    }
  }

}

vol shm 0.4;
vol stm 0.4;
vol ft 0.4;
vol clp 0.4;
vol dclp 1;

#let gry = grain(TT-PARTYPEOPLE/ohyeah.wav);
#let bll = loop(matr/beatloopDISTORT.wav)

set hh:pitch 2

let blah_gen = gen()
{
  setup()
  {
    let percbeat = rand_beat();
    let kickbeat = gen_beat();

    let kkz = [hbd, bd, bde];
    let kx = 0;

    let rotrz = [2, 3, 4, 7];
    let rtx = 0;

    let durz = [50, 150, 250, 500];
    let drx = 0;

  }
  run()
  {
    play_array(bd, kickbeat);

    play_array(hh, rotate(kickbeat, rotrz[rtx]));
    play_array(sn, rotate(percbeat, rotrz[rtx]));
    play_array(hh, percbeat);

    play_array(dx2, combinor(percbeat, [77]), dur=durz[drx]);

    if (count % 3 == 0) {
      percbeat = rand_beat();
      kx = incr(kx, 0, len(kkz));
      set bll:stutter 1;

      play_array(dx, combinor(kickbeat, [20]), dur=durz[drx]);
      play_array(shm, rotate(percbeat, rotrz[rtx]));
    }
    if (count % 4 == 0) {
      kickbeat = gen_beat();
      set bll:scramble 1;
      play_array(dx, combinor(kickbeat, [16]), dur=durz[drx]);
    }
    rtx = incr(rtx, 0, len(rotrz));
    drx = incr(drx, 0, len(durz));

  }
}


let strblah_gen = gen()
{
  setup()
  {
    let pitxh = [0.6, 1.7];
    let ptx = 0;
  }
  run()
  {
    if (count % 3 == 0) {
      set_pitch(gry, pitxh[ptx]);
      ptx = incr(ptx, 0, len(pitxh));
    }
  }
}


