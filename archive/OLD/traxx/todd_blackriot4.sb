# let bd = sample(TT-BLACKRIOT-DAYINLIFE/bdflange.wav)
# let sn = sample(TT-BLACKRIOT-DAYINLIFE/cp2.wav)
# let hh1 = sample(TT-BLACKRIOT-DAYINLIFE/hhish.wav)
# let hh2 = sample(TT-BLACKRIOT-DAYINLIFE/hh.wav)
# let piano1 = sample(TT-BLACKRIOT-WARLOCK/piano1.wav)
# let piano2 = sample(TT-BLACKRIOT-WARLOCK/piano2.wav)

let PP16 = 60;
let twoPI = 6.28318530718;
let freq = rand() * 4;
let res = 0.4;

let pp_changer = gen()
{
  setup()
  {
  }
  run()
  {
    PP16 = PP16 *2;
    if (PP16 > 980) {
      PP16 = 30;
      freq = rand() * 7;
    }
  }
}


let bd_rhythm = gen()
{
  setup()
  {
    let cycles = 4;
    let t = 0;
    let phase = 0.0;
  }

  run()
  {
    for ( i = 0; i < cycles; ++i) {
      let x = map(sin(t), -1, 1, 0, 16);
      let y = map(sin(t*freq + phase), -1, 1, 0, 16);
      noteOnDelayed(bd, 1, x*PP16);
      noteOnDelayed(sn, 1, y*PP16);
      # puts("X is ", x, " Y:", y, " PP16:", PP16);
      t = t + res;
      if ( t > cycles * twoPI) {
        t = 0;
        phase = phase + 0.1
      };
    }
  }
}

let hh_rhythm = gen()
{
  setup()
  {
    let cycles = 3;
    let t = 0;
    let phase = 0.0;
  }

  run()
  {
    for ( i = 0; i < cycles; ++i) {
      let x = map(sin(t), -1, 1, 0, 16);
      let y = map(sin(t*freq + phase), -1, 1, 0, 16);
      noteOnDelayed(hh1, 1, x*PP16);
      noteOnDelayed(hh2, 1, y*PP16);
      # puts("X is ", x, " Y:", y, " PP16:", PP16);
      t = t + res;
      if ( t > cycles * twoPI) {
        t = 0;
        phase = phase + 0.1
      };
    }
  }
}

let pi_rhythm = gen()
{
  setup()
  {
    let cycles = 7;
    let t = 0;
    let phase = 0.0;
  }

  run()
  {
    for ( i = 0; i < cycles; ++i) {
      let x = map(sin(t), -1, 1, 0, 16);
      let y = map(sin(t*freq + phase), -1, 1, 0, 16);
      noteOnDelayed(piano1, 1, x*PP16);
      noteOnDelayed(piano2, 1, y*PP16);
      # puts("X is ", x, " Y:", y, " PP16:", PP16);
      t = t + res;
      if ( t > cycles * twoPI) {
        t = 0;
        phase = phase + 0.1
      };
    }
  }
}

