
let perc_gen = gen()
{
  setup()
  {
    let beat = rand_array(16, 0, 8);
    let bidx = 0;
    let max = 9;

  }
  run()
  {
    # print(beat);
    if (count % 7 < 6) {
      for (i = 0; i < 16; ++i) {
        if (beat[i] < len(percz)) {
          note_on_at(percz[bidx], beat[i], i * pp);
          bidx = incr(bidx, 0, len(percz));
        }
      }
    }
    if (count % 3 == 0) {
      beat = rand_array(16, 0, max);
    }
    max = incr(max, 1, 9);
  }
}



let blah_gen = gen()
{
  setup()
  {
    let beat = bjork(rand(5) + 2, 16);
    let pix = [2, 1, 0.7];
    let px = 0;
  }
  run()
  {
    if (count % 3 == 0) {
      beat = bjork(rand(5) + 2, 16);
    }
    if (rand(100)>90) {
      beat = invert(beat);
      set_pitch(bd, pix[px]);
      set_pitch(hh, pix[px]);
      px = incr(px, 0, len(px));
    }

    #print("B:", beat);
    play_array(bd, beat);
  }
}

let hh_gen = gen()
{
  setup()
  {
    let pitxh = [2, 1, 0.7];
    let pix = 0;
  }
  run()
  {
    set_pitch(hh, pitxh[pix]);
    set_pitch(bd, pitxh[pix]);
    pix = incr(pix, 0, len(pitxh));
  }
}

let rf_gen = gen()
{
  setup()
  {
    let rf = riff();
    let rf2 = riff();
  }
  run()
  {
    if (count % 8 == 0) {
      rf = riff();
      rf2 = riff();
    }
    if (count % 3 == 0) {
      play_array(dx100, rf);
      set dx100:algo 3
    } else {
      play_array(dx100, rf2);
      play_array(mo, map(rf2, fn(v) { return v + 12*3; } ) );
      set dx100:algo 1
    }
  }
}

