#let bd = sample(aesamples/SPSKikA.WAV);
let bd = sample(kicks/tuffKick.aiff);
let sq = sample(noises/crnchHar.aiff);
let ay = sample(perc/areYou.aiff);
let sf = sample(perc/surfaceFalle.aiff);
let cl = sample(notes/faderrr.aiff);
vol cl 0.4;

let blp = sample(noises/BSQ_M504_s.aif);
vol blp 0.5;
let gc = sample(claps/gaborClap.aiff);
set gc:pitch 2;
let hc = sample(claps/haunterZ.aiff);
set hc:pitch 2;

let perc_gen = gen()
{
  setup()
  {
    let pat = pattern("[~ gc*3] [~ <hc blp ay>]");
    let pat2 = pattern("<[~ gc*3] sq> hc(3,8) [~ <hc blp ay>]");
    let pat3 = pattern("cl(3,8)");
    let pz = [pat, pat2, pat3];
    let px = 0;
    let rotrz = [0, 3, 4, 2, 5];
    let rx = 0;
    let ptchz = [1, 1.2, 1.5];
    let ptx = 0;
  }
  run()
  {
    if (count % 7 == 0) {
      if (count % 3 == 0) {
        fast(pz[px], 2);
        set_pitch(hc, ptchz[ptx]);
      } else {
        play_array(rotate(pz[px], rotrz[rx]));
        rx = incr(rx, 0, len(rotrz));
        px = incr(px, 0, len(pz));
        set_pitch(cl, ptchz[ptx]);
        set_pitch(gc, ptchz[ptx]);
        ptx = incr(ptx, 0, len(ptchz));
      }
      set_pitch(ay, ptchz[ptx]);
    }
  }
}

let blah_gen = gen()
{
  setup()
  {
    let bz = [3, 5];
    let bx = 0;
    let rotz = [0, 2, 3];
    let rx = 0;
    let pz = [1, 2, 0.7, 1.5];
    let px = 0;
    let velz = [127, 120, 110, 100, 77];
    let vx = 0;
  }
  run()
  {
    let pat = bjork(bz[bx], 8);
    vx = incr(vx, 0, len(velz));
    if (count % 8 < 7) {
      play_array(bd, rotate(pat, rotz[rx]), vel=velz[vx]);
      if (count % 6 == 0) {
        set_pitch(bd, pz[px]);
        fast(bd, pat, rx+1);
      }
    }
    if (count % 3 == 0 ) {
      play_array(sf, rotate(pat, rotz[rx]+2));
      set_pitch(sf, pz[px]);
      px = incr(px, 0, len(pz));
    }
    bx = incr(bx, 0, len(bz));
    rx = incr(rx, 0, len(rotz));
  }
}

let llh = sample(hats/LOUhat.aiff);
vol llh 0.4;
let rhh = sample(hats/ralphiHatz2.aiff);
vol rhh 0.4;
let rhh2 = sample(hats/reggaHatz.aiff);
vol rhh2 0.4;

let hh_gen = gen()
{
  setup()
  {
    let hazt = [llh, rhh, rhh2];
    let hz = 0;

    let lenz = [16, 16, 15, 12, 32, 48];
    let lx = 0;

    let pitzh = [1, 0.8, 1.3, 2];
    let px = 0;

    let velz = [127, 113, 97, 79];
    let vx = 0;

    let delz = [1, 2, 3, 4];
    let dx = 0;

  }
  run()
  {
    if (count % 7 < 3) {
      let pp = 3840 / lenz[lx];
      for (i = 0; i < lenz[lx]; ++i) {
        note_on_at(hazt[hz],1,  pp * i, vel=velz[vx]);
        vx = incr(vx, 0, len(velz));
      }
    }
    set_pitch(hazt[hz], pitzh[px]);
    set hazt[hz]:fx0:sync_len delz[dx];
    dx = incr(dx, 0, len(delz));

    hz = incr(hz, 0, len(hazt));
    lx = incr(lx, 0, len(lenz));
    px = incr(px, 0, len(pitzh));
  }
}

let moah_gen = gen()
{
  setup()
  {
    let ntz = [67, 64, 69, 60];
    let nx = 0;
    let durz = [10, 50, 100, 200];
    let dx = 0;
    let offz = [12, 8, 4, 3, 5];
    let ox = 0;

    let osz = [16, 8, 4, 2];
    let osx = 0;
  }
  run()
  {
    if (count % 8 == 0) {
      note_on(mo, notes_in_chord(ntz[nx], 0, true), dur = durz[dx]);
      nx = incr(nx, 0, len(ntz));
    }
    if (count % 5 == 0) {
      note_on_at(mo, notes_in_chord(ntz[nx], 0, true), pp*count % 15, dur = durz[dx]);
      note_on_at(mo, notes_in_chord(ntz[nx], 0), pp*count % 15 + 240, dur = durz[dx]);
    }
    if (count % 7 == 0) {
      note_on_at(mo, notes_in_chord(ntz[nx]+12, 1, true), pp*offz[ox], dur = durz[dx]);
      ox = incr(ox, len(offz));
      note_on_at(mo, notes_in_chord(ntz[nx]+offz[ox], 1, true), pp*offz[ox], dur = durz[dx]);
    }
    set mo:l1rate synchz(osz[osx]);
    osx = incr(osx, 0, len(osz));
  }
}


let dx_gen = gen()
{
  setup()
  {
    let mel = pattern("<19*16 19*16 19*12  16*16 4*4 >");
  }
  run()
  {
    if (count % 8 < 5) {
      play_array(dx100, mel);
    }
  }
}

