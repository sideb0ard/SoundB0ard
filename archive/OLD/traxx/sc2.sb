#let dx =  fm();
#load_preset(dx, "otherwurld");
#let dx2 = fm();
#load_preset(dx2, "fnc");
#let mo = moog();
#load_preset(mo, "twitchrrr");
#p3 < osc 4 "45 55"  "set dx:op2out %";
#p4 < osc 7 "7 150"  "set dx:e1att %";
#p5 < osc 5 "45 55"  "set dx2:op2out %";
#p6 < osc 8 "7 150"  "set dx2:e1att %";
#let bd2 = sample(bd/gaborKick.aiff);
#let bd = sample(bd/dm02_909_kickdrum_004_drive.wav);
#let hh = sample(ch/LOUhat.aiff);
#vol bd 0;
#vol bd2 0;
#vol dx2 0;
#p11 < osc 7 "0.1 0.5" "vol hh %";

let bd2 = sample(bd/gaborKick.aiff);
let bd = sample(bd/dm02_909_kickdrum_004_drive.wav);
let hh = sample(ch/LOUhat.aiff);
let cp = sample(cp/clap25.aif);

let BLURP = sample(glitchz/BLURP.aiff);
let PXP2 = sample(glitchz/PXP2.aiff);
let VSGLitch = sample(glitchz/VSGLitch.aiff);
let VSpitch = sample(glitchz/VSpitch.aiff);
let pxp = sample(glitchz/pxp.aiff);

#
vol BLURP 0.4;
vol PXP2 0.4;
vol VSGLitch 0.4;
vol VSpitch 0.4;
set BLURP:decay_ms 120;
set PXP2:decay_ms 90;
set VSGLitch:decay_ms 70;
set VSpitch:decay_ms 90;
# p? < osc 17 "50 190" "set BLURP:decay_ms %"

let rf = [16, 0, 0, 24, 0, 23, 0, 16, 0, 24, 0, 0, 23, 0, 16, 0];
#let rf = [4, 0, 0, 7, 0, 4, 0, 7, 0, 4, 0, 0, 7, 0, 4, 0];
#let rf = [16, 0, 0, 24, 0, 23, 0, 16, 0, 24, 0, 0, 23, 0, 16, 0];
# rf = combinor(bjork(7,16), [16, 24, 23]);
# rf = combinor(bjork(11,16), [27, 28, 32]);
#let rf =  chord_riff([4, 7]);
#let rf =  chord_riff([4, 7]);
let blah_gen = gen()
{
  setup()
  {
    let maxl = 3;
    let cx = 0;

    let maxl2 = 4;
    let cx2 = 0;

    let percz = {1:BLURP, 2:PXP2, 3:VSGLitch, 4:VSpitch};

    let ptz = [0.7, 1.7, 0.7, 0.6];
    let ptzx = 0;

    let rotr = [2, 3, 4, 1];
    let rx = 0;

    let dcx = 1;

    let drr = 50;

  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      if (count % 8 < 7) {
        ##
        stepper(bd2, gahu, cx, i, drr);
        stepper(bd, gahu, cx2, i, drr);
      }
      ##
      #stepper(hh, rotate(soukous, rotr[rx]), cx2, i);
      cx = incr(cx, 0, maxl);
      cx2 = incr(cx2, 0, maxl2);
    }
    rx = incr(rx, 0, len(rotr));
    if (count % 3 == 0) {
      ##
      play_array(dx2, mask(rotate(rf, rotr[rx]), gahu));
    }

    if (count % dcx == 0) {
      set_pitch(cp, ptz[ptzx]);
      ptzx = incr(ptzx, 0, len(ptz));
      for (i = 0; i < 16; ++i) {
        ##
        if (i % 2 == 0) {
          #stepper(cp, rumba, cx2, i);
        }
        cx2 = incr(cx2, 0, maxl2);
        ##
        stepper(dx, up(rf, 24), cx2, i, drr);
      }
    }

    maxl = incr(maxl, 3, 16);
    maxl2 = incr(maxl2, 4, 16);

    if (count % 7 == 0) {
      let pbeat = rand_array(16, 0, 4);
      for (i = 0; i < 16; ++i) {
        if (pbeat[i] > 0) {
          ##
          note_on_at(percz[pbeat[i]], 1, pp*i);
        }
      }
    }

    if (count % 8 == 0) {
      let dcx = incr(dcx, 1, 4);
    }
  }
}

#let gras = grain(skrslazrs/SHÃ˜CK13.wav);
#p13 < osc 12 "0 100"  "set gras:idx %"
#add_fx(gras, "delay")
#p14 < osc 13 "0 400"  "set gras:fx0:delayms %"
#p15 < osc 12 "0 78"  "set gras:fx0:fb %"
#vol dx2 0
#add_fx(gras, "sidechain", bd2)

let space_between_beats = fn(abeat)
{
  let lenz = [];
  let last = 0;
  for (i = 1; i < len(abeat); ++i) {
    if (abeat[i] == 1) {
      push(lenz, i - last);
      last = i;
    }
  }
  push(lenz, len(abeat) - last);
  return lenz;
}

let string_gen = gen()
{
  setup()
  {
    let mx = 0;
    let lx = 0;
    let bjeat = rand_beat();
    let spd = [2, 4, 3];
    let spx = 0;
    let upperz = [13, 27, 38, 47];
    let ux = 0;
  }
  run()
  {
    let lenz = space_between_beats(bjeat);
    let downby = 0;
    if (count % 4 == 0) {
      downby = -12;
    }
    if (count % 4 == 0) {
      downby = 24;
      #fast(mo, up(rf, upperz[ux]), spd[spx]);
      spx = incr(spx, 0, len(spd));
      ux = incr(ux, 0, len(upperz));
    }
    if (count % 7 == 0) {
      downby = 12;
      bjeat = rand_beat();
    }
    for (i = 0; i < 16; ++i) {
      if (bjeat[i] == 1) {
        note_on_at(mo, up([rf[mx]], downby), i*pp, dur = lenz[lx] * pp );
        lx = incr(lx, 0, len(lenz));
        mx = incr(mx, 0, len(rf));
      }
    }
  }
}

#let zzz = grain(legowelt/Synth-ZeemeeuwHotel.wav);
# p7 < osc 24 "0 100" "set zzz:idx %"

let che = sample(TT-ROYALHOUSE/che.wav);
let chewit = sample(TT-ROYALHOUSE/che.wav);
let youv = sample(TT-ROYALHOUSE/youv.wav);
let whft = sample(TT-ROYALHOUSE/whft.wav);
let blt = sample(TT-LIMELIFE-RIGHTONTIME/bass1-2.wav);
let teh = sample(brandyvocalz/teh.wav);

vol che 0.3;
vol chewit 0.3;
vol youv 0.4;
vol whft 0.4;
vol blt 0.4;

#add_fx(blt, "distort");

let todd_gen = gen()
{
  setup()
  {
    let percz = {1:che, 2:chewit, 3:youv, 4:whft, 5:blt, 6:teh};
    #let lenz = [16, 12, 24];
    let lenz = [16, 8];
    let lx = 0;
  }
  run()
  {
    if (count % 4 == 0) {
      let pbeat = rand_array(lenz[lx], 0, 6);
      let pp = 3840 / lenz[lx];

      for (i = 0; i < len(pbeat); ++i) {
        if (pbeat[i] > 0) {
          note_on_at(percz[pbeat[i]], 1, pp*i);
        }
      }

      lx = incr(lx, 0, len(lenz));
    }
  }
}

# load_preset(dx2, "narf2");
# vol dx2 0.2;

# p4 $ todd_gen; p1 $ blah2_gen

# let dzl = loop(dloops/dizzeebeat1barloop.aiff) ; vol dzl 0
# set dzl:pitch 2
# p5 < every 2 "1" "set dzl:stutter %";
# add_fx(dzl, "sidechain", bd2);
# add_fx(zzz, "sidechain", bd2)

let dxm = [44, 0, 0, 47, 0, 27, 0, 44, 0, 47, 0, 0, 27, 0, 44, 0];
let blah2_gen = gen()
{
  setup()
  {
    let beat = bjork(5, 16);
    let sdbeat = gahu;

    #let dxm = up(rand_array(16,0, 2), 13);
    let ratz = [7, 3.5, 7, 14];
    let rx = 0;
  }
  run()
  {
    play_array(bd2, beat);
    play_array(hh, sdbeat);
    let mel = mask(dxm, "ff70");
    if (count % 7 == 0) {
      mel = mask(dxm, "0070");
    }
    play_array(dx2, mel);
    if (count % 4 == 0) {
      # dxm = up(rand_array(16,0, 2), 13);
      #print("Setting to ", ratz[rx]);
      set dx2:o1rat ratz[rx];
      rx = incr(rx, 0, len(ratz));
    }
  }
}

