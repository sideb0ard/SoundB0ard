

let inv_fn = fn(valz)
{
  let inv_valz = [];
  for (i = 0; i < len(valz); ++i) {
    inv_valz = push(inv_valz, valz[i]);
  }

  #if (rand(100) > 50) {
    inv_valz[0] = inv_valz[0] + 24;
    #} else {
      #  inv_valz[len(inv_valz) -1] = inv_valz[ len(inv_valz) -1] - 12;
      #}

    return inv_valz;
}

let blah_gen = gen()
{
  setup()
  {
    let rf = riff();
    let oct = 1;

  }
  run()
  {
    #print("OCT:", oct);
    for (i = 0; i < 16; ++i) {
      if (rf[i] > 0) {
        let nutz = map(notes_in_chord(rf[i], 0, true), fn(v) { return v + 12 *oct; });
        #print("NUTZ:", nutz);
        if (i % 2 == 0) {
          #print("0");
          let inv_chord = inv_fn(nutz);
          #print("-- INVERTME! ", inv_chord);
          play_array(mo, inv_chord);
        }
        else {
          #print("1");
          play_array(mo, nutz);
        }
      }
    }
    #oct = incr(oct, 3, 6);
    if (count % 8 == 0) {
      rf = riff();
    }
  }
}

