# let jon = loop(JUNALGOGZ/scratcDUBjon.wav); set jon:len 8
# p15 < osc 4 "0.2 0.9" "send(0, jon, %)"


let hh = sample(ch/hh13.aif);
# let js = loop(JUNALGOGZ/JSFTYmylove.wav);
# p6 $ hhblah_gen;
let hhblah_gen = gen()
{
  setup()
  {
    let offz = 1;
    let piz = [0.8, 1, 1.2, 1.5];
    let pix = 0;
  }
  run()
  {
    offz = incr(offz, 0, 12);
    if (count % 4 == 3) {
      set js:scramble 1;
      pix = incr(pix, 0, len(piz));
    }
    if (count % 16 == 15) {
      set js:reverse 1;
    }
    if (count % 8 < 6) {
      for (i = 0; i < 16; ++i) {
        if (i % 4 == 2) {
          note_on_at(hh, 1, i * pp);
        }
      }
    }
  }
}


#  let bonz = loop(JUNALGOGZ/bongOS.wav)
# xassign(0, ab); xassign(1, fl)

let endblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    #if (count % 2 == 0) {
      #  set jon:stutter 1;
      #  set reg:scramble 1;
      #}
    if (count % 3 == 0) {
      set bonz:stutter 1;
    }
  }
}

# p3 < ramp 8 "1 0" "vol jon %";
# per3 - default - bring up volume
let dooblah_gen = gen()
{
  setup()
  {
    let m = gamelody(16, 23);
    let ix = 0;
    let imx = 3;
    let dr = 100;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      stepper(per3, m, ix, i, dr);
      ix = incr(ix, 0, imx);
    }
    imx = incr(imx, 3, 16);

    if (count % 8 == 0) {
      m = gamelody(16, 23);
    }
  }
}

# oh - NUURF; load_preset(oh, "NUURF")
let doo3blah_gen = gen()
{
  setup()
  {
    let m = gamelody(16, 24);
    let ix = 0;
    let imx = 3;
    let dr = 100;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      stepper(oh, m, ix, i, dr);
      ix = incr(ix, 0, imx);
    }
    imx = incr(imx, 3, 16);

    if (count % 8 == 0) {
      m = gamelody(16, 23);
    }
  }
}

# let drr = loop(JUNALGOGZ/drumROLLZ.wav); set drr:len 2; p4 $ regblah_gen
let regblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 3 == 0) {
      set drr:scramble 1;

    }
    if (count % 4 == 0) {
      set drr:reverse 1;
    }
  }
}
