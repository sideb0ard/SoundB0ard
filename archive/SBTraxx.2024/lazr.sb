
let resetOn = fn(resetOn) {
  fn(counter) {
    if (counter % resetOn == 0) {
      return true;
    }
    return false;
  }
}



let lzblah_gen = gen()
{
  setup()
  {
    #let freqz = [220, 237, 240, 330];
    let freqz = [180, 150, 60, 120, 174];
    let frqx = 0;
    #let rangz = [47, 100, 120, 88, 150, 20];
    let rangz = [154, 154, 47];
    let rx = 0;
    let decayz = [154, 180, 500, 250];
    let dcx = 0;
    let attz = [10, 400, 747, 40, 80, 60, 110];
    let ax = 0;
  }
  run()
  {
    let div = 3840 / 4;
    let startr = div * 3;
    let wee_div = div / 3;
    for (let i = 0; i < 3; i++) {
      let on_at =  startr + i * wee_div;
      set sbdrum:lz_freq freqz[frqx] at=on_at;
      frqx = incr(frqx, 0, len(freqz));
      note_on_at(sbdrum, 8, on_at);
    }

    if (count % 7 == 0) {
      set sbdrum:lz_decay decayz[dcx] at=on_at;
      dcx = incr(dcx, 0, len(decayz));
    }
    if (count % 3 == 0) {
      set sbdrum:lz_attack attz[ax] at=on_at;
      ax = incr(ax, 0, len(attz));
    }
    if (count % 4 == 0) {
      set sbdrum:lz_range rangz[rx] at=on_at;
      rx = incr(rx, 0, len(rangz));
    }
  }
}

let kickblah_gen = gen()
{
  setup()
  {
    let pat = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];
    let snpat = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0];
    let hhpat =  [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0];

    let resetz = [17, 25, 57];
    let rx = 0;
    let resetOnX = resetOn(resetz[rx]);
    let play_idx = 0;
    let count_x = 0;
  }
  run()
  {
    if (count % 8 == 0) {
      resetOnX = resetOn(resetz[rx]);
      rx = incr(rx, 0, len(resetz));
    }
    for (let i = 0; i < 16; i++) {
      #print("PLAYX:", play_idx);
      if (resetOnX(count_x) == true) {
        #print("COUNTX:", count_x, " playx:", play_idx);
        play_idx = 0;
      }
      count_x++;
      if (pat[play_idx] == 1) {
        note_on_at(sbdrum, 0, i * pp);
      }
      if (snpat[play_idx] == 1) {
        note_on_at(sbdrum, 1, i * pp);
      }
      if (hhpat[play_idx] == 1) {
        note_on_at(sbdrum, 2, i * pp);
      }
      play_idx = incr(play_idx, 0, 16);
    }
  }
}

let key = 40;
let ntz = notes_in_key(key);
let dblah_gen = gen()
{
  setup()
  {
    let mel1 = [0, 47, 0, 0, 52, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let mel2 = [0, 52, 47, 0, 40, 40, 0, 0, 0, 42, 0, 40, 0, 0, 0, 0];
    let melz = [mel1, mel1, mel2];
    let mx = 0;

    let drz = [150, 200, 500, 500, 150, 1500];
    let drx = 0;

    let vlz = [100, 110, 120, 127, 120, 127, 120, 110];
    let vlx = 0;

    let resetOnX = resetOn(37);
    let px = 0;
    let cntr = 0;
  }
  run()
  {
    let mel = melz[mx];
    mx = incr(mx, 0, len(melz));
    for (let i = 0; i < 16; i++) {
      if (resetOnX(cntr) == true) {
        px = 0;
      }
      if (mel[px] > 0) {
        note_on_at(dx, mel[px], i * pp, dur = drz[drx], vel = vlz[vlx]);
        drx = incr(drx, 0, len(drz));
        vlx = incr(vlx, 0, len(vlz));
      }
      px = incr(px, 0, 16);
      cntr++;
    }
  }
}

