#let ntz = [23, 21, 34];
#let ntz = [55, 54, 47];
# key of C
#let ntz = [55, 54, 47];
#let ntz = [23, 35, 19, 31, 16, 64];
let key = 10;
let ntz = notes_in_key(key);

# bpm 110; let cb = loop(Riser77/crnchBeat.wav); set cb:len 2;
# add_buf(cb, "NewLoopz/getdumb.wav");
# set cb:0:next_action 2; set cb:0:play_for 3; set cb:1:len 2;

# load_preset(dx, "pointty"); vol dx 0.6 ; p2 $ dxstrabblah
# load_preset(per3, "MFFF"); vol per 0.3

let bmb = sample(bombz/BSQ_M504_s.wav);
let dxstrabblah = gen()
{
  setup()
  {
    # let notez = [23, 35, 19, 31, 16, 64];
    let notez = notes_in_chord(key) + notes_in_chord(key + 12);
    let nx = 0;
    let cnt = 7;
    let the_mel = combinor(bjork(cnt, 16), notez);
    let dz = [30, 40, 50, 100, 250, 10];
    let dzx = 0;
  }
  run()
  {
    if (count % 4 < 3) {
      if (count % 16 < 14) {
        for (i = 0; i < 16; ++i) {
          let v = 100 + rand(27);
          let off = 0;
          if (count % 4 == 0) {
            v = 127;
          }
          if (count % 2 == 1) {
            off = 48;
          }
          if (the_mel[i] > 0 ) {
            note_on_at(dx, the_mel[i], i*pp + off, vel = v, dur = dz[dzx]);
          }
        }
      }
    } else {
      note_on_at(bmb, 1, 10*pp, dur=2000);
      let b = rand_beat();
      let mel = combinor(b, notez);
      let pp = 3840 / len(b);
      if (count % 12 < 10) {
        for (i = 0; i < len(b); ++i) {
          if (mel[i] > 0) {
            note_on_at(per3, mel[i], i * pp, dur = dz[dzx]);
            dzx = incr(dzx, 0, len(dz));
          }
        }
      }
    }
    if (count % 8 == 7) {
      for (i = 0; i < len(b); ++i) {
        if (mel[i] == 0) {
          note_on_at(dx, mel[i]+36, i * pp, dur = dz[dzx]);
          dzx = incr(dzx, 0, len(dz));
        }
      }
    }

    ## print(the_mel);
    if (count % 4 == 0) {
      the_mel = combinor(bjork(cnt, 16), notez);
      cnt = incr(cnt, 3, 8);

      set hhb:scramble 1;
    }
    if (count % 3 == 0) {
      set hhb:stutter 1;
    }
    if (count % 8 == 7) {
      the_mel = down(the_mel, 12);
    }
  }
}

let dablah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 7 == 3) {
      set snb:stutter 1;
      set bs:stutter 1;
    }

    if (count % 4 == 0) {
      set bs:vol 1;
      set snb:scramble 1;
    }
    if (count % 4 == 3) {
      set bs:vol 0;
    }
  }
}

#
# vol hhb 0
# let bt = loop(JUNALGOGZ/craklBEAT.wav); send(2, bt, 0.5); p4 $ hhhblah_gen
# load_preset(per3, "Srqttx");  p8 < ramp 8 "0 1" "vol hhb %";

# p3 $ dxstrabblah2; p4 $ ""; vol hhb 0
let dxstrabblah2 = gen()
{
  setup()
  {
    let notez = [16, 9, 4, 52, 19];
    let nx = 0;
    let cnt = [9, 13, 7, 7, 9, 11];
    let cnx = 0;
    let the_mel = combinor(bjork(cnt[cnx], 16), notez);
    let dz = [800, 400, 500, 700];
    let dzx = 0;
  }
  run()
  {
    if (count % 4 < 3) {
      if (count % 16 < 14) {
        for (i = 0; i < 16; ++i) {
          let v = 100 + rand(27);
          let off = 0;
          if (count % 4 == 0) {
            v = 127;
          }
          if (count % 2 == 1) {
            off = 48;
          }
          if (the_mel[i] > 0 ) {
            note_on_at(dx, the_mel[i], i*pp + off, vel = v);
          }
        }
      }
    } else {
      let b = rand_beat();
      let mel = combinor(b, notez);
      let pp = 3840 / len(b);
      if (count % 12 < 8) {
        for (i = 0; i < len(b); ++i) {
          if (mel[i] > 0) {
            note_on_at(per3, mel[i], i * pp, dur = dz[dzx]);
            dzx = incr(dzx, 0, len(dz));
          }
        }
      }
    }

    # print(the_mel);
    if (count % 2 == 0) {
      the_mel = combinor(bjork(cnt[cnx], 16), notez);
      cnx = incr(cnx, 0, len(cnt));
    }
    if (count % 3 == 0) {
      the_mel = down(the_mel, 12);
    }
  }
}

# vol bt 0; vol hhb 0;
# vol bt 1; vol hhb 1; p4 $ hhhblah_gen

# load_preset(per1, "Srqttx") ; vol per1 0.7;
# load_preset(per2, "HIGHWR"); vol per2 0.6
# load_preset(per1, "GHOSTXZ") ; vol per1 0.7;
# load_preset(per3, "HIGHWR"); vol per2 0.6

let uhh = sample(ch/timabHat2.aiff);
let chp = sample(ch/pumpDistortHH.wav);
let uhz = [uhh, chp];
let uhx = 0;
let hhhblah_gen = gen()
{
  setup()
  {
    let swg = 30;
    let d = 10;
    let ptlenz = [16, 4, 16, 16, 8];
    let px = 0;
  }
  run()
  {
    if (count % 8 < 6) {
      let pp = 3840 / ptlenz[px];
      for (i = 0; i < ptlenz[px]; ++i) {
        let off = swg;
        let v = 60 + rand(47);
        if (i % 2 == 0) {
          off = 0;
        }
        if (i % 8 == 4) {
          v = 105;
        }
        note_on_at(uhz[uhx], 1, i * pp + off, vel = v, dur = d);
        uhx = incr(uhx, 0, len(uhz));
      }
      d = d + 10;
      if (d > 150) {
        d = 10;
      }
      px = incr(px, 0, len(ptlenz));
    }
    if (count % 2 == 0) {
      swg = swg + 10;
      if (swg > 70) {
        swg = 10;
      }
    }
  }
}


# vol hhb 0; vol bt 0; p4 $ ""
# p3 $ ddxblah_gen; vol bt 1
let ddxblah_gen = gen()
{
  setup()
  {
    let t = 47705;
    let p = bits( ((t/4)>>(t/4))>>(t>>(t/8))|t>>2);
    let mx = 0;
    let maxx = 4;
    let dzzz = [300, 300, 200, 300, 400, 300, 500];
    let lx = 0;
    let dn = 1;
  }
  run()
  {
    if (count % 8 == 0) {
      # let p = bits( (6473<<t^13) * 14 & t);
      # let p = bits( t<<((t>>1|t>>8)^(t>>13)) );
      p = bits( ((t/4)>>(t/4))>>(t>>(t/8))|t>>2);
      ++t;
    }
    if (count % 4 == 2) {
      for (i = 0; i < 16; ++i) {
        stepper(per1, combinor(p, down(ntz, 12)), mx, i, dzzz[lx]);
        mx = incr(mx, 0, maxx)
      }
    }
    lx = incr(lx, 0, len(dzzz));
    if (count % 8 == 7) {
      set bt:stutter 1;
    }
    if (count % 8 < 6) {
      let mtz = ntz;
      # if (count % 8 == 4) {
        #   mtz = scale_melody(down(ntz, dn), 38);
        #   dn = incr(dn, 1, 7);
        # }
      for (i = 0; i < 16; ++i) {
        stepper(per3, combinor(invert(p), mtz), mx, i, dzzz[lx]);
        mx = incr(mx, 0, maxx)
      }
      maxx = incr(maxx, 4, 16);
    }
  }
}

# p8 < ramp 8 "0 1" "vol hhb %";


# p3 $ dxstrabblah; vol bt 0


# p3 $ ddxblah_gen; vol bt 1; vol per2 0; vol per1 1

# vol hhb 0

# let delz = loop(JUNALGOGZ/DELAz.wav); set delz:len 2; vol bt 1; p7 $ delblah_gen
let delblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 8 < 6) {
      set delz:vol 1;
    } else {
      set delz:vol 0;
    }
    if (count % 3 == 0) {
      set delz:scramble 1;
    }
    if (count % 5 == 0) {
      set delz:stutter 1;
    }
    if (count % 8 == 4) {
      #solo(delz) at=8*pp;
    }
    if (count % 9 == 0) {
      set delz:reverse 1;
    }
  }
}

# p10 < osc 4 "0.1 0.7"  "send(0, delz, %)"
# p11 < osc 7 "0.1 0.6"  "send(1, delz, %)"

# vol bt 0;
# p8 < ramp 8 "1 0" "vol delz %"; p7 $ ""; vol bt 1; p3 $ dxstrabblah2
