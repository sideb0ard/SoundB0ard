
# intro  - C Am G F
# verse - C Am G F C Am G F
# chorus E F C C7 E F F G

let verse = [notes_in_chord(12), notes_in_chord(21, 1), notes_in_chord(19), notes_in_chord(17)];
let chorus = [notes_in_chord(16), notes_in_chord(17), notes_in_chord(12), notes_in_chord(12, 0, 1), notes_in_chord(16), notes_in_chord(17), notes_in_chord(17), notes_in_chord(19)];
let beat = rand_beat();

let prog = [verse, chorus];
let sx = 0;

# MWAUR // ZApzz
let mblah_gen = gen()
{
  setup()
  {

    let mel = prog[sx];
    let mx = 0;

    let dr = 100;
    let swng = 160;

  }
  run()
  {
    if (count % 16 == 0) {
      mel = prog[sx];
      sx = incr(sx, 0, len(prog));
    }
    if (count % 4 == 0) {
      mx = incr(mx, 0, len(mel));
    }

    if (count % 4 < 3) {
      for (i = 0; i < 16; ++i) {
        let offset = swng;
        if (count % 2 == 0) {
          offset = 0;
        }
        if (beat[i] == 1) {
          note_on_at(dx, mel[mx], i * pp + offset, dur = dr);
        }
      }
      dr = dr + 30;
      if (dr > 430) {
        dr = 100;
      }
    }

    if (count % 4 == 0) {
      beat = rand_beat();
    }
  }
}

# per1 // GALZIAN
let mooblah_gen = gen()
{
  setup()
  {
    let mx = 0;
  }
  run()
  {
    let mabeat = invert(beat);
    let mel = prog[sx];
    if  (count % 4 == 3) {
      for (i = 0; i < 16; ++i) {
        note_on_at(per1, mel[mx], i * pp);
      }
    }
    mx = incr(mx, 0, len(mel));
  }
}

