
# p3 < osc 12 "-40 0"  "set phb:fx0:threshold %"

# let p = {34:"39:127:452", 42:"46:127:457", 43:"42:127:474", 900:"39:127:379", 900:"42:127:382", 904:"46:127:378", 1706:"42:127:3091", 1706:"39:127:3113", 1710:"46:127:3132"}
# let q = {105:"51:127:509", 107:"54:127:518", 112:"58:127:530", 870:"54:127:390", 874:"51:127:393", 877:"58:126:394", 1620:"51:127:4949", 1624:"54:127:5019", 1631:"58:127:5064"}

let blah_gen = gen()
{
  setup()
  {
    let bt = rand_array(16, 0, 1);
  }
  run()
  {

    set phb:reverse 0;
    if (count % 4 == 0) {
      set phb:stutter 1;
    }
    if (count % 3 == 0) {
      set phb:scramble 1;
    }
    if (count % 8 == 7) {
      set phb:reverse 1;
    }
  }
}

let dblah_gen = gen()
{
  setup()
  {
    let beaat = rand_beat();
    let d = 600;
  }
  run()
  {
    if (count % 9 < 8) {
      play_array(bd, combinor(beaat, [47]), dur = d);
    } else {
      beaat = rand_beat();
      d = d+100;
      if (d >1000) {
        d = 600;
      }
    }
  }
}

let dxblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    let arr = [];
    if (count % 4 < 2) {
      arr = p;
    }
    if (count % 3 == 2) {
      arr = q;
    }

    if (count % 7 == 0) {
      arr = scramble(arr);
    }
    if (count % 12 == 9) {
      arr = down(reverse(arr), 12);
      play_array(dx, p);
    }

    play_array(dx, arr);
  }
}

