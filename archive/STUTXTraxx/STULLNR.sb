# bpm 104;
# let bh = loop(glitchedVinyl/brutalHOP.wav); note_off(bh, 0)
# let giut = loop(glitchedVinyl/giutalooptwa.wav); note_off(giut, 0);
# let stp = loop(glitchedVinyl/stOP.wav); note_off(stp, 0);
# let qeb = loop(qebo/QEBO-LOCKDOWNFM-26FMPERCUSSION3.wav); note_off(qeb, 0);
# let bonv = loop(nuloopz/bongoOutVOCAL.wav); note_off(bonv, 0);
# let plbrd = loop(pads/italianDreamWithBirdz.aiff); note_off(plbrd, 0);
# let ready = loop(voices/readyOrNot2.wav); note_off(ready, 0); set ready:len 2;
# let callme = sample(voices/callme.wav); add_fx(callme, "delay");
# load_preset(mo, "flexxy0c");
# load_preset(dx, "SMMTH2");
# load_preset(dx3, "WURBKl"); load_preset(sbdrum, "TRUNK");
#
#let dx3 = fm();

# p1 $ melblah_gen
# p2 $ dbe2blah_gen;
# p3 $ dabasslah_gen

# p1 $ "";
# p2 $ ""
# let kdr = loop(dloops2/kdrttd.wav); set kdr:len 2; vol kdr 0 ; add_fx(kdr, "distort")
# sched(0, 0, 1, 3840*2, "vol kdr %");
# p4 $ bssBOOMlah_gen; vol dx3 0.7
# p1 $ gliblah_gen; p3 $""
# p2 $ dabass2lah_gen ; p4 $ bssBOOM2lah_gen
# p4 $ callblah_gen
# vol kdr 0
# p5 $ dumbblah_gen
# p6 $ modrumzblah_gen; load_preset(sbdrum, "HRF2");

let playblah_fn = fn(mid_num, pat)
{
  for (let i = 0; i < 16; i++) {
    if (pat[i] == 1) {
      note_on_at(sbdrum, mid_num, i * pp);
    }
  }

}

let beatblah_gen = gen()
{
  setup()
  {
    let bjz = [3, 5, 7, 11];
    let bx = 0;
    #let percz = [bh, giut, stp];
    let percz = [bh, giut, stp];
    let px = 0;
    let drr = 10;
    let idx = 0;
    let maxx = 3;

    let cntr = 0;
  }
  run()
  {

    let beat = bjork(bjz[bx], 16);
    let invbeat = invert(beat);
    bx = incr(bx, 0, len(bjz));

    if (cntr % 12 < 8) {
      playblah_fn(0, beat);
    }
    cntr++;

    for (let i = 0; i < 16; i++) {
      if (invbeat[i] == 1) {
        note_on_at(percz[px], idx, i * pp, dur = drr, vel = 80 + rand(47));
        idx = incr(idx, 0, maxx);
        px = incr(px, 0, len(percz));
        drr = drr + 10;
        if (drr > 200) {
          drr = 10;
        }
      }
    }
    maxx = incr(maxx, 3, 16);
    if (count % 4 == 2) {
      cmbeat(sbdrum, 3);
    }
    if (count % 4 == 3) {
      hhmbeat(sbdrum, 2);
    }
  }
}

let dbe2blah_gen = gen()
{
  setup()
  {
    let beat = [1, 0, 0, 1,  0, 0, 1, 0,  0, 0, 1, 0,  1, 0, 0, 0];
    # let nzz = [qeb, bonv];
    let nzz = [qeb, bonv];
    let nzx = 0;
    let drz = [50, 100, 150, 75, 10, 50];
    let drx = 0;
    let idx = 0;
    let idmax = 4;
    let cntr = 0;
  }
  run()
  {
    if (cntr % 12 < 8) {
      playblah_fn(0, beat);
    }
    cntr++;
    for (let i = 0; i < 16; i++) {
      if (beat[i] == 0) {
        note_on_at(nzz[nzx], idx, i * pp, dur = drz[drx]);
        drx = incr(drx, 0, len(drz));
        nzx = incr(nzx, 0, len(nzz));
      }
    }
    idx = incr(idx, 0, idmax);
    if (count % 4 == 0) {
      idmax = incr(idmax, 4, 16);
    }
  }
}

# glassr // WHHXc //
let pcontblah_gen = gen()
{
  setup()
  {
    let mcntr = 0;
  }
  run()
  {
    if (count % 16 < 4) {
      dbe2blah_gen();
      load_preset(dx, "SNURFz");
      melblah_gen();
    } else {
      if (count % 16 < 8) {
        beatblah_gen();
        dabasslah_gen();
        load_preset(dx, "SMMTH2");
        melblah_gen();
      } else {
        if (count % 16 < 12) {
          dbe2blah_gen();
          dabasslah_gen();
        } else {
          load_preset(dx, "glassr");
          melblah_gen();
        }
      }
    }

    if (mcntr > 16) {
      if (count % 8 < 6) {
        genmelblah_gen();
      }
      if (count % 16 > 13) {
        gen2melblah_gen();
      }
    }

    if (count % 5 < 3) {
      solo(sbdrum, at=12*pp);
    }
    bsslah_gen();


    mcntr++;
  }
}

let key = 50;
# minor
let keymod = 1;

let melblah_gen = gen()
{
  setup()
  {
    let bjz = [3, 5, 7, 11];
    let bx = 0;
    let prg = [50, 57, 58, 55];
    let prx = 0;
    let drz = [50, 100, 150, 80, 10];
    let drx =0;
  }
  run()
  {
    if (count % 13 < 12) {
      let beat = bjork(bjz[bx], 16);
      bx = incr(bx, 0, len(bjz));
      let chrd = notes_in_chord(prg[prx], key, 1, keymod);
      if (count % 4 == 0) {
        prx = incr(prx, 0, len(prg));
        drx = incr(drx, 0, len(drz));
      }
      for (let i = 0; i < 16; i++) {
        if (beat[i] == 1) {
          note_on_at(dx, chrd, i * pp, dur = drz[drx], vel = 80 + rand(47));
        }
      }
    }
  }
}

let bsslah_gen = gen()
{
  setup()
  {
    let bass1 = [57, 50, 0, 0,  0, 50, 0, 0,  0, 50, 0, 0,  53, 0, 0, 0];
    let bass2 = [57, 0, 0, 55,  0, 50, 0, 0,  0, 0, 52, 0,  53, 0, 53, 0];
    let bass3 = [0, 0, 57, 0,  0, 0, 57, 0,  0, 0, 57, 0,  0, 57, 0, 0];
    let bazz = [bass1, bass2, bass3];
    let bx = 0;
  }
  run()
  {
    if (count % 4 == 0) {
      bx = incr(bx, 0, len(bazz));
    }
    let bass = down(bazz[bx], 24);
    for (let i = 0; i < 16; i++) {
      if (bass[i] > 0) {
        note_on_at(dx2, bass[i], i * pp, dur = 300);
      }
    }
    if (count % 5 == 3) {
      sched(0, 1, 2, 3840, "set dx2:o1rat %");
      sched(3840, 1, 1, 0, "set dx2:o1rat %");
    }
  }
}

# flexxy0c
let dabasslah_gen = gen()
{
  setup()
  {
    let bass1 = [26, 0, 26, 33,  0, 26, 0, 29,  0, 0, 26, 0,  26, 0, 0, 0];
    let bass2 = [14, 0, 14, 0,  14, 0, 14, 0,  14, 0, 19, 0,  14, 0, 0, 0];
    let bassz = [bass1, bass1, bass1, bass2];
    let bx = 0;
    let octz = [0, 0, 12, 12, 24];
    let ox = 0;
    let drz = [40, 100, 150, 200, 10, 50, 300];
    let drx = 0;

  }
  run()
  {
    let bass = up(bassz[bx], octz[ox]);
    ox = incr(ox, 0, len(octz));
    bx = incr(bx, 0, len(bassz));
    for (let i = 0; i < 16; i++) {
      if (bass[i] > 0) {
        note_on_at(mo, bass[i], i * pp, dur = drz[drx], vel = 110 + rand(17));
        drx = incr(drx, 0, len(drz));
      }
    }
  }
}

#  let dx3 = fm(); load_preset(dx3, "WURBKl");
let genmelblah_gen = gen()
{
  setup()
  {
    # [50, 52, 53, 55,  57, 58, 60, 62]
    let notez = notes_in_key(key, keymod);
    let plxz = [0, 1, 3, 3, 0, 4, 7, 7, 5, 2, 3, 0, 3, 4, 2, 0];
    let plx = 0;
    let drz = [10, 50, 100, 200, 400, 500];
    let drx = 0;
  }
  run()
  {
    for (let i = 0; i < 16; i++) {
      let nt = notez[plxz[plx]];
      plx = incr(plx, 0, len(plxz));
      note_on_at(dx3, nt, i * pp, dur = drz[drx]);
      drx = incr(drx, 0, len(drz));
    }
  }
}

let gen2melblah_gen = gen()
{
  setup()
  {
    # [26, 28, 29, 31,  33, 34, 36, 38]
    let notez = notes_in_key(key - 12, keymod);
    let plxz = [1, 0, 1, 4, 6, 7, 6, 3, 3, 1, 0, 1, 4, 5, 3, 4];
    let plx = 0;
    let drz = [10, 20, 50, 100, 200, 1000, 400, 500];
    let drx = 0;
  }
  run()
  {
    for (let i = 0; i < 16; i++) {
      let nt = notez[plxz[plx]];
      plx = incr(plx, 0, len(plxz));
      if (count % 3 == 0) {
        note_on_at(dx3, nt, i * pp, dur = drz[drx]);
      }
      if (count % 2 == 0) {
        note_on_at(dx2, nt, i * pp, dur = drz[drx]);
      }
      note_on_at(dx, nt, i * pp, dur = drz[drx]);
      drx = incr(drx, 0, len(drz));
    }
  }
}

let bssBOOMlah_gen = gen()
{
  setup()
  {
    # [50, 52, 53, 55,  57, 58, 60, 62]
    let bass1 = [50, 0, 0, 50,  0, 50, 0, 50,  0, 50, 0, 0,  50, 0, 50, 0];
    let bazz = [bass1];
    let bx = 0;
    let d = 50;
  }
  run()
  {
    if (count % 4 == 0) {
      bx = incr(bx, 0, len(bazz));
    }
    let bass = down(bazz[bx],24);
    for (let i = 0; i < 16; i++) {
      if (bass[i] > 0) {
        note_on_at(dx3, bass[i], i * pp, dur = d);
        d = d + 10;
        if (d > 200) {
          d = 40;
        }
      }
    }
    if (count % 16 == 15) {
      solo(dx3, at=12*pp);
    }
  }
}

let bssBOOM2lah_gen = gen()
{
  setup()
  {
    # [50, 52, 53, 55,  57, 58, 60, 62]
    let bass1 = [50, 0, 52, 50,  0, 50, 0, 52,  0, 50, 0, 57,  50, 0, 0, 0];
    let bazz = [bass1];
    let bx = 0;
    let d = 50;
  }
  run()
  {
    if (count % 4 == 0) {
      bx = incr(bx, 0, len(bazz));
    }
    let bass = down(bazz[bx],24);
    for (let i = 0; i < 16; i++) {
      if (bass[i] > 0) {
        note_on_at(dx3, bass[i], i * pp, dur = d);
        d = d + 10;
        if (d > 200) {
          d = 40;
        }
      }
    }
  }
}

let gliblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 7 == 3) {
      set kdr:stutter 1;
    }
    if (count % 8 == 2) {
      set kdr:scramble 1;
    }
  }
}


let dabass2lah_gen = gen()
{
  setup()
  {
    let bass1 = [26, 0, 0, 14,  0, 26, 0, 14,  0, 0, 19, 0,  14, 0, 26, 0];
    let drz = [40, 100, 150, 200, 10, 50, 300];
    let drx = 0;

  }
  run()
  {
    let bass = bass1;
    for (let i = 0; i < 16; i++) {
      if (bass[i] > 0) {
        note_on_at(mo, bass[i], i * pp, dur = drz[drx], vel = 110 + rand(17));
        drx = incr(drx, 0, len(drz));
      }
    }
  }
}

let callblah_gen = gen()
{
  setup()
  {
    let dr = 500;
    let px = 4;
  }
  run()
  {
    if (count % 2 == 0) {
      note_on_at(callme, 1, px * pp, dur = dr, vel = 100);
      px = px + 2;
      if (px > 15) {
        px = px - 15;
      }
      dr = dr + 50;
      if (dr > 400) {
        dr = 150;
      }
      sched(0, 0, 99, 3840, "set callme:fx0:fb %");
      sched(3840, 0, 0, 0, "set callme:fx0:fb %");
    }
  }
}

let dumbblah_gen = gen()
{
  setup()
  {
    # [50, 52, 53, 55,  57, 58, 60, 62]
    # [62, 64, 65, 67,  69, 70, 72, 74]
    # [26, 28, 29, 31,  33, 34, 36, 38]
    let mel1 = [0, 0, 26, 0,  0, 0, 26, 0,  0, 0, 28, 0,  50, 0, 0, 55];
    let mel2 = [26, 0, 0, 50,  0, 0, 57, 0,  28, 0, 0, 50,  0, 33, 0, 0];
    let drz = [50, 100, 150, 200];
    let drx = 0;
  }
  run()
  {
    let mel = mel1;
    if (count % 4 == 3) {
      mel = mel2;
    }
    for (let i = 0; i < 16; i++) {
      if (mel[i] > 0) {
        note_on_at(dx, mel[i], i * pp, dur = drz[drx]);
        drx = incr(drx, 0, len(drz));
      }
    }
  }
}

let modrumzblah_gen = gen()
{
  setup()
  {
    let bdz = [1, 0, 0, 1,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0];
    #let perx = [qeb, stp, giut];
    let perx = [ready];
    let prx = 0;
    let perccount = 0;
    let drzz = 10;
  }
  run()
  {
    cmbeat(sbdrum, 3);
    cmbeat(sbdrum, 1);
    playblah_fn(0, bdz);

    if (count % 4 == 3) {
      let hatz = rand_array(16, 0, 1);
      for (let i = 0; i < 16; i++) {
        let offz = 20;
        if (i % 2 == 0) {
          offz = 0;
        }
        if (hatz[i] == 1) {
          note_on_at(sbdrum, 2, i * pp + offz, vel = 20 + rand(30));
        } else {
          note_on_at(perx[prx], 1, i * pp + offz, vel = 10, dur = drzz);
          prx = incr(prx, 0, len(perx));
          drzz = incr(drzz, 10, 100);
        }
      }
    }
  }
}

