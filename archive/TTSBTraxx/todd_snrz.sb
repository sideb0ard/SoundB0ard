#let sn = sample(TTUnreleaseProject/snare.wav)
#let sn2 = sample(TTUnreleaseProject/snare3.wav)
#let sn3 = sample(TTUnreleaseProject/snr4.wav)
#let snares = [sn, sn2, sn3]

let snare_sort = gen()
{
    setup()
    { 
      let sn_idx = 0
    }

    run()
    {
      let inc = 3840 / num_beats;
      let rhythm = randy_array(num_beats, 0, len(snares)) 
      for ( i = 0 ; i < num_beats ;  ++i ) {
        noteOnDelayed(snares[sn_idx], 1, i*inc)
        sn_idx = incr(sn_idx, 0, len(snares))
			}
      num_beats = incr(num_beats, 3, 16)
    }
}
let uh_sort = gen()
{
    setup()
    { 
      let idx = 0
      let num_beats = 4;
    }

    run()
    {
      let inc = 3840 / (num_beats/2);
      let rhythm = randy_array(num_beats, 0, len(uhs)) 
      for ( i = 0 ; i < num_beats ;  ++i ) {
        noteOnDelayed(uhs[idx], 1, i*inc)
        idx = incr(idx, 0, len(uhs))
			}
      # num_beats_x2 = incr(num_beats, 3, 16)
    }
}

let randy_array = fn(alen, lower, upper)
{
     let array = []
     # blah = alen
     if (alen > 0 && lower < upper) {
     for (i = 0; i < alen; ++i)
     {
        let randy = rand(upper+1) + lower;
        if ( randy > upper) {
          puts("RANDY is:", randy, " more than ", upper);
          randy = (randy % (upper - lower)) + lower;
        }
        array = push(array, randy);
     }
     } else {
       puts("YO, SORT IT!");
     }
     return array;
}
