# let bong = loop(loops2/bonhoogos.wav); set bong:len 2;
# let hatzd = loop(dloops2/hatzDISCo.wav);
# let fnk = loop(dloops2/funkshuffle.wav);
# let tens = loop(dloops2/tensionrules.wav); set tens:len 2; vol tens 0.6; p1 $ jump_gen


let mashupToo = fn(pat, soundgz)
{
  for (i = 0; i < 16; ++i) {
    if (pat[i] < len(soundgz)) {
      note_on_at(soundgz[pat[i]], 1, i * pp);
    }
  }
}

let jump_gen = gen()
{
  setup()
  {
    let pat = rand_array(16, 0, 0);
    for (i = 0; i < 16; ++i) {
      pat[i] = rand(3);
    }
    let loopz = [bong, hatzd, tens];
  }
  run()
  {
    if (count % 4 == 0) {
      for (i = 0; i < 16; ++i) {
        pat[i] = rand(3);
      }
    }

    set bong:on 1;
    set hatzd:on 1;
    # set tens:on 1;
    if (count % 8 == 0) {
      mashupToo(pat, loopz);
    }
    if (count % 13 == 0) {
      mashup(loopz);
    }

    if (count % 3 == 0) {
      set fnk:stutter 1;
      set bong:on 1;
      set hatzd:on 1;
    }
    if (count % 4 == 0) {
      set fnk:scramble 1;
      set tens:on 1;
    }
  }
}

let key = 15;
let  mel = riff(key);
# gamelody(16, 17);
# BASSZZ // or DUUSRTY
let mmblah_gen = gen()
{
  setup()
  {
    #let mel = gamelody(16, key);
    let mmx = 3;
    let mx = 0;
    let d = 250;
    let dalen = 6;

    let swng = 160;
  }
  run()
  {
    if (count % 2 == 0) {

      for (i = 0; i < 16; ++i) {
        stepper(per1, mel, mx, i, d);
        mx =incr(mx, 0, mmx);
      }
      d = d + 30;
      if (d > 400) {
        d = 50;
      }
    }

    mmx = incr(mmx, 3, 16);
    if (count % 8 == 0) {
      #mel = gamelody(16, key);
      mel = riff(key);
    }
    if (count % 8 == 6) {
      #mel = gamelody(16, key + 12);
      mel = riff(key + 12);
    }
  }
}

# load_preset(per2, "roobot"); vol bong 0
# p3 $ cmelblah_gen;  vol fnk 0; vol hatzd 0

# per2 = GRSTL // PHART // scicczr // LICTRx // DURTH // roobot
let cmelblah_gen = gen()
{
  setup()
  {
    let ntz = notes_in_chord(key);
    let nx = 0;
    let nax = 1;
    let bet = rand_beat();
    let dr = 150;
    let swng = 44;
  }
  run()
  {
    if (count % 8 == 7) {
      let bet = rand_beat();
    }
    if (count % 2 == 1) {
      for (i = 0; i < 16; ++i) {
        let offs = swng;
        if (i % 2 == 0) {
          offs = 0;
        }
        if (bet[i] == 1) {
          note_on_at(per2, ntz[nx], i * pp + offs, dur = dr);
          nx = incr(nx, 0, nax);
        }
      }
      dr = dr + 30;
      if (dr > 470) {
        dr = 40;
      }
    }
    if (count % 4 == 0) {
      nax = incr(nax, 1, len(ntz));
    }
  }
}

# let rvr = loop(loops2/reversrr.wav); set rvr:len 4
# let blpp = loop(loops2/bleepsloop.wav);
let wmblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 6 == 2) {
      set wmp:scramble 1;
    }
    if (count % 6 == 3) {
      set wmp:stutter 1;
    }
    if (count % 4 ==3 ) {
      set blpp:stutter 1;
      set tens:stutter 1;
    }
  }
}

# bpm 95; let hz = loop(dloops2/hazehop.wav)
#let stw = loop(dloops2/startingwit.wav); p5 $ ssblah_gen
let ssblah_gen = gen()
{
  setup()
  {
    let bet = rand_beat();
  }
  run()
  {
    if (count % 2 == 0) {
      set stw:on 1;
    }
    if (count % 3 == 0) {
      set hz:on 1;
      set stw:stutter 1;
    }
    if (count % 4 == 0) {
      set stw:scramble 1;
      set hz:stutter 1;
    }
    mashupToo(bet, [stw, hz, tens]);

    if (count % 8 == 0) {
      bet = rand_beat();
    }
    if (count % 16 == 15) {
      solo(stw, at=12*pp);
    }
  }
}

# p6 < osc 8 "0 0.6" "send(1, hz, %)"

let jam = sample(voices/jamhot.wav);
let its = sample(voices/ityoursShort.aiff);
let scrz = sample(voices/DJPLZ.wav);


let smblah_gen = gen()
{
  setup()
  {
    let dr = 50;
    let bet = rand_beat();
    let smz = [jam, scrz, scrz];
    let sx = 0;
    let smx = 1;
  }
  run()
  {
    if (count % 4 == 0) {
      bet = rand_beat();
    }
    if (count % 4 == 1) {
      for (i = 0; i < 16; ++i) {
        if (bet[i] == 1) {
          note_on_at(smz[sx], 1, i * pp, dur = dr);
          sx = incr(sx, 0, smx);
        }
        dr = dr + 10;
        smx = incr(smx, 0, len(smz));
        if (dr > 250) {
          dr = 10;
        }
      }
    }

  }
}

# per3 = SLOWHH // GLEATX // gnoize // wurlrlrlr // TRASHP
let nwwwblah_gen = gen()
{
  setup()
  {
    let dr = 100;
    let swng = 120;
  }
  run()
  {
    if (count % 2 == 1) {
      let k = key;
      if (count % 8 > 6) {
        k = key - 12;
      }
      let imel = combinor(invert(mel), notes_in_chord(k));;
      for (i = 0; i < 16; ++i) {
        let offs = swng;
        if (i % 2 == 0) {
          swng = 0;
        }
        if (imel[i] > 0) {
          note_on_at(per3, imel[i], i * pp + offs, dur = dr);
        }
      }
      dr = dr + 30;
      if (dr > 200) {
        dr = 70;
      }
    }
  }
}

