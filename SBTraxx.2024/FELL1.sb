


let timebetween = 240;

let fblah_gen = gen()
{
  setup()
  {
    let rollover = 0;

    let chlen = 1;

    let modz = 1;
  }
  run()
  {
    let remainder = 3840 - rollover;
    let offset = rollover;

    # print("REMAINDER:", remainder, " OFFSET:", offset, " ROLLOVER:", rollover);

    let chrd = notes_in_chord(36, 60, modz);
    let play_chrd = [];

    for (let i = 0; i < chlen; i++) {
      push(play_chrd, chrd[i]);
    }

    for (let i = offset; i < 3840; i = i + timebetween) {
      let note_len = rand(timebetween);
      note_on_at(dx, play_chrd, i, dur = note_len);
      #note_on_at(sbdrum, 0, i);
      remainder = remainder - timebetween;
    }

    chlen = incr(chlen, 1, 4);

    if (count % 4 == 3) {
      modz = incr(modz, 0, 4);
      timebetween = timebetween + 10;
      if (timebetween > 570) {
        timebetween = 240;
      }
    }

    rollover = abs(remainder);

  }
}

let chblah_gen = gen()
{
  setup()
  {
    let ntz = [45, 40, 38];
    let nx = 0;
    let lenz = [6, 4, 16, 8, 2, 16];
    let lx = 0;
    let strtz = [ [0, 8, 14], [], [0, 10, 14], []];
    let stx = 0;
  }
  run()
  {
    let pat = strtz[stx];
    stx = incr(stx, 0, len(strtz));
    for (let i = 0; i < len(pat); i++) {
      note_on_at(dx, notes_in_chord(ntz[nx], 36, 1), pat[i] * pp, dur = lenz[lx]);
      nx = incr(nx, 0, len(ntz));
      lx = incr(lx, 0, len(lenz));
    }
  }
}

