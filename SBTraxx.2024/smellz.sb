# bpm 104 // dx - fnacccx
let IVblah_gen = gen()
{
  setup()
  {
    # F#
    let key = 30;
    # D#
    # let key = 13;
    let notez = notes_in_key(key);
    # I - vi - IV - V
    #let prog = [ notez[0], notez[5], notez[3], notez[4] ];
    # vi - IV - I - V
    let prog = [ notez[5], notez[3], notez[0], notez[4] ];
    # I - IV - V
    #let prog = [ notez[0], notez[0], notez[3], notez[4] ];
    let px = 0;
    let bjz = [3, 5, 9, 4, 7, 2];
    let bx = 0;
    let velz = [100, 90, 90, 100, 110, 127, 127, 127, 110];
    let vx = 0;
    let drz = [50, 500, 100, 1000, 150, 500, 700, 2000, 250, 170, 160, 210];
    #let drz = [5000, 500, 2000, 1000, 150];
    let drx = 0;
  }
  run()
  {
    if (count % 8 < 7) {
      let b = bjork(bjz[bx], 16);
      for (let i = 0; i < 16; i++) {
        if (b[i] == 1) {
          note_on_at(dx, notes_in_chord(prog[px], key), i * pp, vel = velz[vx], dur = drz[drx]);
          vx = incr(vx, 0, len(velz));
          drx = incr(drx, 0, len(drz));
        }
      }
      px = incr(px, 0, len(prog));
      bx = incr(bx, 0, len(bjz));
    } else {
      let riff = chord_riff(notes_in_chord(prog[px], key));
      print("riff", riff);
      for (let i = 0; i < 16; i++) {
        if (riff[i] > 0) {
          note_on_at(dx, riff[i], i * pp, vel = velz[vx], dur = drz[drx]);
        }
      }
    }
  }
}

let playblah_fn = fn(id, pat)
{
  for (let i = 0; i < len(pat); i++) {
    note_on_at(sbdrum, id, pat[i] * pp);
  }
}

# p3 < osc 16 "50 5000" "set sbdrum:cp_eg_release %"
# p4 < osc 7 "0.1 0.6" "set sbdrum:cp_eg_sustain %"
let dblah_gen = gen()
{
  setup()
  {
    let bdz = [0, 3, 5, 6, 9, 10];
    let chz = [0, 2, 4, 6, 8, 10, 12];
    let ohz = [14];
    let cp = [4, 12];
    let cpdz = [23, 3, 5, 8];
    let cpx = 0;
    set sbdrum:bd_key 30;
  }
  run()
  {
    if (count % 30 < 29) {
      playblah_fn(2, chz);
    }
    if (count % 16 < 15) {
      playblah_fn(0, bdz);
    }
    if (count % 8 < 6) {
      playblah_fn(3, cp);
      playblah_fn(4, ohz);
    }
    set sbdrum:cp_delay_ms cpdz[cpx];
    cpx = incr(cpx, 0, len(cpdz));
  }
}

