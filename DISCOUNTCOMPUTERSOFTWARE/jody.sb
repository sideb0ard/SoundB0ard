# f
#let key = 40;
#let key = 30;
let key = 30;

let jdy = sample(aaassembly/heyJODY.wav);

# bpm 120
# let intr = loop(legowelt/Synth-InterBellumAtmo.wav); set intr:len 2
# let rkk = loop(dloops/rockafellayall2bar.aiff); set rkk:len 2; set rkk:pitch 1.2
# let rks = loop(dloops/rocksteady_vocal.aif);
# p2 $ jblah_gen

let jblah_gen = gen()
{
  setup()
  {
    let d = 10000;
    let rklen = 1;
  }
  run()
  {
    if (count % 8 == 0) {
      let b = rand_beat();
      for (i = 0; i < 16; ++i) {
        if (b[i] == 1) {
          note_on_at(jdy, 1, i * pp, dur = d);
        }
      }
      d = d + 1000;
      if (d > 50000) {
        d = 100;
      }
    }
    if (count % 8 == 7) {
      set rkk:stutter 1;
    }
    if (count % 8 == 6) {
      set rks:reverse 1;
    }
    if (count % 3 == 0) {
      set rks:len 1 + rklen;
      rklen = 1 - rklen;
    }

    if (count % 8 == 5) {
      set intr:vol 0;
      mashup([rkk, intr, rks]);
    }
    if (count % 12 == 11) {
      set intr:vol 0.7;
      solo(intr, at=8*pp);
    }
  }
}
# p4 < osc 8 "0 0.5" "send(0, [jdy, intr], %)"
# p5 < osc 7 "0 0.5" "send(1, [jdy, intr], %)"

# let jb = loop(aaassembly/jungleBREAKDOWN.wav); set jb:len 4;


# mo = RUBBERduck

let bassblah_gen = gen()
{
  setup()
  {
    let mel1 = [30, 0, 0, 32, 0, 0, 32, 0, 0, 40, 0, 40, 41, 0, 30, 0];
    let mel2 = [40, 0, 0, 33, 0, 40, 0, 41, 0, 0, 32, 0, 40, 0, 30, 0];
    let melz = [mel1, mel2];
    let mx = 0;

    let midx = 0;
    let midxmax = 3;

    let dr = 200;
  }
  run()
  {
    if (count % 3 == 0) {
      mx = incr(mx, 0, len(melz));
    }
    if (count % 4 < 2) {
      let mel = melz[mx];
      for (i = 0; i < 16; ++i) {
        if (mel[i] > 0) {
          note_on_at(mo, mel[i], i * pp, dur = dr);
        }
      }
    }
    if (count % 4 == 3) {
      let mel = melz[mx];
      for (i = 0; i < 16; ++i) {
        stepper(mo, mel, midx, i, dur = dr);
        midx = incr(midx, 0, midxmax);
      }
      midxmax = incr(midxmax, 3, 16);
    }
    dr = dr + 50;
    if (dr > 400) {
      dr = 100;
    }
  }
}

