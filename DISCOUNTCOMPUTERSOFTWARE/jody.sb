# f
#let key = 40;
#let key = 30;
#let key = 30;
let key = 14;

let jdy = sample(aaassembly/heyJODY.wav);

# bpm 110 ; let cr = loop(loops2/crdunk.wav); set cr:len 2 ; set cr:vol 0 at=3840*2;
# let intr = loop(legowelt/Synth-InterBellumAtmo.wav); set intr:len 2;
# let rkk = loop(dloops/rockafellayall2bar.aiff); set rkk:len 2;
# let rks = loop(dloops/rocksteady_vocal.aif);  p2 $ jblah_gen

let jblah_gen = gen()
{
  setup()
  {
    let d = 10000;
    let rklen = 1;
  }
  run()
  {

    set cr:vol 0;
    if (count % 8 == 0) {
      let b = rand_beat();
      for (i = 0; i < 16; ++i) {
        if (b[i] == 1) {
          note_on_at(jdy, 1, i * pp, dur = d);
        }
      }
      d = d + 1000;
      if (d > 50000) {
        d = 100;
      }
    }
    if (count % 8 == 7) {
      set rkk:stutter 1;
      set cr:vol 1 at=pp*8;
    }
    if (count % 8 == 6) {
      set rks:reverse 1;
      set cr:vol 1 at=pp*4;
    }
    if (count % 3 == 0) {
      set rks:len 1 + rklen;
      rklen = 1 - rklen;
    }

    if (count % 8 == 5) {
      set intr:vol 0;
      mashup([rkk, intr, rks]);
    }
    if (count % 12 == 11) {
      set intr:vol 0.7;
      solo(intr, at=8*pp);
      set cr:vol 1;
    }
  }
}
# p4 < osc 8 "0 0.5" "send(0, [jdy, intr], %)"
# p5 < osc 7 "0 0.5" "send(1, [jdy, intr], %)"

# let jb = loop(aaassembly/jungleBREAKDOWN.wav); set jb:len 4;


# dx2 ratz // wururrrp
let keyblah_gen = gen()
{
  setup()
  {
    let key = 14;
    let ntz = notes_in_key(key);
    let chrdz = [ notes_in_chord(ntz[5], 1), notes_in_chord(ntz[1], 1), notes_in_chord(ntz[4]), notes_in_chord(ntz[0])];
    let chx = 0;
    let beat = [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0];
    let rf = combinor(beat, chrdz[chx]);
    let d = 50;
  }
  run()
  {
    if (count % 4 == 0) {
      chx = incr(chx, 0, len(chrdz));
      rf = combinor(beat, chrdz[chx]);
    }
    if (count % 8 < 8) {
      for (i = 0; i < 16; ++i) {
        let v = 100 + rand(27);
        if (i % 4 == 0) {
          v = 127;
        }
        if (rf[i] > 0) {
          note_on_at(dx2, rf[i], i * pp, dur = d, vel = v);
        }
      }
    }
    d = d + 50;
    if (d > 350) {
      d = 50;
    }
  }
}

# per1 - GHOSTXZ // per2 TWANrG //
let bassblah_gen = gen()
{
  setup()
  {
    let mel1 = [30, 0, 0, 32, 0, 0, 32, 0, 0, 40, 0, 40, 41, 0, 30, 0];
    let mel2 = [40, 0, 0, 33, 0, 40, 0, 41, 0, 0, 32, 0, 40, 0, 30, 0];
    let melz = [mel1, mel2];
    let mx = 0;

    let midx = 0;
    let midxmax = 3;

    let dr = 200;
  }
  run()
  {
    if (count % 3 == 0) {
      mx = incr(mx, 0, len(melz));
    }
    if (count % 4 < 3) {
      let mel = melz[mx];
      for (i = 0; i < 16; ++i) {
        if (mel[i] > 0) {
          note_on_at(per1, mel[i], i * pp, dur = dr);
        }
      }
    }
    #if (count % 4 == 3) {
      #  let mel = melz[mx];
      #  for (i = 0; i < 16; ++i) {
        #    stepper(per2, mel, midx, i, dr);
        #    midx = incr(midx, 0, midxmax);
        #  }
      #  midxmax = incr(midxmax, 3, 16);
      #}
    dr = dr + 50;
    if (dr > 400) {
      dr = 100;
    }
  }
}

# dx = wuurpr // fnc // l0renzo4 // wuuurodx
let dxblah_gen = gen()
{
  setup()
  {
    #let ocz = [ 4, 16];
    let ocz = [ 30, 40];
    let ox = 0;
    let dxmel = gamelody(16, ocz[ox]);
    let sx = 0;
    let smx = 3;
    let dr = 100;
  }
  run()
  {

    if (count % 8 < 6) {
      for (i = 0; i < 16; ++i) {
        if (dxmel[i] > 0) {
          let v = 80 + rand(47);
          if (i % 4 == 2) {
            v = 127;
          }
          note_on_at(dx, dxmel[i], i*pp, vel = v, dur = dr);
        }
      }
    }
    if (count % 12 == 0) {
      let dxmel = gamelody(16, ocz[ox]);
      ox = incr(ox, 0, len(ocz));
    }
    if (count % 8 == 6) {
      for (i = 0; i < 16; ++i) {
        stepper(dx, dxmel, sx, i, dr);
        sx = incr(sx, 0, smx);
      }
    }
    smx = incr(smx, 3, 16);
    dr = dr + 20;
    if (dr > 270) {
      dr = 50;
    }
  }
}

let bodylah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 4 == 3) {
      set ab:stutter 1;
      set rks:vol 0;
      set rkk:stutter 1;
    }
    if (count % 4 == 0) {
      set ab:scramble 1;
      set rks:vol 0.7;
      set rkk:scramble 1;
    }
    set rks:stutter 1;
  }
}

