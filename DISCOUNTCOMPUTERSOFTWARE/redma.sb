# let rdm = loop(aaassembly/readman.wav); set rdm:len 2; bpm 90; p1 $ rdblah_gen

let rdblah_gen = gen()
{
  setup()
  {
    let pz = [1, 2, 3, 4];
    let px = 0;

  }
  run()
  {
    set rdm:pinc pz[px];
    px = incr(px, 0, len(pz));

    if (count % 4 == 0) {
      set rdm:stutter 1;
    }
    if (count % 3 == 0) {
      set rdm:scramble 1;
    }
    if (count % 16 == 15) {
      set rdm:reverse 1;
    }
  }
}

# dx = siiiiney // WTOOF
let dblah_gen = gen()
{
  setup()
  {
    # Ab # key 9 with rdm // 11
    let key = 16;
    # let base_mel = [0, 15, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 15, 0];
    let base_mel = gamelody(16, key);
    let dr = 200;
    let bx = 0;
    let bmx = 3;

  }
  run()
  {
    let mel = base_mel;
    set rdm:pitch 1;
    if (count % 8 == 7) {
      mel = up(base_mel, 12);
      set rdm:pitch 2;
    }
    if (count % 8 == 6) {
      mel = down(base_mel, 12);
      set rdm:pitch 0.5;
    }
    if (count % 6 < 3) {
      for (i = 0; i < 16; ++i) {
        let v = 90 + rand(37);
        if (i % 4 == 2) {
          v = 127;
        }
        if (mel[i] > 0) {
          note_on_at(dx, mel[i], i*pp, dur = dr, vel = v);
        }
      }
    }
    if (count % 6 == 3) {
      let mmel = gamelody(16, key);
      for (i = 0; i < 16; ++i) {
        let v = 90 + rand(37);
        if (i % 4 == 2) {
          v = 127;
        }
        if (mmel[i] > 0) {
          note_on_at(dx, mmel[i], i*pp, dur = dr, vel = v);
          #note_on_at(cb, mmel[i]+36, i*pp, dur = dr, vel = v);
          dr = dr + 30;
        }
      }
    }
    if (count % 6 == 4) {
      for (i = 0; i < 16; ++i) {
        stepper(dx, mel, bx, i, 100);
        bx = incr(bx, 0, bmx);
      }
      bmx = incr(mbx, 3, 16);
    }

    dr = dr + 50;
    if (dr > 450) {
      dr = 150;
    }

    if (count % 8 == 0) {
      base_mel = gamelody(16, key);
    }

  }
}

let bd = sample(TT-BLACKRIOT-DAYINLIFE/bd.wav);
# add_fx( rdm, "sidechain", bd);
let bdlah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    dbeat(bd);
  }
}

