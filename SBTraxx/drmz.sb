
# C1
let kyz = [13, 17, 24];
let kx = 0;
let Key = 13;
let bdnote = Key - 12;
let sdnote = Key + 24;

let keyblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 8 == 0) {
      Key = kyz[kx];
      kx = incr(kx, 0, len(kyz));
    }
    if (count % 3 == 0) {
      set mk:stutter 1;
    }
    if (count % 4 == 0) {
      set mk:reverse 1;
    }
  }
}

let drmz_gen = gen()
{
  setup()
  {
    let bjz = [3, 5, 7, 11];
    let bx = 0;
    let dr = 150;
  }
  run()
  {
    if (count % 16 == 15) {
      play_array(bd, combinor(bjork(bjz[bx],16), [bdnote]));
      bx = incr(bx, 0, len(bjz));
    } else {
      for (i = 0; i < 16; ++i) {
        if (i % 8 == 0) {
          note_on_at(bd, bdnote, i * pp, dur = dr);
        }
        if (i % 8 == 6) {
          note_on_at(sd, sdnote, i * pp - 30, dur = dr);
        }
      }
      dr = dr + 100;
      if (dr > 1000) {
        dr = 100;
      }
      if (count % 4 == 0) {
        note_on_at(bd, bdnote + 4, 14 * pp + rand(30) - 15, vel = 70, dur = 100);
        if (rand(100) > 60) {
          note_on_at(bd, bdnote + 3, 13 * pp + rand(30) - 15, vel = rand(70), dur = 100);
        }
        note_on_at(sd, sdnote, 10 * pp, vel = 60, dur = dr);
        note_on_at(sd, sdnote, 11 * pp - rand(70), vel = 50, dur = dr);
      }
    }
  }
}

# p4 < osc 4 "0.1 0.5" "send(0, [sd, hh], %);"
let hhnote = 48;
let hhblah_gen = gen()
{
  setup()
  {
    let lenz = [16, 8, 12, 2, 4, 16];
    let lx = 0;
    let sw = 20;
  }
  run()
  {
    if (count % 13 < 12) {
      let pp = 3840 / lenz[lx];
      for (i = 0; i < lenz[lx]; ++i) {
        let off = 0;
        if (i % 2 == 1) {
          off = sw;
        }
        note_on_at(hh, hhnote, i * pp + off);
      }
      lx = incr(lx, 0, len(lenz));
    }
  }
}

let pblah_gen = gen()
{
  setup()
  {
    let mel = notes_in_key(Key);
    let pat = rand_array(16, 0, 4);
    # let percz = [per1, per2, cb, cl];
    let percz = [per1, cb];
  }
  run()
  {
    if (count % 8 == 0) {
      pat = rand_array(16, 0, 4);
    }
    for (i = 0; i < 16; ++i) {
      if (pat[i] < len(percz)) {
        note_on_at(percz[pat[i]], Key - 12, i * pp);
      }
    }
  }
}

let woblah_gen = gen()
{
  setup()
  {
    let bodz = rand_array(16, 0, 6);
    let instz = [cl, cp, oh];
    let ix = 0;
    let notoff = 0;
    let swng = 50;
  }
  run()
  {
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        let off = 0;
        if (i% 2 == 1) {
          off = swng;
          swng = swng + 10;
          if (swng > 120) {
            swng = 50;
          }
        }
        if (bodz[i] < len(instz)) {
          note_on_at(instz[ix], scale_note(Key + notoff + ix, Key), pp * i + off);
          ix = incr(ix, 0, len(instz));
          notoff = incr(notoff, 0, 12);
        }
      }
    }
    if (count % 4 == 0) {
      bodz = rand_array(16, 0, 4);
    }
  }
}

let dxblah_gen = gen()
{
  setup()
  {
    let mel = gamelody(16, Key);
    let insz = [dx, dx2];
    let ix = 0;
    let ixlen = 3;
    let d = 50;
  }
  run()
  {
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        let v = 80 + rand(20);
        if (i % 4 == 0) {
          v = 127;
        }
        if (mel[i] > 0) {
          note_on_at(insz[ix], mel[i], i * pp, vel = v, dur = d);
        }
        if (i % ixlen == 0) {
          ix = incr(ix, 0, len(insz));
        }
      }
    }
    if (count % 8 == 0) {
      mel = gamelody(16, Key);
      d = d + 100;
      if (d > 600) {
        d = 50;
      }
    }
  }
}

let moblah_gen = gen()
{
  setup()
  {
    let mel = riff(Key);
    let offset = 60;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      let swg = 0;
      if (i % 2 == 1) {
        swg = offset;
      }
      if (mel[i] > 0) {
        note_on_at(mo, mel[i], i * pp + swg);
      }
    }
    if (count % 8 == 0) {
      mel = riff(Key);
    }
  }
}

