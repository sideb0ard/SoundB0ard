
let bd = sample(qebo/QEBO-LOCKDOWNFM-17FMKICK9.wav);
let wah = sample(qebo/QEBO-LOCKDOWNFM-36FMSNARE4.wav);
let kk1 = sample(qebo/QEBO-LOCKDOWNFM-41FMKICK2.wav);
let pl = sample(qebo/QEBO-LOCKDOWNFM-21FMPERCUSSION14.wav);
#let swp = sample(qebo/QEBO-LOCKDOWNFM-06FMHIGHHAT5.wav);
let swp = sample(garage/SideStick_Lindrum_24.wav);
let chk = sample(qebo/QEBO-LOCKDOWNFM-02FMHIGHHAT1.wav);
let instz = [bd, wah, kk1, pl, swp, chk];

let blah_gen = gen()
{
  setup()
  {
    let dr = 1450;
  }
  run()
  {
    if (count % 2 == 0) {
      let pp = 60;
      let beta = rand_beat();
      for (i = 0; i < 16; ++i) {
        if (beta[i] == 1) {
          note_on_at(bd, 1, i * pp, dur= dr);
        }
      }
      dr = 450;
    }
    if (count % 3 == 0) {
      let pp = 60;
      let beta = rand_beat();
      for (i = 0; i < 16; ++i) {
        if (beta[i] == 1) {
          note_on_at(instz[rand(len(instz))], 1, 960 + i * pp, dur = dr);
        }
      }
      dr = 250;
    }
    if (count % 4 == 0) {
      let pp = 60;
      let beta = rand_beat();
      for (i = 0; i < 16; ++i) {
        if (beta[i] == 1) {
          note_on_at(chk, 1, 1920 + i * pp, dur = dr);
        } else {
          note_on_at(swp, 1, 1920 + i * pp, dur = dr);
        }
      }
      dr = 150;
    }
    if (count % 7 == 0) {
      let pp = 60;
      let beta = rand_beat();
      for (i = 0; i < 16; ++i) {
        if (beta[i] == 1) {
          note_on_at(wah, 1, 2880 + i * pp, dur = dr);
        } else {
          note_on_at(instz[rand(len(instz))], 1, 2880 + i * pp, dur = dr);
        }
      }
      dr = 1500;
    }
  }
}
# let hhb = loop(dloops/hipHopBap.aiff);

let hh = sample(ch/pumpDistortHH.wav);
let hhblah_gen = gen()
{
  setup()
  {
    let pat = rand_array(16, 0, 1);
    let px = 0;
    let pxx = 3;
  }
  run()
  {

    for (i = 0; i < 16; ++i) {
      stepper(hh, pat, px, i, 40);
      px = incr(px, 0, pxx);
    }
    pxx = incr(pxx, 1, 16);

    if (count % 8 == 0) {
      pat = rand_beat();
    }
    if (count % 4 == 0) {
      set hhb:stutter 1;
    }
    if (count % 3 == 0) {
      set hhb:scramble 1;
    }
  }
}

let momel = [0, 24, 0, 24, 0, 0, 24, 0, 0, 24, 0, 0, 20, 0, [24, 0, 24], 28];
let moogblah_gen = gen()
{
  setup()
  {
    let mx = 0;
    let mxx = 3;
  }
  run()
  {
    if (count % 4 ==3 ) {
      for (i = 0; i < 16; ++i) {
        stepper(mo, momel, mx, i, 260);
        mx = incr(mx, 0, mxx);
      }
      mxx = incr(mxx, 3, 16);
      play_array(hhb, invert(momel), dur = 260);
    } else {
      set hhb:on 1;
      play_array(mo, momel, dur = 260);
    }
  }
}

