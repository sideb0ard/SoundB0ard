
# let dx3 = fm();
# load_preset(dx, "jazz_organ"); load_preset(dx2, "mo_jazz"); load_preset(dx3, "MAW2");

let key = 44;

# dx kazzzing // MAW2 // elellelele // jazz_organ
let noteblah_gen = gen()
{
  setup()
  {
    let addr = 1;
  }
  run()
  {
    let v = 100 + rand(27);
    note_on_at(dx, notes_in_chord(53, key, 2), 0, dur = 500, vel = v);
    v = 100 + rand(27);
    note_on_at(dx, notes_in_chord(55, key, 2), 1920 + addr * 240, dur = 250, vel = v);
    addr = incr(addr, 1, 8);
  }
}

# MAW2 // jazz_organ // kwait0
# G#
let melblah_gen = gen()
{
  setup()
  {
    let m1 = [44, 0, 46, 49,   0, 0, 53, 0,   0, 44, 0, 49,   0, 0, 0, 0];
    let m2 = [51, 0, 0, 44,   0, 53, 0, 0,   51, 0, 0, 49,   0, 0, 46, 0];
    let mlz = [m1, m2];
    let mlx = 0;

    let drz = [480, 480, 240, 960, 120, 960];
    let drx = 0;
  }
  run()
  {
    if (count % 4 == 0) {
      sched(0, 81, 99, 3840 / 2, "set dx3:op2out %");
      mlx = incr(mlx, 0, len(mlz));
    } else {
      if (count % 3 == 0) {
        sched(0, 99, 81, 200, "set dx3:op2out %");
      }
    }

    if (count % 7 == 0) {
      sched(0, 3, 300, 960, "set dx3:e2att %");
    }

    let m = mlz[mlx];

    if (count % 8 < 6) {
      for (let i = 0; i < 16; i++) {
        if (m[i] > 0) {
          let d = drz[drx];
          if (count % 5 == 0) {
            d = d * 4;
          }
          note_on_at(dx3, m[i] , i * pp, dur = d);
          drx = incr(drx, 0, len(drz));
        }
      }
    }

  }
}

let d2blah_gen = gen()
{
  setup()
  {
    let mel = [48, 0, 55, 0, 48, 0, 49, 0, 49, 0, 53, 0, 53, 0, 0, 0];
    let durz  = [ 100, 200, 50, 80, 150, 300, 500];
    let drx = 0;
  }
  run()
  {
    if (count % 3 == 2) {
      for (let i = 0; i < 16; i++) {
        let offset = 0;
        if (i % 2 == 1) {
          offset = 50;
        }
        let v = 100 + rand(27);
        if (mel[i] > 0) {
          note_on_at(dx, mel[i], i * pp + offset, dur = durz[drx], vel = v);
          drx = incr(drx, 0, len(durz));
        }
      }
    }
    if (count % 8 == 7) {
      noteblah_gen()
    }
  }
}

