let bd = sample(TT-BLACKRIOT-DAYINLIFE/bd.wav);
let bd2 = sample(TT-ROYALHOUSE/bdork.wav);
let bd3 = sample(TT-ROYALHOUSE/bdvocwah.wav);
let bd4 = sample(TT-ROYALHOUSE/beet.wav);
let bd5 = sample(TT-ROYALHOUSE/not.wav);
let bt = sample(TT-ROYALHOUSE/bdtail.wav);

let chw = sample(TT-ROYALHOUSE/chewit.wav);
let ch = sample(TT-ROYALHOUSE/ch.wav);
set ch:pitch 2
let uh = sample(TTUnreleaseProject/UHhat.wav);
let ch2 = sample(TTUnreleaseProject/ch.wav);
let che = sample(TT-ROYALHOUSE/che.wav);
vol che 0.5
let wh = sample(TT-ROYALHOUSE/whft.wav);
let yv = sample(TT-ROYALHOUSE/youv.wav);
let yek = sample(TT-ROYALHOUSE/yek.wav);
let ec = sample(TT-ROYALHOUSE/ech.wav);
let cn = sample(TT-ROYALHOUSE/canu.wav);
let sw = sample(TT-ROYALHOUSE/schwip.wav);

let teh = sample(TT-ROYALHOUSE/teh.wav);
let not = sample(TT-ROYALHOUSE/not.wav);
vol not 0.3;
let it = sample(TT-ROYALHOUSE/it.wav);
vol it 0.2;

let mfa = sample(TT-ROYALHOUSE/mfa.wav);

let sn = sample(TT-ROYALHOUSE/sn.wav);
let sn2 = sample(TT-ROYALHOUSE/sn2.wav);
let ehit  = sample(TT-ROYALHOUSE/ehit.wav);

let bgn = sample(TT-ROYALHOUSE/bng.wav);
let bgn1 = sample(TT-ROYALHOUSE/bgn1.wav);
let bgn2 = sample(TT-ROYALHOUSE/bgn2.wav);
let bgn3 = sample(TT-ROYALHOUSE/bgn3.wav);
let bgn4 = sample(TT-ROYALHOUSE/bgn4.wav);

let tth = sample(TT-NOCERA/tth.wav);

# let ork = grain(TT-ROYALHOUSE/orkloop.wav); vol ork 0;
# p2 < osc 21 "0 100"  "set ork:idx %"

# play skrslazrs/SHØCK07.wav

# add_fx(ork, "reverb");
# p4 < osc 13 "20 100" "set ork:fx0:wetmx %";
# p5 < osc 16 "100 1000" "set ork:fx0:reverbtime %";


#let yg = grain(TT-ROYALHOUSE/yek.wav); vol yg 0.1;
#p7 < every 2 "<1 1 1.5 2>" "set yg:pitch %";

# add_fx(ch, "delay");
#p6 < osc 11 "2 70" "set ch:fx0:delayms %";
#p7 < osc 12 "2 70" "set ch:fx0:fb %";

#p8 $ "<~ tth*16 tth*16 tth*12 tth*16>";

let PP16 = 240;
# 19 midi ticks per 4% swing
let PPSWING = 19;
let pat_lenz = [8, 16, 12];
let pat_len = pat_lenz[1];
let pulses_per = 3840 / pat_len;

let pitchy = 1;


let grainblah_gen = gen()
{
  setup()
  {
    let plen = 2;
  }
  run()
  {
    set p2:len plen;
    plen = plen * 2;
    if (plen > 128) {
      plen = 1;
    }
  }
}


let bdz = gen()
{
  setup()
  {
    let bdz = [bd, bd2, bd4, bd5];
    let bd_idx = 0;
    let bd_num = 3;
    let prob_idx = 0;
  }

  run() {

    for (i = 0; i < 16; ++i) {
      if (i == 0 || i == 10) {
        set_pitch(bdz[bd_idx], pitchy);
        note_on_at(bdz[bd_idx], 1, i * pulses_per);
      }
      if (i == 8 && (count % 2 == 1)) {
        if (rand(100) < 60) {
          let del = rand(30);
          note_on_at(bdz[bd_idx], 1, i * pulses_per + del);
        }
      }
    }
    bd_idx = incr(bd_idx, 0, bd_num);
    bd_num = incr(bd_num, 0, len(bdz) + 1);
    bdz = rotate(bdz, 1);
  }
}

let percz = gen()
{
  setup()
  {
#let samplz = [yek];
    let samplz = [yek, ch, yv, ec, mfa, cn];
    let smp_idx = 0;
    let smp_num = 3;
  }

  run() {

    cbeat(samplz[smp_idx]);
    smp_idx = incr(smp_idx, 0, len(samplz));
  }
}

let hatz = gen()
{
  setup()
  {
#let samplz = [ch, ch2];
    let samplz = [ch, ch2, bgn, uh, tth];
#let samplz = [ch, bgn, teh];
# let samplz = [bgn, teh, ch, ch2, uh, it, not, tth];
    let smp_idx = 0;

    let velz = [128, 100, 98, 74, 40];
    let velz_idx = 0;
    let swing_setting = 2;
    let smp_num = 1;
#let rhythm = distrhythms_int();

    let countz = [16, 16, 8, 4, 16, 3];
    let ct_idx = 0;
    let pp = 3840 / countz[ct_idx];
  }

  run() {

    pp = 3840 / countz[ct_idx];
    for (i= 0; i < countz[ct_idx]; ++i) {

      let swing_delay = 0;
      if (i % 2 == 1) {
        swing_delay = swing_setting * PPSWING;
      }
      set_pitch(samplz[smp_idx], pitchy);
      note_on_at(samplz[smp_idx], 1, i * pp + swing_delay, velz[velz_idx]);
      velz_idx = incr(velz_idx, 0, len(velz));
      smp_idx = incr(smp_idx, 0, smp_num);
    }
    smp_num = incr(smp_num, 1, len(samplz) + 1);
    samplz = rotate(samplz, 1);

    ct_idx = incr(ct_idx, 0, len(countz));
  }
}

let snrz = gen()
{
  setup()
  {
    let snz=  [sn, sn2, che];
    let blah_fn = fn()
    {
    }
#let snz=  [sn];
    let snz_idx = 0;
    let swing_setting = 3;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      let swing_delay = 0;
      if (i % 2 == 1) {
        swing_delay = swing_setting * PPSWING;
      }
      if ( i == 4 || i == 12) {
        set_pitch(snz[snz_idx], pitchy);
        note_on_at(snz[snz_idx], 1, i * pulses_per);
      }
      if (i == 7 || i == 9)
      {
        if (rand(100) > 70) {
          note_on_at(snz[snz_idx], 1, i * pulses_per + swing_delay, 70);
        }
      }
    }
    snz_idx = incr(snz_idx, 0, len(snz));
  }
}

let htz = gen()
{
  setup()
  {
    let smp =  [tth];
    let smp_idx = 0;
    let count_mod = 2;
  }
  run()
  {
    if ( count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
# puts("i:", i* pulses_per, " smp_idx:", smp_idx);
        let swing_delay = 0;
        if (i % 2 == 1) {
          swing_delay = 1 * PPSWING + rand(10);
        }
        let s = smp[smp_idx];
        note_on_at(s, 1, i * pulses_per + swing_delay, rand(64) + 63);
# smp_idx = incr(smp_idx, 0, len(smp));
        set_pitch(s, rand(2) + 1);
      }
    }
  }
}

# dupes to pitch up
let bdp = sample(TT-ROYALHOUSE/bd.wav);
set bdp:pitch 2;
let bdpt = sample(TT-ROYALHOUSE/bdtail.wav);
set bdpt:pitch 2;
let itp = sample(TT-ROYALHOUSE/it.wav);
set itp:pitch 2;
let tic = sample(TT-BLACKRIOT-DAYINLIFE/tic.wav);

let itnot = gen()
{
  setup()
  {
#let vocz = [chw, it];
    let vocz = [not, chw, it, tic, sw];
    let vocz_idx = 0;
    let voc_len = 1;
    let pat = rand_array(16, 0, 1);
    let maxx = 0;
  }
  run()
  {
    for (i = 0; i < len(pat); ++i) {
      let randy = rand(100);
      if (pat[i] == 1 && randy < maxx)  {
        note_on_at(vocz[vocz_idx], 1, i * pulses_per);
        vocz_idx = incr(vocz_idx, 0, voc_len);
      }
    }
    voc_len = incr(voc_len, 1, len(vocz)+1);
    maxx = maxx + 10;
    if (maxx > 100) {
      maxx = 0;
    }
    pat = rand_array(16, 0, 1);
  }
}

let rim = sample(rims/hes23rim1.aif);

let mair_drumz = gen()
{
  setup()
  {
    let sampz = [tic, sw, rim];
    let s_idx = 0;
    let velr = 70;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      if (i == 7 || i == 11) {
        if (rand(100)> 20) {
          let shuf = 0;
          note_on_at(sampz[s_idx], 1, i*pulses_per+ shuf, vel = velr);
          s_idx = incr(s_idx,0,len(sampz));
        }
      }
      if (i == 12 || i == 14) {
        if (rand(100)> 40) {
          let shuf =  0;
          note_on_at(sampz[s_idx], 1, i*pulses_per+ shuf, vel = velr);
          s_idx = incr(s_idx,0,len(sampz));
        }
      }
      velr = velr + 5;
      if (velr > 127) {
        velr = 70;
      }
    }
  }
}


# let toddr = loop(dloops/toddTerryLIKE.aiff)
# let papa = loop(loops/papuaNewGuineaStringsSeagulls.aiff); set papa:len 4; vol papa 0;

let tblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 2 == 0) {
#set toddr:on 1;
    }
#if (count % 3 == 0) {
#  set toddr:scramble 1;
#}
    if (count % 4 == 0) {
      set toddr:stutter 1;
    }
    if (count % 8 == 7) {
      let b = rand_beat();
      play_array(toddr, b);
      set papa:scramble 1;
      play_array(papa, invert(b));
    }
  }
}

# dx = crepe fnc TONIC
# p13 < osc 8 "3 8" "set dx:o1rat %"
let dxxblah_gen = gen()
{
  setup()
  {
    let mel = [20, 0, 20, 20, 0, 20, 0, 20, 0, 20, 0, 20, 20, 0, 20, 0];
    let ix = 0;
    let lenx = 3;

    let lenz = [50, 100, 200, 300];
    let lx = 0;

  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      stepper(dx, mel, ix, i, lenz[lx]);
      ix = incr(ix, 0, lenx);
    }
    lx = incr(lx, 0, len(lenz));
    lenx = incr(lenx, 3, len(mel));
    if (count % 4 == 0) {
      mel = riff(20);
    }
  }
}


# play skrslazrs/SHØCK11.wav
