
let play2step = gen()
{
  setup()
  {
    let durz = [500, 100, 300, 500];
    let drx = 0;
    let ntz = [27, 31, 24];
    let nx = 0;
  }
  run()
  {
    let beat = gen2stepbeat();

    for (let i = 0; i < 16; i++) {
      let v = rand(100);
      if (i == 0) {
        v = 127;
      }
      if (i % 2 == 1) {
        v = rand(50);
      }
      if (beat[i] == 1) {
        note_on_at(sbdrum, 0, i * pp, vel = v);
      }

      if (i % 8 == 4) {
        if (rand(100) > 10) {
          let v = 100 + rand(27);
          note_on_at(sbdrum, 3, i * pp + rand(40), vel = v);
          note_on_at(sbdrum, 1, i * pp + rand(30), vel = v);
          set sd_delay_ms (rand(30) + 5) at=i*pp;
        }
      }

      if (count % 3 == 0) {
        p2 $ hhblah_gen;
      }
      if (count % 7 == 0) {
        p2 $ "";
      }
    }
  }
}

# bd_detune 3
# bd_octave 2 // bd_dist 0.4
let play2stepWithDX = gen()
{
  setup()
  {
    let durz = [500, 100, 300, 500];
    let drx = 0;
    let ntz = [27, 31, 24];
    let nx = 0;
    set sbdrum:bd_key 3;
    set sbdrum:bd_octave 2;
  }
  run()
  {
    let beat = gen2stepbeat();

    if (count % 4 == 3) {
      p5 $ modzblah_gen;
    }

    if (count % 9 == 5) {
      p5 $ "";
    }

    if (count % 16 < 15) {
      for (let i = 0; i < 16; i++) {
        let v = rand(100);
        if (i == 0) {
          v = 127;
        }
        if (i % 2 == 1) {
          v = rand(50);
        }
        if (beat[i] == 1) {
          note_on_at(sbdrum, 0, i * pp, vel = v);

          let dxv = 100 + rand(27);
          if (count % 2 == 1) {
            note_on_at(dx, ntz[nx], i * pp, dur = durz[drx], vel = dxv);
            nx = incr(nx, 0, len(ntz));

            if (count % 8 == 1) {
              note_on_at(dx, ntz[nx], i * pp, dur = durz[drx], vel = dxv);
            }
            drx = incr(drx, 0, len(durz));
            set dx:algo (i % 6) at=i*pp;
          }
        } else {
          if (count % 4 == 3) {
            note_on_at(dx, ntz[nx], i * pp, dur = durz[drx]);
            set dx:algo (i % 6) at=i*pp;
          }
        }

        if (i % 8 == 4) {
          if (rand(100) > 10) {
            let v = 100 + rand(27);
            note_on_at(sbdrum, 3, i * pp + rand(40), vel = v);
            note_on_at(sbdrum, 1, i * pp + rand(30), vel = v);
            set sd_delay_ms (rand(30) + 5) at=i*pp;
          }
        }

        if (count % 3 == 0) {
          p2 $ hhblah_gen;
        }
        if (count % 7 == 0) {
          p2 $ "";
        }
      }
    }
  }
}

let modzblah_gen = gen()
{
  setup()
  {
    let sdvol = 1;
    let pz = 0;
    let bd_octz = 1;
  }
  run()
  {
    if (count % 4 == 0) {
      sdvol = 1 - sdvol;
      set sbdrum:sd_vol sdvol;
    }
    if (count % 3 == 0) {

      set sbdrum:bd_octave bd_octz+1;
      bd_octz = 1 - bd_octz;

      if (pz == 0) {
        set sbdrum:sd_dist 0.4;
        set sbdrum:cp_dist 0.5;
      } else {
        set sbdrum:sd_dist 0.5;
        set sbdrum:cp_dist 0.4;
      }
      pz = 1 - pz;
    }
  }
}


let hhblah_gen = gen()
{
  setup()
  {
    let delz = [5, 10, 23, 50];
    let dlx = 0;
    let dfbz = [0, 10, 50, 80, 96];
    let dfx = 0;
    let t = 434377;
    let decz = [0, 10, 30, 50, 20];
    let dcx = 0;
  }
  run()
  {
    for (let i = 0; i < 16; i++) {
      let v = rand(70);
      let offset = 40;
      if (i % 2 == 0) {
        offset = 0;
      }
      note_on_at(sbdrum, 2, i * pp + offset, vel = v);
    }

    let p = bits(74 * ( t | ( t >> 2 | t >> 16 ) ));
    t++;
    let numz = numzFromBits(p);
    #print("NUMZ:", numz);

    let ppq = 3840 / 4;
    for (let i = 0; i < 4; i++) {
      if (numz[i] == 6) {
        set sbdrum:hh_delay_ms delz[dlx] at = i * ppq;
        dlx = incr(dlx, 0, len(delz));
      }
      if (numz[i] == 1) {
        set sbdrum:hh_delay_feedback_pct dfbz[dfx] at = i * pp;
        dfx = incr(dfx, 0, len(dfbz));
      }
      if (numz[i] == 13) {
        set sbdrum:hh_decay decz[dcx];
        dcx = incr(dcx, 0, len(decz));
      }
    }
  }
}

# // mario GOOD
# t%(t>>10&t)
#
# https://www.reddit.com/r/bytebeat/comments/20km9l/cool_equations/
#
# 74 * ( t | ( t >> 2 | t >> 16 ) )
