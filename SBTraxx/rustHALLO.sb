# let grn = loop(aesamples/SHSTR_06lpB.WAV); set grn:len 16

let yo = sample(voices/yo.wav);
let usedto = sample(hallow/usedtothink.wav);

let itz = sample(hallow/itz.wav);
let gub = sample(hallow/gub.wav);
let ovn = sample(hallow/ovalNOTE.wav);
let tzat = sample(hallow/tzat.wav);
let percz = [itz, tzat, ovn];

let yogen = gen()
{
  setup()
  {
    let durz = [100, 250, 500, 750];
    let drx = 0;
    let beatt = rand_beat();
  }
  run()
  {
    if (count % 8 == 7) {
      note_on(yo, 1, dur = durz[drx]);
      drx = incr(drx, 0, len(durz));
    }
    if (count % 16 == 14) {
      note_on(usedto, 1, dur = durz[drx]*4);
    }
    if (count % 4 == 3) {
      perky(beatt, percz);
    }
    if (count % 16 == 0) {
      beatt = rand_beat();
    }
  }
}

let scif = sample(perc/scratchClap.aiff);
let tth = sample(perc/thee.wav);
let lzp = sample(perc/krushbrk.wav);
let gz = sample(perc/gltchString.aiff);
let sd = sample(sd/acidSnare2slow.aiff);


let hh = sample(ch/dr606closedhh.aif);
let jbh = sample(noises/jbs3rdhit.aiff);
# let rust  = loop(dloops/rsuteri.wav); set rust:len 2; vol rust 0;
# p8 < ramp 8 "0 0.7" "vol rust %" ;
# let stv = loop(dloops/steveMUR.wav); set stv:len 0.5; vol stv 0; p2 $ rust_gen
# p11 < osc 7 "0.1 0.5" "vol hh %";
let rust_gen = gen()
{
  setup()
  {
    let beat = rand_beat();
  }
  run()
  {

    set rust:on 1;
    set rust:pitch 1;
    vol stv 0;
    if (count % 8 == 7) {
      beat = rand_beat();
      play_array(rust, beat);
      vol stv 1;
      play_array(stv, invert(beat));
      play_array(grn, invert(beat));
      note_on(yo, 1, dur = 500);
    }
    if (count % 3 == 0) {
      set rust:scramble 1;
      beat = rand_beat();

    }
    if (count % 5 == 0) {
      set rust:stutter 1;
      set rust:pitch 2;
      play_array(rust, beat);
      play_array(hh, invert(beat));
    }
    if (count % 4 == 3) {
      if (rand(10) > 8) {
        set rust:stutter 1;
        set rust:pitch 0.7;
      }
    }
  }
}


# mo = android2Dream // flexxy0c // pacman
let morust_gen = gen()
{
  setup()
  {
    let bnote = 62;
    let notz = notes_in_chord(bnote, 1);

    let durz = [100, 500, 1000, 300, 750];
    let durzx = 0;

    let beat = rand_beat();

    let mask = "f000";

  }
  run()
  {
    if (count % 3 == 0) {
      notz = notes_in_chord(bnote, 1);
    }
    if (count % 4 == 0) {
      notz = notes_in_chord(bnote - 12, 1);
    }
    if (count % 8 == 7) {
      beat = rand_beat();
    }

    let mel = combinor(beat, notz);

    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        let offs = 0;
        if (i % 2 ==1 ) {
          offs = 20;
        }
        if (mel[i] > 0) {
          note_on_at(mo, mel[i], i*pp + offs, dur = durz[durzx]);
        }
      }
      durzx = incr(durz, 0, len(durz));
    }

    if (count % 5 == 0) {
      mel = reverse(mel);
      for (i = 0; i < 16; ++i) {
        let offs = 0;
        if (i % 2 ==1 ) {
          offs = 20;
        }
        if (mel[i] > 0) {
          note_on_at(mo, mel[i], i*pp + offs, dur = durz[durzx]);
        }
      }
    }
    if (count % 7 == 0) {
      for (i = 0; i < 16; ++i) {
        let offs = 0;
        if (i % 2 ==1 ) {
          offs = 20;
        }
        if (beat[i] > 0) {
          note_on_at(mo, notes_in_chord(bnote), i*pp + offs, dur = durz[durzx]);
        }
      }
    }
  }
}



let slk = sample(legowelt/Synth-Valkery.wav);
let hlk = sample(legowelt/Synth-HiWayOne.wav);

# dx = rustNAST
# p3 $ fmblah_gen; vol grn 0;
let fmblah_gen = gen()
{
  setup()
  {
    let notez = [53, 57];
    let nix = 0;
    let cnt = 3;
    let msk = "0000";
    let drz = [100, 500, 300, 250, 1000];
    let drzx = 0;
  }
  run()
  {
    if (count % 2 == 1) {
      let beat = bjork(cnt, 16);
      let ntz = notes_in_chord(notez[nix], 1);
      nix = incr(nix, 0, len(notez));
      play_array(dx, combinor(beat, ntz), dur = drz[drzx]);
      drzx = incr(drzx, 0, len(drz));
      ++cnt;
      if (cnt > 7) {
        cnt = 3;
      }
    }
    if (count % 7 == 4) {
      note_on(slk, 1, dur=drz[drzx]*5);
    }
    if (count % 8 == 3) {
      note_on(hlk, 1, dur=drz[drzx]*5);
    }
    if (count % 16 == 4 || count % 16 == 15) {
      let beat = bjork(cnt, 16);
      play_array(dx, mask(combinor(beat, [88]), "f000"), dur = drz[drzx]);
    }
  }
}

#let nszl = loop(hallow/NOISEintroLOOP.wav); set nszl:len 8; p4 $ nzblah_gen
let nzblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 7 == 0) {
      set nszl:stutter 1;
    }
  }
}

# fade rust

# let cliff = loop(hallow/cliffLOOP.wav); set cliff:len 12; p4 $ clgen
let clgen = gen()
{
  setup()
  {
  }
  run()
  {
    set cliff:reverse 0;
    if (count % 3 == 0) {
      set cliff:stutter 1;
    }
    if (count % 4 == 3) {
      set cliff:reverse 1;
    }
  }
}


#let crnkl = loop(hallow/crnkloop.wav); p6 $ hah_gen

# add_fx(cliff, "sidechain", crnkl);
# add_fx(kdg2, "sidechain", crnkl);
let bwah = sample(hallow/bwah.wav);
let ov = sample(hallow/ovalNOTE.wav);
let hahz = [bwah];

let hah_gen = gen()
{
  setup()
  {
    let bt = rand_beat();
  }
  run()
  {
    if (count % 3 == 0) {
      set crnkl:stutter 1;
    }
    if (count % 2 == 0) {
      let bt = rand_beat();
      perky(bt, hahz);
      play_array(nszl, invert(bt));
    }
    if (count % 4 == 0) {
      set crnkl:scramble 1;
      perky(bt, hahz);
    }
  }
}

# load_preset(dx, "longthrum"); p3 $ rrrdgen
# dx = longthrum
let rrrdgen = gen()
{
  setup()
  {
    #let notz = notes_in_chord(79, 1);
    let notz = [79, 76];
    let nx = 0;

    let durz = [300, 40, 500, 700, 100, 30];
    let drx = 0;

    let velz = [120, 127, 100, 110, 80, 127];
    let vx = 0;
  }
  run()
  {
    if (count % 3 == 0) {
      play_array(dx, combinor(rand_beat(), [notz[nx]]), dur = durz[drx], vel = velz[vx]);
      drx = incr(drx, 0, len(durz));
      vx = incr(vx, 0, len(velz));
    }
    if (count % 8 == 7) {
      play_array(dx, up(combinor(rand_beat()*2, [notz[nx]]), 6), dur = durz[drx], vel = velz[vx]);
      drx = incr(drx, 0, len(durz));
      vx = incr(vx, 0, len(velz));
    }

    if (count % 16 == 15) {
      nx = incr(nx, 0, len(notz));
    }
    if (count % 7 == 0) {
      play_array(dx, combinor(rand_beat()*2, [67]), dur = durz[drx], vel = velz[vx]);
      vx = incr(vx, 0, len(velz));
    }
  }
}

