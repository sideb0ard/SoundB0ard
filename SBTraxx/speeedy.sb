
let notz = [77, 69, 47];
let spinc = 0.1;

let drz = [300, 50, 100, 350, 660];

let bd = sample(bd/kick20.aif);
let rv = sample(voices/uhUmf.aiff);

let bdlah_gen = gen()
{
  setup()
  {
    let speed = 1.3;
    let offset = 0;
    let bt = rand_beat();
    let btx = 0;
    let ntx = 0;
    let drx = 0;
  }
  run()
  {

    let inc = 3840 / 16 / speed;
    let tally = 0;
    for (i = offset; i < 3840; i + inc) {
      if (bt[btx] > 0) {
        note_on_at(bd, notz[ntx], i, dur = drz[drx]);
        note_on_at(rv, notz[ntx], i, dur = drz[drx]);
      }
      btx = incr(btx, 0, len(bt));
      tally = i;
    }
    offset = (3840 - tally) % inc;
    ntx = incr(ntx, 0, len(notz));
    drx = incr(drx, 0, len(drz));
    speed = speed + spinc;
    if (speed > 4.7) {
      speed = 1;
    }
  }
}

# let bd2 = drum();
let bd2 = sample(bd/mkKick.aiff);
let cp = sample(cp/clap17.aif);
let rp = sample(voices/readyornot.wav);

let cp_gen = gen()
{
  setup()
  {
    let speed = 1.2;
    let offset = 0;
    let bt = rand_beat();
    let btx = 0;
    let ntx = 0;
    let drx = 1;
  }
  run()
  {

    let inc = 3840 / 16 / speed;
    let tally = 0;
    for (i = offset; i < 3840; i + inc) {
      if (bt[btx] > 0) {
        note_on_at(bd2, notz[ntx], i, dur = drz[drx]);
        #note_on_at(rp, notz[ntx], i, dur = drz[drx]);
        ntx = incr(ntx, 0, len(notz));
        drx = incr(drx, 0, len(drz));
      }
      btx = incr(btx, 0, len(bt));
      tally = i;
    }
    offset = (3840 - tally) % inc;
    speed = speed + spinc;
    if (speed > 4.3) {
      speed = 1;
    }
  }
}

let sc = sample(perc/scratchClap.aiff);
let pct = sample(perc/picture.wav);

# dx = dalekkk

let ppblah_gen = gen()
{
  setup()
  {
    let pat1 = [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0];
    let pat2 = [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0];
  }
  run()
  {
    if (count % 16 < 15) {
      if (count % 3 == 0) {
        play_array(sc, pat1);
        play_array(pct, pat2);
      } else {
        let mel1 = combinor(pat1, [13]);
        let mel2 = combinor(pat2, [17]);
        play_array(dx, mel1, dur = drz[drx]);
        play_array(dx, mel2, dur = drz[drx]);
      }
      if (count % 4 == 0) {
        pat1 = rotate(pat1, 3);
      }
      if (count % 3 == 0) {
        pat2 = rotate(pat2, 2);
      }
    }
  }
}

