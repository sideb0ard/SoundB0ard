#bpm 104;
#let tmb = loop(dloops/timbaland2bar.aiff);  note_off(tmb, 0);
#add_fx(dx, "sidechain", tmb);
#load_preset(dx, "WUBBBWUB"); load_preset(dx2, "MAW2");
#load_preset(dx3, "wuuurodx");
#load_preset(sb2, "LOGRe");
#let cmdel = loop(NewLoopz/comeDELAY.wav); note_off(cmdel, 0);
#let stel = loop(garage/SideStick_Lindrum_24.wav); note_off(stel, 0);
#let moreg = loop(aaassembly/moREGGAe.wav); note_off(moreg, 0);
#let trn = sample(perc/triangle.aiff);
#let tfsh = sample(perc/tuffShaker.aiff); send("delay", tfsh);
#let scc = sample(perc/scratchClap.aiff);
#let uus = sample(perc/uus.wav);
#let revr = sample(perc/revnoise.aiff);

# p1 $ tmbblah_gen
# p2 $ bsslah_gen
# p3 $ mel2blah_gen
# p1 $ ""
# p4 $ dbblah_gen ; p1 $ tmbblah_gen; p2 $ ""
#
# p5 $ dx3blah_gen

# p1 $ ""; p4 $ ""
# p2 $ ""
# p1 $ cpppblah_gen // mel2blah_gen // dx3blah2_gen
# p2 $ dbb2lah_gen; p3 $ ""
# p4 $ tmb2blah_gen ;  add_fx(dx3, "sidechain", tmb)
# p5 $ dx3blah2_gen
# p2 $ "";
# p5 # ""

let tmbblah_gen = gen()
{
  setup()
  {
    let playmask = 2;
    let playpos = 0;
    let durz = [10, 50, 100, 200, 40, 20, 50, 300];
    let drx = 0;
    let liftz = [8, 2, 4, 6, 12];
    let lfx = 0;
    let pidx = 0;
  }
  run()
  {
    if (count % 4 < 3) {
      for (let i = 0; i < 16; i++) {
        if (i % playmask == playpos) {
          note_on_at(tmb, pidx, i * pp, dur = durz[drx]);
        }
      }
    } else {
      for (let i = 0; i < 16; i++) {
        if (i % playmask == playpos) {
          note_on_at(tmb, pidx, i * pp, dur = durz[drx]);
        } else {
          note_on_at(sbdrum, 0, i * pp);
        }
        if (i % 4 == 0) {
          pidx = incr(pidx, 0, 16);
        }
      }
    }

    drx = incr(drx, 0, len(durz));
    playmask = incr(playmask, 1, 8);
    playpos = incr(playpos, 0, playmask);

    if (count % liftz[lfx] == 0) {
      sched(0, 100, 15000, 3840 * liftz[lfx], "set sbdrum:bd_tone %");
      lfx = incr(lfx, 0, len(liftz));
    }
  }
}

# E
let key = 28;
# minor
let keymod = 1;

let melblah_gen = gen()
{
  setup()
  {
    let notez = notes_in_key(key - 12, keymod);
    # [28, 30, 31, 33,  35, 36, 38, 40]
    let nidx1 = [7, 5, 2, 3, 5, 5, 0, 1, 3, 5, 7, 7, 4, 2, 4, 5];
    let nidx2 =  [0, 0, 2, 4, 6, 7, 5, 2, 3, 3,  0, 0, 3, 4, 7, 7];
    let nidxz = [nidx1, nidx2];
    let nx = 0;
    let drz = [100, 200, 300, 600, 400];
    let drx = 0;
    let beat1 =  [28, 30, 0, 0,  28, 0, 31, 31,  35, 36, 0, 28,  0, 0, 0, 0];
  }
  run()
  {
    let beat = down(beat1, 12);
    if (count % 7 == 6) {
      beat = rand_beat();
    }
    let nidx = nidx1;
    if (count % 8 > 3) {
      nidx = nidx2;
    }
    for (let i = 0; i < 16; i++) {
      if (beat[i] > 0) {
        note_on_at(dx, beat[i], i * pp, dur = drz[drx]);
      }
    }
    drx = incr(drx, 0, len(drz));
    if (count % 8 == 7) {
      solo(dx, at=8*pp);
    }

  }
}

let mel2blah_gen = gen()
{
  setup()
  {
    let notez = notes_in_key(key, keymod);
    # [28, 30, 31, 33,  35, 36, 38, 40]
    let nidx1 = [5, 7, 7, 4, 2, 7, 6, 3, 2, 4, 5, 3, 6, 4, 2, 4];
    let nidx2 = [1, 0, 3, 4, 5, 2, 0, 3, 3, 1, 0, 1, 4, 5, 7, 6];
    let nx = 0;
    let drz = [100, 200, 300, 600];
    let drx = 0;
    let beat = [1, 1, 0, 1,  0, 0, 1, 0,  1, 1, 1, 1,  0, 0, 0, 0];
  }
  run()
  {
    let nidx = nidx1;
    if (count % 8 > 3) {
      nidx = nidx2;
      beat = rand_beat();
    }

    for (let i = 0; i < 16; i++) {
      if (beat[i] == 1) {
        let note = notez[nidx[nx]];
        nx = incr(nx, 0, len(nidx));
        note_on_at(dx2, note, i * pp, dur = drz[drx]);
        drx = incr(drx, 0, len(drz));
      }
    }
  }
}

let dbblah_gen = gen()
{
  setup()
  {
    let beat =  [1, 0, 0, 1,  0, 0, 1, 0,  0, 1, 0, 0,  1, 0, 0, 0];
    let percz = [cmdel, stel, moreg];
    let prx = 0;
  }
  run()
  {
    for (let i = 0; i < 16; i++) {
      if (beat[i] == 1) {
        note_on_at(sb2, 0, i * pp);
      }
    }
    if (count % 3 < 2) {
      let invbeat = invert(beat);
      for (let i = 0; i < 16; i++) {
        if (invbeat[i] == 1) {
          note_on_at(percz[prx], i, i * pp, dur = 50);
          prx = incr(prx, 0, len(percz));
        }
      }
    }
  }
}

let bsslah_gen = gen()
{
  setup()
  {
    # notes_in_key(28, 1)
    # [28, 30, 31, 33,  35, 36, 38, 40]
    let bss1 = [16, 0, 0, 16,  0, 16, 0, 0,  0, 0, 16, 0,  31, 0, 0, 0];
    let bss2 = [30, 0, 35, 16,  0, 0, 40, 0,  40, 0, 16, 0,  31, 0, 16, 0];
    let drz = [100, 200, 300, 50, 90, 400];
    let drx = 0;
  }
  run()
  {
    let bss = bss1;
    if (count % 4 == 3) {
      bss = bss2;
    }
    for (let i = 0; i < 16; i++) {
      if (bss[i] > 0) {
        note_on_at(dx, bss[i], i * pp, dur = drz[drx]);
      }
    }
    drx = incr(drx, 0, len(drz));
  }
}

let dx3blah_gen = gen()
{
  setup()
  {
    # [28, 30, 31, 33,  35, 36, 38, 40]
    let mel1 = [0, 0, 28, 0,  0, 0, 33, 0,  0, 0, 28, 0,  0, 0, 30, 0];
    let mel2 = [30, 0, 0, 28,  30, 0, 0, 33,  0, 0, 28, 0,  28, 0, 0, 33];
  }
  run()
  {
    let mel = mel1;
    if (count % 4 == 3) {
      mel = mel2;
    }
    for (let i = 0; i < 16; i++) {
      if (mel[i] > 0) {
        let chrd = notes_in_chord(mel[i], key, 2, keymod);
        #print(chrd);
        note_on_at(dx3, chrd, i * pp, dur = 200);
      }
    }
  }
}

let dx3blah2_gen = gen()
{
  setup()
  {
    # [28, 30, 31, 33,  35, 36, 38, 40]
    let mel1 = [33, 0, 0, 35,  0, 0, 30, 0,  0, 0, 35, 0,  0, 0, 30, 0];
    let mel2 = [30, 0, 33, 0,  30, 0, 0, 33,  0, 0, 33, 0,  40, 0, 40, 33];
    let durz = [40, 80, 150, 250, 350];
    let drx = 0;
  }
  run()
  {
    let mel = mel1;
    if (count % 4 == 3) {
      mel = mel2;
    }
    for (let i = 0; i < 16; i++) {
      if (mel[i] > 0) {
        let v = 100 + rand(27);
        if (i % 4 == 2) {
          v = 127;
        }
        let chrd = notes_in_chord(mel[i], key, 2, keymod);
        #print(chrd);
        note_on_at(dx3, chrd, i * pp, dur = durz[drx], vel = v);
        drx = incr(drx, 0, len(durz));
      }
    }
  }
}


let playblah_fn = fn(midi_note, pat)
{
  for (let i = 0; i < 16; i++) {
    if (pat[i] == 1) {
      note_on_at(sbdrum, midi_note, i * pp);
    }
  }
}
let cpppblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 4 < 3) {
      cmbeat(sbdrum, 3);
    }
  }
}


let dbb2lah_gen = gen()
{
  setup()
  {
    let kbeat = [1, 0, 0, 0,  0, 0, 0, 1,  1, 0, 0, 0,  0, 0, 0, 1];
    let chbeat = [0, 0, 0, 0,  1, 0, 0, 0,  1, 0, 1, 0,  1, 0, 1, 1];
    let ohbeat = [0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0];
  }
  run()
  {
    playblah_fn(0, kbeat);
    playblah_fn(2, chbeat);
    sched(0, 0.3, 0.5, 3840, "set sbdrum:hh_vol %");
  }
}

let tmb2blah_gen = gen()
{
  setup()
  {
    let beat = rand_beat();
    let smpz = [stel, tfsh, uus, revr];
    let sx = 0;
    let px = 0;
    let pincr = 1;
    let dz = [10, 20, 50, 100, 200, 500];
    let dzx = 0;
  }
  run()
  {

    if (count % 8 < 4) {
      for (let i = 0; i < 16; i++) {
        note_on_at(tmb, px, i * pp, dur = dz[dzx]);
        dzx = incr(dzx, 0, len(dz));
        if (i % pincr == 0) {
          px = incr(px, 0, 16);
        }
      }
      pincr = incr(pincr, 1, 7);
    } else {
      for (let i = 0; i < 16; i++) {
        if (beat[i] == 1) {
          note_on_at(tmb, i, (16 - i) * pp, dur = dz[dzx]);
        } else {
          note_on_at(smpz[sx], 0, i * pp, dur = dz[dzx]);
          sx = incr(sx, 0, len(smpz));
        }
      }

      if (count % 4 == 3) {
        beat = rand_beat();
        solo(tmb, at=10 * pp);
        sched(0, 20, 130, 3840, "set mixer:delay:ms %");
        sched(3840, 0, 0, 0, "set mixer:delay:ms %");
        sched(0, 0, 67, 3040, "set mixer:delay:fb %");
        sched(3840, 0, 0, 0, "set mixer:delay:fb %");
      }
    }
  }
}
