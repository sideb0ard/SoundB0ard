#bpm 96;
#load_preset(sbdrum, "STRZ");
#load_preset(dx, "SMURFc");
#let qs1 = loop(qebo/QEBO-LOCKDOWNFM-37FMSNARE5.wav); note_off(qs1, 0);
#let qs2 = loop(qebo/QEBO-LOCKDOWNFM-40FMSNARE8.wav); note_off(qs2, 0);
#let qe3 = loop(qebo/QEBO-LOCKDOWNFM-22FMPERCUSSION15.wav); note_off(qe3, 0);
#let kd = loop(bd/technotronBD.aiff); note_off(kd, 0);

let play_beat = fn(midi_num, pat)
{
  for (let i = 0; i < 16; i++) {
    if (pat[i] == 1) {
      let v = 127;
      let off = 0;
      if (i % 2 == 1) {
        off = 10;
      }
      if (midi_num == 2) {
        v = 50 + rand(27);
      }
      note_on_at(sbdrum, midi_num, i * pp + off, vel = v);
    }
  }
}

let snarerollblah_fn = fn()
{
  let roll = rand_array(16, 0, 1);
  let vincr = 127 / 16;
  for (let i = 0; i < 16; i++) {
    if (roll[i] == 1) {
      note_on_at(sbdrum, 1, i * pp, vel = i * vincr);
    }
  }
}

let beatlah_gen = gen()
{
  setup()
  {
    let bdz = [1, 0, 0, 1,  0, 0, 1, 0,  1, 0, 0, 0,  0, 0, 0, 0];
    let cpz = [0, 0, 0, 0,  1, 0, 0, 0,  0, 0, 0, 0,  1, 0, 0, 0];
    let chz = [1, 0, 1, 0,  1, 0, 1, 0,  1, 0, 0, 0,  1, 0, 1, 0];
    let ohz = [0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0];
  }
  run()
  {
    if (count % 16 < 15) {
      play_beat(0, bdz);
      #play_beat(4, ohz);
      # for (let i = 0; i < 16; i++) {
        #   if (bdz[i] == 1) {
          #     note_on_at(kd, 6, i * pp);
          #   }
        # }
    }
    if (count % 4 < 3) {
      cmbeat(sbdrum, 1);
    } else {
      snarerollblah_fn()
    }
    if (count % 2 == 1) {
      play_beat(2, chz);
    }
  }
}

# C#
let key = 25;
let bsslah_gen = gen()
{
  setup()
  {
    # [25, 27, 29, 30,  32, 34, 36, 37]
    let bass1 = [25, 0, 0, 30,  0, 0, 32, 0,  0, 32, 0, 0,  27, 0, 25, 0];
    let bass2 = [44, 0, 39, 42,  0, 0, 44, 0,  32, 0, 0, 44,  0, 41, 25, 0];

    let drz = [40, 20, 60, 70, 10];
    let drx = 0;
  }
  run()
  {
    let bass = bass1;
    if (count % 4 == 3) {
      bass = bass2;
    }
    if (count % 32 < 31) {
      for (let i = 0; i < 16; i++) {
        if (bass[i] > 0) {
          note_on_at(dx, bass[i], i * pp, dur = drz[drx]);
          drx = incr(drx, 0, len(drz));
        }
      }
    }
  }
}

let glitblah_gen = gen()
{
  setup()
  {
    let pat = rand_array(16, 0, 5);
    let qez = [qs1, qs2, qe3];
    let drz = [150, 10, 30, 50, 90, 100, 150];
    let drx = 0;
  }
  run()
  {
    if (count % 8 == 0) {
      pat = rand_array(16, 0, 5);
    }
    for (let i = 0; i < 16; i++) {
      if (pat[i] < len(qez)) {
        note_on_at(qez[pat[i]], i, i * pp, dur = drz[drx], vel = 80 + rand(30));
      }
    }
    drx = incr(drx, 0, len(drz));
  }
}

let melblah_gen = gen()
{
  setup()
  {
    # notes_in_key(37)
    # [37, 39, 41, 42,  44, 46, 48, 49]
    let mel1 = [37, 0, 37, 0,  0, 44, 0, 0,  0, 0, 41, 0,  0, 0, 0, 0];
    let mel2 = [25, 0, 0, 32,  0, 0, 30, 0,  0, 0, 27, 0,  39, 0, 0, 37];
    let drz = [100, 200, 400, 50, 500];
    let drx = 0;
  }
  run()
  {
    let mel = down(mel1, 12);
    if (count % 3 == 1) {
      mel = mel2;
    }

    for (let i = 0; i < 16; i++) {
      if (mel[i] > 0) {
        let chrd = notes_in_chord(mel[i], key, 1);
        note_on_at(dx2, chrd, i * pp, dur = drz[drx]);
        drx = incr(drx, 0, len(drz));
      }
    }
  }
}

