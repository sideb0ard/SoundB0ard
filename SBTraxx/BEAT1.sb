# bpm 100
# let sd1 = sample(sd/weekendSnare.aiff);
# let scb = loop(dloops/scudBReak.aiff); set scb:len 0; note_off(scb, 0);
# add_fx(scb, "distort"); set scb:pitch 1.1;

# TONIC
# load_preset(dx2, "otherwurld");

let playblah_fn = fn(mid_note, pat)
{
  for (let i = 0; i < 16; i++) {
    if (pat[i] == 1) {
      note_on_at(sbdrum, mid_note, i * pp, dur = 10);
    }
  }
}

let kicks1blah_gen = gen()
{
  setup()
  {
    let bk = [1, 0, 0, 0,  0, 0, 1, 0,  0, 1, 0, 0,  0, 0, 0, 0];
    let scstep = 0;
    let scmax = 3;
    let durz = [10, 50, 100, 150, 300, 70];
    let drx = 0;
    let pitz = [1, 1.1, 1.3, 2, 0.5];
    let px = 0;
  }
  run()
  {
    if (count % 8 < 7) {
      note_on(sbdrum, 0, 0, dur = 1000);
    } else {
      playblah_fn(0, bk);
    }

    if (count % 2 == 1) {
      let beat = rand_beat();
      for (let i = 0; i < 16; i++) {
        note_on_at(scb, scstep, i * pp, dur = durz[drx]);
        scstep = incr(scstep, 0, scmax);
        drx = incr(drx, 0, len(durz));
        set scstep:pitch pitz[px] at = i * pp;
        px = incr(px, 0, len(pitz));
      }
    }
    scmax = incr(scmax, 3, 16);
  }
}

let snblah_gen = gen()
{
  setup()
  {
    let snpitchz = [1, 2, 0.5, 0.77, 0.3];
    let snx = 0;
    let durz = [50, 100, 300, 20, 10, 0];
    let drx = 0;
    let pat = rand_array(16, 0, 1);
  }
  run()
  {
    for (let i = 0; i < 16; i++) {
      if (pat[i] == 1) {
        note_on_at(sd1, 1, i * pp, dur = durz[drx]);
        set sd1:pitch snpitchz[snx];
        drx = incr(drx, 0, len(durz));
        snx = incr(snx, 0, len(snpitchz));
      }
    }
    if (count % 4 == 3) {
      pat = rand_array(16, 0, 1);
    }
  }
}

let key = 49;
# minor key
let key_mod = 1;

# load_preset(dx, "DZT2");

let melblah_gen = gen()
{
  setup()
  {
    # notes_in_key(25, 1)
    # [25, 27, 28, 30,  32, 33, 35, 37]
    #let mel1 =  [25, 0, 0, 35,  0, 0, 28, 0,  25, 0, 0, 25,  0, 0, 27, 0];
    let mel1 =  [0, 25, 0, 35,  0, 0, 28, 0,  0, 25, 25, 0,  0, 0, 27, 0];
    let mel2 =  [0, 27, 0, 28,  0, 0, 32, 0,  0, 37, 0, 0,  0, 0, 35, 0];
    #let mel2 =  [27, 0, 0, 28,  0, 0, 0, 32,  0, 0, 37, 0,  0, 35, 0, 0];
    let drz = [50, 100, 200, 250, 40, 50, 100];
    let drx = 0;
    let velz = [90, 100, 120, 110, 127, 100];
    let vlx = 0;
  }
  run()
  {
    let mel = mel1;
    if (count % 4 == 3) {
      mel = mel2;
    }
    if (count % 7 == 0) {
      mel = up(mel, 12);
    }

    for (let i = 0; i < 16; i++) {
      let off = 70;
      if (i % 2 == 0) {
        off = 0;
      }
      if (mel[i] > 0) {
        note_on_at(dx, mel[i], i * pp + off, dur = drz[drx], vel = velz[vlx]);
        drx = incr(drx, 0, len(drz));
        vlx = incr(vlx, 0, len(velz));
      }
    }
  }
}

let secblah_gen = gen()
{
  setup()
  {
    let keyz = notes_in_key(key, key_mod);
    # [25, 27, 28, 30,  32, 33, 35, 37]
    let rhm1 =  [1, 0, 0, 1,  0, 1, 0, 0,  1, 0, 1, 0,  0, 0, 1, 0];
    let rhm2 =  [0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0,  0, 1, 0, 0];
    let chrdz = [0, 0, 3, 4, 1];
    let chx = 0;
    let durz = [50, 100, 150, 20, 90, 300];
    let drx = 0x;
    let velz = [100, 100, 120, 127, 90];
    let vlx = 0;
  }

  run()
  {
    if (count % 16 < 15) {
      let rhm = rhm1;
      if (count % 4 == 3) {
        rhm = rhm2;
      }
      let chrd = notes_in_chord(keyz[chrdz[chx]], key, 0, key_mod);
      chx = incr(chx, 0, len(chrdz));
      # print(chrd);
      for (let i = 0; i < 16; i++) {
        let off = 90;
        if (i % 2 == 0) {
          off = 0;
        }
        if (rhm[i] == 1) {
          note_on_at(dx2, chrd, i * pp + off, dur = durz[drx], vel = velz[vlx]);
          drx = incr(drx, 0, len(durz));
          vlx = incr(vlx, 0, len(velz));
        }
      }
    }

    # if (count % 2 == 0) {
      #   let orhm = invert(rhm);
      #   for (let i = 0; i < 16; i++) {
        #     if (orhm[i] > 0) {
          #       note_on_at(dx3, chrd[0], i * pp, dur = 50);
          #     }
        #   }
      # }
  }
}

