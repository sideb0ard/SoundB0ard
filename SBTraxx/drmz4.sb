# KEY OF F# - 18 - [18, 20, 22, 23, 25, 27, 29, 30]

let boolah_gen = gen()
{
  setup()
  {
    let numz = [2, 3, 5, 7, 1, 0];
    let nx = 0;
    let melntz = [20, 23, 27];

    let bt = bjork(numz[nx], 8);
    nx = incr(nx, 0, len(numz));
    bt = bt +  bjork(numz[nx], 8);
    let mel = combinor(bt, melntz);
    let steppa = sseq(mel);

    let stepz = 1;
  }
  run()
  {

    #set steppa:step_by 2;
    let plnz =[];
    for (i = 0; i < 16; ++i) {
      let nt = stepn(steppa);
      if (nt > 0) {
        push(plnz, i);
        note_on_at(per1, nt, i*pp);
      }
    }
    set steppa:step_by stepz;
    stepz = incr(stepz, 1, 4);

    if (count % 4 == 0) {
      bt = bjork(numz[nx], 8);
      nx = incr(nx, 0, len(numz));
      bt = bt +  bjork(numz[nx], 8);
      mel = combinor(bt, melntz);
      steppa = sseq(mel);

      let rf = riff(25);

    }
    #print(plnz);
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        if (rf[i] > 0) {
          print("YO i is in plnz?", i, is_in(plnz, i));
          if (!is_in(plnz, i)) {
            print("YO i is in plnz?", i, plnz, is_in(plnz, i));
            note_on_at(per2, rf[i], i * pp);
          }
        }
      }
    }
  }
}

