# bd = NUURF // cp = WURPZ
#

let kei = 27;
let progz = [27, 31, 32];
let prx = 0;

let danote = 27;

let beaylah_gen = gen()
{
  setup()
  {
    let kb = [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0];
  }
  run()
  {

    let b = kb;
    if (count % 16 > 14) {
      b = rand_beat();
    }
    # KICK
    for (i = 0; i < 16; ++i) {
      if (b[i] == 1) {
        note_on_at(kk, 30, i * pp);
      }
      let off = 0;
      if (i % 2 == 0) {
        if (i % 4 == 2) {
          off = 26;
        }
        note_on_at(hh, 20, i * pp + off);
      }

      if (i % 8 == 4) {
        note_on_at(snd, 60, i * pp);
      }
    }


  }
}

let tblah_gen = gen()
{
  setup()
  {
    let mybeat = rand_beat();
  }
  run()
  {
    #if (count % 1 == 0) {
      #  note_on(badum, 72);
      #}

    if (count % 18 < 17) {
      let b = mybeat;
      let masked = false;
      if (count % 8 == 7) {
        masked = true;
        b = mask(mybeat, rand_array(16, 0, 1));
      }

      for (i = 0; i < 16; ++i) {
        let v = 100 + rand(27);
        let offset = rand(100) - 50;
        if (i == 0 || i == 8 ) {
          v = 127;
          offset = 0;
        }
        if (b[i] == 1) {
          #note_on_at(bd, progz[prx] + 12, i * pp + offset, vel = v);
          note_on_at(bd, danote, i * pp + offset, vel = v);
        }


        if (count % 2 && !masked) {
          if (i > 8 && b[i] == 0) {
            #note_on_at(cp, progz[prx], i * pp);
            note_on_at(pow, danote, i * pp);
          }
        }

        if (count % 7) {
          if (i < 4 && b[i] == 0) {
            #note_on_at(cp, progz[px] + 12, i * pp);
            note_on_at(pow, danote + 12, i * pp);
          }
        }

      }
    }

    if (count % 8 == 0) {
      mybeat = rand_beat();
    }

  }
}

let pppblah_gen = gen()
{
  setup()
  {
    let t = 0.01;
    let v = 0;

    let basez = [20, 32, 44, 56];
    let bx = 0;
  }
  run()
  {
    if (count % 2 == 0) {
      let new_v = perlin(t);
      let duff = abs(new_v - v);

      v = new_v;
      t = t + 0.1;


      danote =  scale_note(basez[bx] + floor(scale(v, -1, 1, 0, 20)), kei);

    }
    if (count % 4 == 0) {
      bx = basez[rand(len(basez))];
    }
  }
}

let percblah_gen = gen()
{
  setup()
  {
    let t = 835774745;
    # DWUB //
    let percz = [cp, cl, cb];
    let px = 0;
  }
  run()
  {
    if (count % 8 < 7) {
      # let p = bits( t  << ( (t >> 1 | t>>8 ) ^  ( t >> 13 ) ) );
      let p = bits(t%(t>>10&t));
      ++t;
      let ntz = notes_in_chord(danote, 1);
      let nx = 0;
      # print(p);
      for (i = 0; i < 16; ++i) {
        if (p[i] == 1) {
          note_on_at(percz[px], ntz[nx]+12, i * pp, dur = 190);
          nx = incr(nx, 0, len(ntz));
          px = incr(px, 0, len(percz));
        }
      }
    }
  }
}

