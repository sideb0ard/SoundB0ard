
# let one = loop(JUNALGOGZ/onetimeTSTM.wav); vol one 0.7; set one:len 2; p10 $ oneblah_gen
let oneblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    #unsolo();
    if (count % 4 == 2) {
      set one:stutter 1;
    }
    if (count % 8 == 7) {
      set one:reverse 1;
    }
    if (count % 6 == 5) {
      #   set one:len 4 at=12;
      #   set one:len 2 at=16;
      #solo(one);
    }
  }
}


# p9 < osc 8 "0.3 0.6" "send(0, one, %)";


# sidechain one with bd
# add_fx(one, "sidechain", bd); p4 $ bdlah_gen; send(2, sn, 0.2); send(0, sn, 0.3);

let bd = sample(bd/808kick.aif);
let ch = sample(ch/dr606closedhh.aif);
let sn = sample(cp/gaborClap.aiff);

let bdlah_gen = gen()
{
  setup()
  {
    let t = 434555;
    let pat  = bits(((t/4)>>(t/4))>>(t>>(t/8))|t>>2);
    let d = 100;
  }
  run()
  {
    send(0, ch, 0);
    note_on_at(bd, 1, 0, dur = d);
    d = d + 50;
    if (d > 700) {
      d = 50;
    }

    if (count % 2 == 0) {
      cbeat(sn);
    }

    if (count % 7 == 0) {
      pat  = bits(((t/4)>>(t/4))>>(t>>(t/8))|t>>2);
      ++t;
    }

  }
}

# vol per1 0.3 // Srqttx // phoneCRAWL // glotch
# load_preset(per1, "glotch"); vol per1 0.7;
# vol sd 0.4; sd // // HIGHWR // TRASHP // TWANrG // BADUM //
# load_preset(sd, "BADUM"); vol sd 0.5;
let ntz = [55, 54, 47];
let moblah_gen = gen()
{
  setup()
  {
    #let mel = [30, 0, 23, 0, 30, 0, 30, 0, 30, 0, 23, 0, 23, 0, 28, 0];
    let mel = combinor(bassgen(), ntz);
    let px = 0;
    let pmax = 3;
    let d = 50;
  }
  run()
  {
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        # stepper(sd, mel, px, i, d);
        stepper(dx, down(mel,12), px, i, d);
        d = d + 50;
        if (d > 400) {
          d = 75;
        }
        px = incr(px, 0, pmax);
      }
      pmax = incr(pmax, 3, len(mel));
    } else {
      if (count % 3 == 0) {
        for (i = 0; i < 16; ++i) {
          stepper(per1, up(mel, 12), px, i, d);
          px = incr(px, 0, pmax);
        }
        pmax = incr(pmax, 3, len(mel));
      }
    }

    if (count % 8 == 7) {
      mel = combinor(bassgen(), ntz);
    }
  }
}


# p3 < ramp 8 "1 0" "vol one %";
# WAIT..
# p2 $ moblah_gen
let hh1 = sample(voices/yo.wav);
let uf = sample(voices/uhUmf.aiff);
vol hh1 0.3;
let perxz1 = [hh1, uf];
#let perxz1 = [uf];
let pr1x = 0;

let tmb = sample(voices/elike.wav);
let aw2 = sample(voices/wah.wav);
let ova = sample(voices/callmeova.wav);
vol tmb 0.7;
let perxz2 = [tmb, aw2, ova];
let pr2x = 0;
let pblah_gen = gen()
{
  setup()
  {
    let sz = [5, 3, 7];
    let sx = 0;
    let sz2 = [3, 5, 7, 9];
    let sx2 = 0;
    let drz = [150, 100, 300, 600, 200, 1000];
    let drx = 0;
  }
  run()
  {
    let bt1 = bjork(sz[sx], 16);
    sx = incr(sx, 0, len(sz));
    let bt2 = bjork(sz2[sx2], 16);
    sx2 = incr(sx2, 0, len(sz2));

    if (count % 3 == 0) {
      for (i = 0; i < 16; ++i) {
        let v = 90 + rand(37);
        if (i % 2 == 0) {
          v = 127;
        }
        if (bt1[i] == 1) {
          note_on_at(perxz1[pr1x], 1, i * pp, dur = drz[drx]);
          pr1x = incr(pr1x, 0, len(perxz1));
        }
        if (bt2[i] == 1) {
          note_on_at(perxz2[pr2x], 1, i * pp, dur = drz[drx]);
          pr2x = incr(pr2x, 0, len(perxz2));
        }
        drx = incr(drx, 0, len(drz));
      }
    }

  }
}
# p14 < osc 7 "0.1 0.4" "send(0, perxz2, %)"
# p15 < osc 8 "0.3 0.7" "send(1, perxz2, %)"

# let mac = loop(aaassembly/onBEATMARCUS.wav); send(2, mac, 0.5);
# let wrb = loop(JUNALGOGZ/WARHSBeat.wav); send(2, wrb, 0.4) ; p8 $ beatwablah_gen
let beatwablah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 3 == 0) {
      set wrb:stutter 1;
    }
    if (count % 4 == 0) {
      set mac:stutter 1;
    }
    if (count % 7 == 0) {
      set wrb:scramble 1;
    }
    if (count % 9 == 0) {
      set mac:scramble 1;
    }
  }
}

# xassign(0, mac); xassign(1, wrb)

let mooblah_gen = gen()
{
  setup()
  {
    let ntx = 0;
    let mel = gamelody(16, ntz[ntx]);
    let ix = 0;
    let maax = 3;
    let drz = 70;
  }
  run()
  {
    if (count % 3 == 0) {
      ntx = incr(ntx, 0, len(ntz));
      mel = gamelody(16, ntz[ntx]-12);
    }
    for (i = 0; i < 16; ++i) {
      stepper(per3, mel, ix, i, drz);
      ix = incr(ix, 0, maax);
      drz = drz + 10;
      if (drz > 400) {
        drz = 100;
      }
    }
    maax = incr(maax, 3, 16);

  }
}

