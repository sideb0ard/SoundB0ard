# F# == 18, 30, 42, 54

# let bgr = loop(bombz/BSQWASPR8.wav); set bgr:len 32;

# progression = vi-ii-V-I

# notes_in_key(18)
# [18, 20, 22, 23, 25, 27, 29, 30]
# notes_in_key(30)
# [30, 32, 34, 35, 37, 39, 41, 42]

let vi = [27, 30, 34];

let chrz = [ vi ];
let chx = 0;

# dx purlp // vol dx 0.8
# load_preset(dx, "purlp"); vol dx 0.8;
# let dx2 = fnc
# load_preset(dx2, "fnc") ; vol dx2 0.7;

let msk = "00f0";
# let key = 22;
let key = 27;

#  let bq = loop(bombz/BSQ_M14.wav); set bq:len 2; send(2, bq, 0.4);
let bqlah_gen = gen()
{
  setup()
  {
    let bjz = [5, 7, 11];
    let bx = 0;
  }
  run()
  {
    if (count % 8 == 6) {
      set bq:off 1 at = bjz[bx] * pp;
    }
    set bq:on 1;
    if (count % 8 == 7) {
      set bq:stutter 1;
    }
    let bt = bjork(bjz[bx], 16);
    if (count % 2 == 0) {
      play_array(bd, bt, dur = 500);
    }
    if (count % 4 == 3) {
      set bq:scramble 1;
      bx = incr(bx, 0, len(bjz));
      # play_array(dx, rotate(combinor(bt, [34, 52]), 2));
      # play_array(dx, rotate(combinor(bt, chrz[chx]), 2));
    }
  }
}

# p4 $ bqlah_gen
# p3 $ steeblah_gen ; p10 < ramp 8 "1 0" "vol bgr %";
let steeblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 4 < 2) {
      p2 $ ste2blah_gen;
    } else {
      p2 $ ste3blah_gen;
    }
  }
}



let ste2blah_gen = gen()
{
  setup()
  {
    let mlenz = [7, 9, 8, 4];
    let mx = 0;
    let mel = garmelody(mlenz[mx], chrz[chx], 16);
    let mel2 = garmelody(mlenz[mx], chrz[chx], 16);

    let msk1x = 0;
    let msk2x = 0;
  }
  run()
  {
    if (count % 4 == 0) {
      let mymel = mask(mel2, rotate(msk, msk1x));
      msk1x = incr(msk1x, 0, 4);
      for (i = 0; i < 16; ++i) {
        if (mymel[i] > 0) {
          note_on_at(dx2, mymel[i], i * pp * 2);
        }
      }
    }
    if (count % 4 == 2) {
      let mymel = mask(mel, rotate(msk, msk2x));
      msk2x = incr(msk2x, 0, 4);
      for (i = 0; i < 16; ++i) {
        if (mymel[i] > 0) {
          note_on_at(dx2, mymel[i], i * pp + pp);
        }
      }
    }
    if (count % 12 == 0) {
      mel2 = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
    if (count % 13 == 0) {
      mel = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
  }
}

let ste3blah_gen = gen()
{
  setup()
  {
    let mlenz = [7, 9, 8, 4];
    let mx = 0;
    let mel = garmelody(mlenz[mx], chrz[chx], 16);
    let mel2 = garmelody(mlenz[mx], chrz[chx], 16);

    let msk1x = 0;
    let msk2x = 0;

    let lx = 0;
    let mlx = 3;

    let drz = [50, 400, 100, 350, 250, 500];
    let drx = 0;

  }
  run()
  {

    for (i = 0; i < 16; ++i) {
      #stepper(dx2, mel, lx, i, drz[drx]);
      lx = incr(lx, 0, mlx);
      drx = incr(drx, 0, len(drz));
      stepper(dx, up(mel2, 12), lx, i, drz[drx]);
    }
    mlx = incr(mlx, 3, len(mel));

    if (count % 12 == 0) {
      mel2 = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
    if (count % 13 == 0) {
      mel = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
  }
}

let bd = sample(wavalc/dm02_909_kickdrum_002_drive.wav);
let m5 = sample(bombz/BSQ_M504_s.wav);
let m1 = sample(bombz/BSQ_M501_s.wav);
let rl = sample(noises/ralphiHat.aiff);
let cr = sample(noises/crnchHar.aiff);

let percz = [bd, m5, cr, m1, rl];
let px = 0;

let hh1 = sample(ch/AbraHat.aiff);
let hh2 = sample(ch/acidHat3.aiff);
let hh3 = sample(ch/CasioMT70ClosedHihat.aif);
let hh4 = sample(ch/hh13.aif);

let hatz = [hh1, hh2, hh3, hh4];

let pblah_gen = gen()
{
  setup()
  {
    let mlenz = [3, 4, 5, 7, 8, 11, 13, 15];
    let mx = 0;
    let bt = bjork(mlenz[mx], 16);
    let hx = 0;
  }
  run()
  {
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        if (bt[i] == 1) {
          note_on_at(percz[px], 1, i * pp * 2);
          px = incr(px, 0, len(percz));
        }
      }
    }
    if (count % 3 == 0) {
      hhbeat(hatz[hx]);
      hx = incr(hx, 0, len(hatz));
    }
  }
}

# vol bq 0; let mouth = loop(voices/mouthpiece.wav); set mouth:len 4; p7 $ mouthblah_gen
# p8 < osc 8 "0.1 0.7" "send(0, mouth, %)"

# let haz = loop(JUNALGOGZ/Hatzwoohoo.wav); p3 $ ""; p2 $ ""; vol bq 1; p3 $ ""; p2 $ "";

let ine = sample(voices/ineed.wav);
let mouthblah_gen = gen()
{
  setup()
  {
    let offsz = 1;
  }

  run()
  {
    if (count % 8 < 4 ) {
      set mouth:stutter 1;
      set mouth:on 1;
      if (count % 4 == 0) {
        set mouth:scramble 1;
      }
      if (count % 4 == 1) {
        play_array(mouth, rand_beat());
      }
      if (count % 4 == 2) {
        set mouth:plooplen offsz;
        offsz = incr(offsz, 1, 16);
      }
      if (count % 4 == 3) {
        if (rand(100) > 80) {
          set mouth:plooplen 16;
        }
      }
    } else {
      set mouth:off 1;
      play_array(mouth, rand_beat());
    }
  }
}
# per3 = // PIPE //  TWANrG // Srqttx // oopdz
# load_preset(per3, "Srqttx"); vol per3 0.3;
let pdxxblah_gen = gen()
{
  setup()
  {
    let d = 290;
    let mel = combinor(bassgen(), vi + up(vi, 12));
  }
  run()
  {
    if (count % 4 == 3) {
      mel = combinor(bassgen(), vi + up(vi, 12));
    }
    if (count % 4 == 0) {
      mel = combinor(bassgen(), vi + up(vi, 24));
    }
    let sht = 30;
    for (i = 0; i < 16; ++i) {
      if (mel[i] > 0) {
        let ofs = sht;
        if (i % 2 == 0) {
          ofs = 0;
        }
        note_on_at(per3, mel[i], i * pp + ofs, dur = d);
      }
    }
    d = d + 40;
    if (d > 600) {
      d = 90;
    }
  }
}

# p5 $ pdxxblah_gen

# vol bq 0; vol haz 1; vol mouth 0

# let js = loop(JUNALGOGZ/JSFTYmylove.wav); p6 $ bbblah_gen;

let bbblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    #set bq:on 1;
    if (count % 2 == 0) {
      #set js:on 1;
      set haz:stutter 1;
    }

    if (count % 4 == 3) {
      #let b = rand_beat();
      ##play_array(js, b);
      #play_array(bq, invert(b));
    }
    if (count % 7 == 0) {
      set js:stutter 1;
      set bq:stutter 1;
    }
  }
}
