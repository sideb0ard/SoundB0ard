
# let bgr = loop(bombz/BSQWASPR8.wav); set bgr:len 32;

# let key - f# - 22
# notes_in_chord 22, 26, 29;
# progression = vi-ii-V-I

# notes_in_key(22)
# [22, 24, 26, 27, 29, 31, 33, 34]
let vi = [31, 34, 26];
let ii = [24, 27, 31];
let V = [29, 33, 24];
let I = [22, 26, 29];
let chrz = [ vi, ii, V, I];
let chx = 0;

# dx purlp // vol dx 0.8
# let dx2 = fnc

#let chblah_gen = gen()
#{
#  setup()
#  {
#  }
#  run()
#  {
#    if (count % 8 == 0) {
#      chx = incr(chx, 0, len(chrz));
#    }
#  }
#}


let msk = "00f0";
let key = 22;

#  let bq = loop(bombz/BSQ_M14.wav); set bq:len 2; send(2, bq, 0.4);
let bqlah_gen = gen()
{
  setup()
  {
    let bjz = [5, 7, 11];
    let bx = 0;
  }
  run()
  {
    if (count % 8 == 6) {
      set bq:off 1 at = bjz[bx] * pp;
    }
    set bq:on 1;
    if (count % 8 == 7) {
      set bq:stutter 1;
    }
    let bt = bjork(bjz[bx], 16);
    if (count % 2 == 0) {
      play_array(bd, bt, dur = 500);
    }
    if (count % 4 == 3) {
      set bq:scramble 1;
      bx = incr(bx, 0, len(bjz));
      # play_array(dx, rotate(combinor(bt, [34, 52]), 2));
      #play_array(dx, rotate(combinor(bt, chrz[chx]), 2));
    }
  }
}

# dx = purlp // lowx0r // dettrr2  // swuuush // beleep
# dx2 = narf2 // l0renzo4 // rrrkan

# dx basss // dx2 surgefizz

let steeblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 4 < 2) {
      p2 $ ste2blah_gen;
    } else {
      p2 $ ste3blah_gen;
    }
  }
}



let ste2blah_gen = gen()
{
  setup()
  {
    let mlenz = [7, 9, 8, 4];
    let mx = 0;
    let mel = garmelody(mlenz[mx], chrz[chx], 16);
    let mel2 = garmelody(mlenz[mx], chrz[chx], 16);

    let msk1x = 0;
    let msk2x = 0;
  }
  run()
  {
    if (count % 4 == 0) {
      let mymel = mask(mel2, rotate(msk, msk1x));
      msk1x = incr(msk1x, 0, 4);
      for (i = 0; i < 16; ++i) {
        if (mymel[i] > 0) {
          note_on_at(dx2, mymel[i], i * pp * 2);
        }
      }
    }
    if (count % 4 == 2) {
      let mymel = mask(mel, rotate(msk, msk2x));
      msk2x = incr(msk2x, 0, 4);
      for (i = 0; i < 16; ++i) {
        if (mel[i] > 0) {
          note_on_at(dx2, mymel[i], i * pp + pp);
        }
      }
    }
    if (count % 12 == 0) {
      mel2 = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
    if (count % 13 == 0) {
      mel = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
  }
}

let ste3blah_gen = gen()
{
  setup()
  {
    let mlenz = [7, 9, 8, 4];
    let mx = 0;
    let mel = garmelody(mlenz[mx], chrz[chx], 16);
    let mel2 = garmelody(mlenz[mx], chrz[chx], 16);

    let msk1x = 0;
    let msk2x = 0;

    let lx = 0;
    let mlx = 3;

    let drz = [50, 400, 100, 350, 250, 500];
    let drx = 0;

  }
  run()
  {

    for (i = 0; i < 16; ++i) {
      stepper(dx2, mel, lx, i, drz[drx]);
      lx = incr(lx, 0, mlx);
      drx = incr(drx, 0, len(drz));
      stepper(dx, up(mel2, 12), lx, i, drz[drx]);
    }
    mlx = incr(mlx, 3, len(mel));

    if (count % 12 == 0) {
      mel2 = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
    if (count % 13 == 0) {
      mel = garmelody(mlenz[mx], chrz[chx], 16);
      mx = incr(mx, 0, len(mlenz));
    }
  }
}

let bd = sample(wavalc/dm02_909_kickdrum_002_drive.wav);
let m5 = sample(bombz/BSQ_M504_s.wav);
let m1 = sample(bombz/BSQ_M501_s.wav);
let rl = sample(noises/ralphiHat.aiff);
let cr = sample(noises/crnchHar.aiff);

let percz = [bd, m5, cr, m1, rl];
let px = 0;


let hh1 = sample(ch/AbraHat.aiff);
let hh2 = sample(ch/acidHat3.aiff);
let hh3 = sample(ch/CasioMT70ClosedHihat.aif);
let hh4 = sample(ch/hh13.aif);

let hatz = [hh1, hh2, hh3, hh4];

let pblah_gen = gen()
{
  setup()
  {
    let mlenz = [3, 4, 5, 7, 8, 11, 13, 15];
    let mx = 0;
    let bt = bjork(mlenz[mx], 16);
    let hx = 0;
  }
  run()
  {
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        if (bt[i] == 1) {
          note_on_at(percz[px], 1, i * pp * 2);
          px = incr(px, 0, len(percz));
        }
      }
    }
    if (count % 3 == 0) {
      hhbeat(hatz[hx]);
      hx = incr(hx, 0, len(hatz));
    }
  }
}

# let mouth = loop(voices/mouthpiece.wav); set mouth:len 4; p7 $ mouthblah_gen
# p8 < osc 8 "0.1 0.7" "send(0, mouth, %)"

let mouthblah_gen = gen()
{
  setup()
  {
    let offsz = 1;
  }

  run()
  {
    if (count % 8 < 4 ) {
      set mouth:stutter 1;
      set mouth:on 1;
      if (count % 4 == 0) {
        set mouth:scramble 1;
      }
      if (count % 4 == 1) {
        play_array(mouth, rand_beat());
      }
      if (count % 4 == 2) {
        set mouth:plooplen offsz;
        offsz = incr(offsz, 1, 16);
      }
      if (count % 4 == 3) {
        if (rand(100) > 80) {
          set mouth:plooplen 16;
        }
      }
    } else {
      set mouth:off 1;
      play_array(mouth, rand_beat());
    }
  }
}

# mo = simple // aqua //
let moblah_gen = gen()
{
  setup()
  {
    let bjz = [3, 5, 7, 11];
    let bx = 0;
    let bmx = 0;
  }
  run()
  {
    if (count % 2 == 0) {

      # let bt = mask(bjork(bjz[bx], 16), rotate(msk, bmx));
      let bt = bjork(bjz[bx], 16);
      bmx = incr(bmx, 0, 4);
      bx = incr(bx, 0, len(bjz));
      for (i = 0; i < 16; ++i) {
        if (bt[i] == 1) {
          note_on_at(mo, chrz[chx][0], i * pp * 2, dur = 400);
        }
      }
    }
  }
}

# let dub = loop(JUNALGOGZ/DUBBASS.wav); set dub:len 2
#  let hhhb = loop(JUNALGOGZ/HHbeat.wav); set hhhb:len 2

let bbblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    set bq:on 1;
    if (count % 2 == 0) {
      set hhhb:on 1;
    }

    if (count % 4 == 3) {
      let b = rand_beat();
      play_array(hhhb, b);
      play_array(bq, invert(b));
    }
    if (count % 7 == 0) {
      set hhhb:stutter 1;
      set bq:stutter 1;
    }
  }
}
