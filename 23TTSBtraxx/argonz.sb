# F#

let getdumb = sample(voices/getdown.wav);
# per1 = roobot // sputter // glotch // weirdz
# per2 = electrHH // Blkingz // PIPE // SQWA // TWANrG
let mel = rand_array(16, 0, 0);
let wmwmblah_gen = gen()
{
  setup()
  {
    let ntz = [47, 62, 61, 44, 55, 61, 62];
    mel = combinor(bassgen(), ntz);

    let idxr = 0;
    let ntzi = 0;

    let mx = 0;
    let mmax = 3;
    let d = 600;
  }
  run()
  {
    let m = mel;
    if (count % 4 == 3) {
      m = up(mel, 2);
      note_on_at(getdumb, 1, 4 * pp, dur = d);
      d = d + 100;
      if (d > 1500) {
        d = 500;
      }
    }

    if (count % 16 == 12) {
      m = down(mel, 1);
    }

    if (count % 12 < 11) {
      for (i = 0; i < 16; ++i) {
        let v = 80 + rand(47);
        if (i % 4 == 0) {
          v = 127;
        }
        stepper(per1, m, mx, i, 50);
        mx = incr(mx, 0, mmax);

        if (mel[i] > 0) {
          note_on_at(per1, m[i], i*pp, vel = v);
        } else {
          ++idxr;
          if (idxr % 3 == 0) {
            note_on_at(per2, ntz[ntzi], i*pp, vel = v);
            ntzi = incr(ntzi, 0, len(ntz));
          }
        }
      }
      mmax = incr(mmax, 3, 16);
    }

    if (count % 8 == 0) {
      mel = combinor(bassgen(), ntz);
    }
  }

}


# bd NUURF ? Srqttx
# load_preset(hh, "SLOWHH")
# p5 < osc 8 "0.1 0.4" "send(0, hh, %)"
let sdw1 = sample(voices/ineed.wav);
let sdw2 = sample(bombz/BSQ_M501_s.wav);
let swdz = [sdw1, sdw2];
let swx = 0;
let bddalah_gen = gen()
{
  setup()
  {
    let d = 10;
  }
  run()
  {
    if (count % 8 < 7) {
      dmbeat(bd, 30);
      if (count % 4 == 2) {
        note_on_at(bd, 42, 14 * pp, vel = 70 + rand(30));
      }

      d = d + 10;
      if (d > 60) {
        d = 10;
      }
    }

    if (count % 7 < 6) {
      hhmbeat(hh, 44);
    }
    if (count % 2 == 1) {
      cbeat(swdz[swx]);
      swx = incr(swx, 0, len(swdz));
    }
    if (count % 3 == 1) {
      cmbeat(cb, 54);
    }
  }
}

# down per1 - keep per2 SQWA

# dx = deeepend // llasticx3 // nrth
let dxxblah_gen = gen()
{
  setup()
  {
    let d = 290;
  }
  run()
  {
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        if (mel[i] > 0) {
          note_on_at(dx, mel[i] - 12, i * pp, dur = d);
        }
      }
      d = d + 20;
      if (d > 400) {
        d = 90;
      }
    }
  }
}

# let cow = loop(JUNALGOGZ/cowbellsz.wav);
# let wkth = loop(JUNALGOGZ/workthat.wav); set wkth:len 2

let callme = sample(voices/callme.wav);
let callmeova = sample(voices/callmeova.wav);
let elike = sample(voices/elike.wav);
let git = sample(voices/git.wav);
let ineed = sample(voices/ineed.wav);
let wah = sample(voices/wah.wav);

let msz = [callme, callmeova, elike, git, ineed, wah];

# p10 < osc 12 "0.1 0.8" "send(0, msz, %)";

let misblah_gen = gen()
{
  setup()
  {
    let msk = "8888";
    let pat = mask(rand_array(16, 0, len(msz)), msk);
    let d = 50;
  }
  run()
  {
    for (i = 0; i < 16; ++i) {
      if (pat[i] > 0) {
        note_on_at(msz[pat[i]], 1, i * pp, dur = d);
      }
    }
    d = d + 20;
    if (d > 450) {
      d = 60;
    }

    if (count % 4 == 0) {
      # set cow:scramble 1;
      #  set wkth:stutter 1
    }
    if (count % 3 == 0) {
      #set cow:stutter 1;
      #  set wkth:scramble 1
    }
    if (count % 8 == 0) {
      pat = mask(rand_array(16, 0, len(msz)), msk);
    }
  }
}

