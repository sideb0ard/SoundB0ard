let cl = sample(perc/2stepPERC.aiff);
let sh = sample(perc/tuffShaker.aiff);
let mw = sample(notes/mawPANcrakl.aiff);
let th = sample(perc/thee.wav);
let gl = sample(perc/glitchssz.aiff);
let af = sample(perc/af.wav);
let mw2 = sample(notes/mawPianooo.aiff);
let clv = sample(perc/808clave.aif);
let moo = sample(notes/mood2SwingNoteGlitch.aiff);
let lgl = sample(notes/longGLitchNOteChord.aiff);

let hhz = [cl, lgl, mw, sh, gl, mw2, af, clv, th];
let hx = 0;
let maxh = 3;

let hhblah_gen = gen()
{
  setup()
  {
    let nom_sects = [2, 3, 1, 4, 5];
    let nx = 0;
    let lenz = [2, 3, 4, 5];
    let lx = 0;
    let pt = [];
    for (i = 0; i < nom_sects[nx]; ++i) {
      pt = pt + bjork(lenz[lx], 8);
      lx = incr(lx, 0, len(lenz));
    }
    nx = incr(nx, 0, len(nom_sects));

    let swz = [0, 20, 40, 50, 60];
    let swx = 0;

    let velr = 90;

  }
  run()
  {

    if (count % 8 == 0) {
      pt = [];
      for (i = 0; i < nom_sects[nx]; ++i) {
        pt = pt + bjork(lenz[lx], 8);
        lx = incr(lx, 0, len(lenz));
      }
      nx = incr(nx, 0, len(nom_sects));
    }

    let pp = 3840 / len(pt);

    for (i = 0; i < len(pt); ++i) {
      if (pt[i] == 1) {
        let v = velr;
        let offset = 0;
        if (i % 2 == 0) {
          offset = swz[swx];
        } else {
          v = 120;
          velr = velr + 10;
          if (velr > 120) {
            velr = 90;
          }
        }
        note_on_at(hhz[hx], 1, i * pp + offset, dur = pp /2, vel = v);
        hx = incr(hx, 0, maxh);
      }
    }
    swx = incr(swx, 0, len(swz));
    if (count % 4 == 0) {
      maxh = incr(maxh, 2, len(hhz));
    }
  }
}


# let bbt = loop(bombz/BSQ_GrB-46.wav); set bbt:len 8; add_fx(bbt, "distort");
let bdlah_gen = gen()
{
  setup()
  {
    let lenz = [16, 16, 8, 1];
    let lx = 0;
  }
  run()
  {
    set bbt:plooplen lenz[lx];
    lx = incr(lx, 0, len(lenz));
  }
}

# dx = wuurpr
let fmblah_gen = gen()
{
  setup()
  {
    let glenz = [3, 4, 7, 6, 8];
    let glx = 0;
    #let gmel = [0, 33, 0, 0, 40, 42, 0, 0, 42, 0, 0, 42, 0, 0, 45, 33];
    #let gmel2 = [33, 0, 42, 0, 44, 0, 42, 0, 35, 0, 40, 0, 33, 0, 0, 0];
    #let gmel3 = gamelody(glenz[glx], 33, 16);
    let gmel = [0, 14, 0, 26, 0, 23, 0, 16, 0, 18, 0, 26, 0, 0, 0, 14];
    let gmel2 = [0, 14, 0, 23, 0, 0, 0, 25, 0, 18, 0, 26, 0, 14, 0, 14];
    let gmel3 = gamelody(glenz[glx], 14, 16);
    glx = incr(glx, 0, len(glenz));

    let gmlz = [gmel, gmel, gmel2, gmel3];
    let gmx = 0;

    let sx = 0;
    let msx = 3;

    let duz = [200, 400, 500, 700];
    let dzx = 0;
  }
  run()
  {
    unsolo();

    if (count % 16 < 14) {
      if (count % 2 == 0) {
        let m = gmlz[gmx];
        for (i = 0; i < 16; ++i) {
          if (m[i] > 0) {
            note_on_at(dx, m[i], i * pp * 2, dur = duz[dzx]);
          }
        }
        gmx = incr(gmx, 0, len(gmlz));
        dzx = incr(dzx, 0, len(duz));
      }

      if (count % 8 == 7) {
        let m = gmlz[gmx];
        msx = incr(msx, 0, len(m));
        for (i = 0; i < 16; ++i) {
          stepper(dx, m, i, sx, duz[dzx]);
          sx = incr(sx, 0, msx);
        }
        gmx = incr(gmx, 0, len(gmlz));
      }
    }

    if (count % 16 == 0) {
      #gmel3 = gamelody(glenz[glx], 33, 16);
      gmel3 = gamelody(glenz[glx], 14, 16);
      glx = incr(glx, 0, len(glenz));
      gmlz = [gmel, gmel, gmel2, gmel3];
      solo(dx) at=14*pp;
    }
  }
}

let bd1 = sample(wavalc/dm02_909_kickdrum_002_drive.wav);
let bd2 = sample(wavalc/dm02_909_kickdrum_005_clean.wav);
let bd3 = sample(wavalc/dm02_909_kickdrum_006_clean.wav);
let bd4 = sample(wavalc/dm02_909_kickdrum_006_drive.wav);
let cp = sample(cp/clapLongReverb.aif);

let bddlah_gen = gen()
{
  setup()
  {
    let patlenz = [3, 5, 7];
    let px = 0;
    let kkz = [bd1, bd2, bd3, bd4, cp];
    let kx = 0;
    let kxm = 2;
    let dr = 50;
  }
  run()
  {
    let beat = bjork(patlenz[px], 16);
    px = incr(px, 0, len(patlenz));
    for (i = 0; i < 16; ++i) {
      if (beat[i] == 1) {
        note_on_at(kkz[kx], 1, i * pp, dur = dr);
        kx = incr(kx, 0, kxm);
        dr = dr + 20;
        if (dr > 150) {
          dr = 50;
        }
      }
    }
    kxm = incr(kxm, 2, len(kkz));
  }
}

