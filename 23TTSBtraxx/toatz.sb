let key = 13;
let lownote = 3;
let highnote = 20;

# oopdz + Srqttx
# SLOWHH + GLEATX + PIPEBLING
# Srqttx + TERER
# bvvgzz
let moblah_gen = gen()
{
  setup()
  {
    let b = rand_beat();
    let shb = 2;
    let notesz = scale_melody(rand_array(16, lownote, highnote), key);
    let nx = 0;
    let shfm = 1;
    let shf = 48;
    let dr = 50;
  }
  run()
  {
    let p = rotate(b, shb);
    let orb = invert(ormask(b, p));

    shb = incr(shb, 1, 7);
    shfm = incr(shfm, 1, 4);

    if (count % 8 ==7 ) {
      p[15] = 0;
      orb[15] = 0;
      b[15] = 0;
    }

    if (count % 12 == 0) {
      b = mask(b, rand_array(16, 0, 1));
    }

    for (i = 0; i < 16; ++i) {
      let v = 80 + rand(47);
      let off = shf * shfm;
      if (i == 0 || i == 8) {
        v = 127;
        off = 0;
      }
      if (b[i] == 1) {
        note_on_at(bd, notesz[nx] - 12, i * pp + off, vel = v, dur = dr);
      }
      if (p[i] == 1) {
        note_on_at(sd, notesz[nx], i * pp + off, vel = v, dur = dr);
      }

      if (orb[i] == 1) {
        note_on_at(cb, notesz[nx], i * pp + off, vel = v, dur = dr);
      }
      nx = incr(nx, 0, len(notesz));
    }
    if (count % 2 == 0) {
      dr = dr + 10;
      if (dr > 300) {
        dr = 50;
      }
    }

    if (count % 8 == 0) {
      b = rand_beat();
      notesz = scale_melody(rand_array(16, lownote, highnote), key);
    }

  }
}

let cpblah_gen = gen()
{
  setup()
  {
    let snote = key;
  }
  run()
  {
    if (count % 8 < 7) {
      for (i = 0; i < 16; ++i) {
        let off = rand(60) - 30;
        if (i == 4 || i == 12) {
          note_on_at(cp, snote, i * pp + off);
        }
        if (i == 13 || i == 15) {
          if (rand(100) > 90) {
            note_on_at(cp, snote, i * pp + off, vel = 60 + rand(40));
          }
        }
      }
    } else {
      for (i = 0; i < 8; ++i) {
        let off = rand(60) - 30;
        if (rand(100) > 40) {
          note_on_at(cp, snote, i * pp + off, vel = 90 + rand(37));
        }
      }
      let p = rotate(bjork(3,8), rand(5));
      for (i = 0; i < 8; ++i) {
        let off = rand(60) - 30;
        if (p[i] == 1) {
          note_on_at(cp, snote, 8 * pp + i * pp + off , vel = 70 + rand(37), dur = 20);
        }
      }
    }
  }
}

let dxxxgen = gen()
{
  setup()
  {
    let t = 674747483;
    let notesz = scale_melody(rand_array(16, lownote, highnote), key);
    let nx = 0;
  }
  run()
  {
    #let p = bits(t/((t%(t>>13&t))));
    let p = bits((t>>4 & t>>8)/(t>>16&t));
    #let p = bits((t & (( t % (t>>1&t) ) | t >> 3 ^ t >> 4 ) >> 7) -1 );
    ++t;

    let lpp = 3840 / 32;
    if (count % 2 == 0) {
      for (i = 0; i < 16; ++i) {
        if (p[i] == 1) {
          note_on_at(dx, notesz[nx], 8 * pp + i * lpp, vel = 90 + rand(37));
          nx = incr(nx, 0, len(notesz));
        }
      }
    }
  }
}

let hhhhgen = gen()
{
  setup()
  {
  }
  run()
  {
    let p = rand_array(16, 0, 1);
    for (i = 0; i < 16; ++i) {
      let off = 48;
      let v = rand(60);
      if (i % 2 == 0) {
        off = 0;
      }
      note_on_at(hh, 1, i * pp + off, vel = v);
    }

  }
}

