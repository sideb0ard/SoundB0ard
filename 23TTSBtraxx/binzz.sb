let hh = sample(ch/pumpDistortHH.wav);
let hhh = sample(ch/reggaHatz.aiff);
let guh = sample(brandyvocalz/gu.wav);
let huh = sample(TT-NOCERA/hatUH.wav);
let kt = [hh, hhh, guh, huh];

let bin_gen = gen()
{
  setup()
  {
    let t = 153567;
    let ptz = [0.8, 1, 1.2, 1.5, 2];
    let px = 0;
    let bx = 0;
  }
  run()
  {
    if (count % 8 < 7) {
      ((t/4)>>(t/4))>>(t>>(t/8))|t>>2;
      ++t;
      #print(bits(t));
      perky(bits(t), kt);
      set kt[bx]:pitch ptz[px];
      bx = incr(bx, 0, len(kt));
      px = incr(px, 0, len(ptz));
    }
  }
}

let bd2 = sample(wavalc/dm02_909_kickdrum_006_drive.wav);
let hh2 = sample(aesamples/SH09_HAT.WAV);
let hh3 = sample(ch/acidHat3.aiff);
let ksn = sample(perc/krushsn.wav);
let hic = sample(perc/grit.aiff);
let kt2 = [bd2, hh2, hh3, ksn, hic];

# let bsqw = loop(bombz/BSQWASPR13.wav); set bsqw:len 4; vol bt 0
# add_fx(bsqw, "sidechain", bt); vol bt 1


let bin2_gen = gen()
{
  setup()
  {
    let t = 88484894;
    let bx = 0;
    let ptz = [0.8, 1, 1.2, 1.5, 2];
    let px = 0;
  }
  run()
  {
    if (count % 5 < 4) {
      let p = bits( t >> ( 8/  ( (t / 32) % 3 ) ) ):
        ++t;
      perky(p, kt2);
      set kt2[bx]:pitch ptz[px];
      bx = incr(bx, 0, len(kt2));
      px = incr(px, 0, len(ptz));
    }
  }
}

let bddd = sample(bd/808kick.aif);
let rm = sample(rims/hes23rim1.aif);
let hau = sample(cp/haunterZ.aiff);
let nyc = sample(cp/NYClap.aiff);
let cpp = sample(cp/clap25.aif);
let cppz = [rm, hau, nyc, cpp];
# let awk = loop(hallow/awkardBEAT2.wav); send(2, awk, 0.6); p8 $ bablah_gen
let bablah_gen = gen()
{
  setup()
  {
    let bjz = [1, 3, 7, 5, 1];
    let bx = 0;
    let cpx = 0;

    let ptz = [1, 2];
    let ptx = 0;
  }
  run()
  {
    play_array(bddd, bjork(bjz[bx], 16), dur=500);
    bx = incr(bx, 0, len(bjz));
    set awk:on 1;
    if (count % 4 == 3) {
      let bt = bjork(bjz[bx], 16);
      play_array(cppz[cpx], bt, 16));
      cpx = incr(cpx, 0, len(cppz));
      play_array(awk, invert(bt), 16));
    }
    if (count % 3 == 0) {
      set awk:stutter 1;
    }
    if (count % 8 == 0) {
      set bsqw:pitch ptz[ptx];
      ptx = incr (ptx, 0, len(ptz));
    }
  }
}

#  cp SLICZ
let ok = sample(voices/ok.wav);
let dabblah = gen()
{
  setup()
  {
    let notez = [47, 48];
    let nx = 0;
    let cnt = 7;
    let the_mel = combinor(bjork(cnt, 16), notez);
    let d = 50;
  }
  run()
  {
    if (count % 8 < 6) {
      for (i = 0; i < 16; ++i) {
        let v = 100 + rand(27);
        let off = 0;
        if (count % 4 == 0) {
          v = 127;
        }
        if (count % 2 == 1) {
          off = 48;
        }
        if (the_mel[i] > 0 ) {
          note_on_at(cp, the_mel[i], i*pp + off, vel = v, dur = d);
        }
      }
      d = d + 50;
      if (d > 450) {
        d = 50;
      }
    }
    if (count % 4 == 0) {
      the_mel = combinor(bjork(cnt, 16), notez);
      cnt = incr(cnt, 3, 11);
      note_on(ok, 1, dur = d + 100);
    }
  }
}

# let dics = loop(JUNALGOGZ/dicscovibe.wav); set dics:len 2; send(2, dics, 0.3);

let fldblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 2 == 0) {
      set dics:stutter 1;
    }
  }
}

