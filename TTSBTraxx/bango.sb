let tm = sample(TT-BANGO/TOM.wav);
let tm2 = sample(TT-BANGO/TOM3.wav);
let tm3 = sample(TT-BANGO/TOMLONG.wav);
let bongos = [tm, tm2, tm3];
let sn = sample(TT-BANGO/SNARE2.wav);
#let bd = sample(TT-BANGO/bd.wav);
let bd = sample(TT-NOCERA/klickKICK.wav);
let back = sample(TT-BANGO/back.wav);
let tothe = sample(TT-BANGO/TOTHE.wav);
let hh3 = sample(TT-BANGO/hat.wav);
let hh2 = sample(TT-BANGO/hatty.wav);
let hh = sample(TT-BANGO/HATish.wav);
let oh = sample(TT-BANGO/OH.wav);
#let hatz = [hh, hh2, hh3, oh];
let hatz = [hh2];
let sn = sample(TT-BANGO/snare.wav);
let sn2 = sample(TT-BANGO/SNARE2HIT.wav);
let sn3 = sample(TT-BANGO/howyeSNARE.wav);
let sn4 = sample(TT-BANGO/KRK.wav);
let snrz = [sn, sn2, sn3, sn4];

let arr_sizes = [2, 16, 4, 8, 16, 6, 8, 12, 4, 16];
let arr_idx = 0;


# let fnk = loop(TTUnreleaseProject/funkyGuitarLoop.wav); set fnk:grains_per_sec 15;
# let bss = loop(TT-LIMELIFE-RIGHTONTIME/bassloop2.wav); set bss:grains_per_sec 20; set bss:len 0.5 // add delay
# let bang = loop(TT-BANGO/BANGOLOOP.wav);


let bango_hatz = gen()
{
  setup()
  {
    let hat_idx = 0;
    let dr = 100;
  }

  run()
  {
    let arr = rand_array(arr_sizes[arr_idx], 0, len(hatz));
    set fnk:plooplen arr_sizes[arr_idx];
    set bss:plooplen arr_sizes[arr_idx];
    set bang:plooplen arr_sizes[arr_idx];

    let inc = 3840 / len(arr);
    for ( i = 0 ; i < len(arr) ;  ++i ) {
      let randy = rand(10);
      if ( randy < 8 ) {
        note_on_at(hatz[hat_idx], 1, i*inc, dur = dr);
        dr = dr + 10;
        if (dr > 30) {
          dr = 10;
        }
      }
      hat_idx = incr(hat_idx, 0, len(hatz))
    }

    if (count % 4 == 0) {
      set bang:stutter 1;
      set bss:scramble 1;
    }
    if (count % 3 == 0) {
      set bang:scramble 1;
      set bss:stutter 1;
    }
  }
}

let bango_bongoz = gen()
{
  setup()
  {
    let bongo_idx = 0;
    let pitchz = [1, 1.5, 2];

    let pitch_idx = 0;
    let bongoz = ["tm", "tm2", "tm3"]
  }

  run()
  {
    let arr = rand_array(arr_sizes[arr_idx], 0, len(bongos));

    if (count % 4 < 3) {
      let inc = 3840 / len(arr);
      # puts("Setting ", bongoz[bongo_idx], " to pitch ", pitchz[pitch_idx])
      #set bongoz[bongo_idx]:pitch pitchz[pitch_idx]
      if (count % 3 == 0){
        set tm:pitch pitchz[pitch_idx];
      }
      if (count % 4 == 0){
        set tm2:pitch pitchz[pitch_idx];
      }
      if (count % 7 == 0){
        set tm3:pitch pitchz[pitch_idx];
      }
      pitch_idx = incr(pitch_idx, 0, len(pitchz));
      for ( i = 0 ; i < len(arr) ;  ++i ) {
        let randy = rand(10);
        if ( randy < 8 ) {
          note_on_at(bongos[bongo_idx], 1, i*inc);
        }
        bongo_idx = incr(bongo_idx, 0, len(bongos));
      }
    }
  }
}


let bango_snarez = gen()
{
  setup()
  {
    let roll_len = 3
  }

  run()
  {
    if (count % 3 == 0) {
      let arr = rand_array(arr_sizes[arr_idx], 0, len(snrz) + 1);
      #pat = "~ ~ ~ [";
      perky(arr, snrz);
      roll_len = rand(4) + 3;
    }
  }
}

let rbblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    arr_idx = incr(arr_idx, 0, len(arr_sizes));
  }
}

