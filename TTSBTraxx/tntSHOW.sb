
let an = sample(TT-NOCERA/AHNAH.wav);
let oh = sample(TT-NOCERA/OOHlong.wav);
let tic = sample(TT-NOCERA/TICt.wav);
let wu = sample(TT-NOCERA/WUMP.wav);
let bad = sample(TT-NOCERA/badum.wav);
let dd = sample(TT-NOCERA/dudam.wav);
let df = sample(TT-NOCERA/dumf.wav);
let gl= sample(TT-NOCERA/grainnyloop.wav);
let gl2 = sample(TT-NOCERA/grainyloop2.wav);
let kr = sample(TT-NOCERA/kickr.wav);

#let sampz = [hh8, phh, cch6, hah];
let sampz = [dd, kr, tic, wu];
let sx = 0;

vol an 0.4;
vol oh 0.4;
vol df 0.4;
let sampz2 = [an, oh, dd, df];
let sx2 = 0;
let sxi2 = 1;
let vblah_gen = gen()
{
  setup()
  {
    let blen = 16;
    let beat = mask(rand_array(blen, 0, 7), "f0f0");
    let mpp = 3840 / blen;
    #let hpp = pp / 3;
    let cntr = 1;
    let cntr2 = 1;
  }
  run()
  {
    if (count % 8 == 7 ){
      let offset = 0;
      for (i = 0; i < len(beat); ++i) {
        if (i % 2 == 0) {
          offset = 20;
        }
        if (beat[i] < len(sampz)) {
          let on_at = i * mpp + offset;
          note_on_at(sampz[sx], 1, on_at);
          sx = incr(sx, 0, cntr);
        }
      }
    }
    if (count % 2 == 0) {
      cntr = incr(cntr, 1, len(sampz));
    }
    if (count % 16 == 13 ){
      let offset = 0;
      for (i = 0; i < len(beat); ++i) {
        if (i % 2 == 0) {
          offset = 40;
        }
        if (beat[i] < len(sampz2)) {
          let on_at = i * mpp + offset;
          note_on_at(sampz2[sx2], 1, on_at);
          sx2 = incr(sx2, 0, sxi2);
        }
      }
    }
    sxi2 = incr(sxi2, 1, len(sampz2));
    if (count % 4 ==0) {
      beat = mask(rand_array(blen, 0, 7), "f0f0");
    }
  }
}

let sncp = sample(TT-BLACKRIOT-DAYINLIFE/sncp.wav);
# let bssl = loop(TT-LIMELIFE-RIGHTONTIME/bassloop.wav); add_fx(bssl, "decimate");
# let wbs = loop(TTUnreleaseProject/WURKBUTTSTOOOP.wav); set wbs:len 0.25;
# ^ delay and decimate - osc the fb
# add_fx(wbs, "decimate", "delay")

# let chk = loop(TT-LOOPS/CheckThisOut.aiff); add_fx(chk, "decimate")


let bbchblah_gen = gen()
{
  setup()
  {
    let pllenz = [16, 4, 16, 8, 8, 6, 16, 16];
    let plx = 0;
  }
  run()
  {
    if (count % 8 == 0) {
      set chk:on 1;
    }
    if (count % 8 == 4) {
      play_array(chk, rand_beat());
    }
    set chk:plooplen pllenz[plx];
    plx = incr(plx, 0, len(pllenz));
    set bssl:plooplen pllenz[plx];
    if (count % 3 == 2) {
      set chk:stutter 1;
    }
  }
}


# let wbt = loop(TTUnreleaseProject/WORKBUTBETG.wav); add_fx(wbt, "decimate")
# let hahlo = loop(TT-BANGO/hahahlaoop.wav); set hahlo:len 0.5;
let weeblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    #unsolo();
    if (count % 2 ==0) {
      cbeat(sncp);
      cbeat(sncp);
    } else {
      set wbs:stutter 1;
    }

    if (count % 4 == 3) {
      set wbt:scramble 1;
    }
    #if (count % 8 == 6) {
      #  #solo(bssl);
      #}
    if (count % 8 == 7) {
      play_array(rand_beat(), hahlo);
      set wbs:scramble 1;
      set wbt:stutter 1;
      #solo(wbt, wbs);
    }
  }
}

