# key A# -- [10, 12, 14, 15, 17, 19, 21, 22]
# [22, 24, 26, 27, 29, 31, 33, 34] [34, 36, 38, 39, 41, 43, 45, 46]

let key = 22;

let lbd = sample(bd/lm1-kick.aif);
let ldb = sample(bd/808Kkick.wav);
let kbd = sample(bd/krushbd.wav);
let dnz = sample(noises/SNDCrunchhit2.aiff);
let dnz2 = sample(noises/sndCrunchHit.aiff);
let tz = sample(aesamples/SHSTR_06lpB.WAV);

let hdsd = sample(sd/hdSD.wav);

# let dbrs = loop(dub/dubLOOPsnrsz.aiff); p2 $ bstepblah_gen ; send(2, dbrs);
let bstepblah_gen = gen()
{
  setup()
  {
    let dr = 100;

    let kickdrumz = [lbd, ldb, kbd, dnz, dnz2, tz];
    let kx = 0;
    let kmax = 4;

    let bjx = 4;
  }
  run()
  {
    let bt = bjork(bjx, 16);
    bjx = incr(bjx, 4, 11);
    set dbrs:poffset = 0;
    for (i = 0; i < 16; ++i) {
      if (bt[i] == 1) {
        set dbrs:pidx 0 at=i*pp;
        note_on_at(kickdrumz[kx], 1, i * pp, dur = dr);
        kx = incr(kx, 0, kmax);
        dr = dr + 50;
        if (dr > 600) {
          dr = 50;
        }
      }
    }
    kmax = incr(kmax, 1, len(kickdrumz));
    if (count % 2 == 1) {
      cbeat(hdsd);
    }
    if (count % 4 == 0 )  {
      vol dbrs 1;
    }
    if (count % 16 == 15 )  {
      vol dbrs 0;
    }
  }
}
let rock = sample(voices/areyouready.wav);
let hhah = sample(voices/hah.aiff);
let inee = sample(voices/ineed.wav);
let ther = sample(voices/theerwasaTIME.wav);
let djp = sample(voices/DJPLZ.wav);
let gob = sample(voices/goback.aiff);

# let hhb = loop(JUNALGOGZ/hipbeat.wav); set hhb:len 2; send(2, hhb);

let its = sample(aaassembly/itsSuicideVoice.wav);
# set its:pitch 0.7 ; send(0, its, 0.8); send(2, its, 0.5); p3 $ topblah_gen
let topblah_gen = gen()
{
  setup()
  {
    let sampz = [rock, hhah, inee, ther, djp, gob];
    let bt = rand_array(16, 0, len(sampz) + 5);
    let dr = 10;
    let vdr = 200;
  }
  run()
  {
    if (count % 5 == 0) {
      set hhb:stutter 1;
    }
    if (count % 15 == 0) {
      set hhb:reverse 1;
      #solo(hhb, at=13*pp);
    }
    if (count % 4 == 3) {
      for (i = 0; i < 16; ++i) {
        if (bt[i] < len(sampz)) {
          note_on_at(sampz[bt[i]], 1, i * pp, dur = dr);
          dr = dr  + 30;
          if (dr > 400) {
            dr = 10;
          }
        }
      }
    }
    if (count % 5 == 0) {
      bt = rand_array(16, 0, len(sampz) + 5);
      note_on(its, 1, dur = vdr);
      vdr = vdr + 200;
      if (vdr > 1500) {
        vdr = 200;
      }
    }
  }
}

# vol hhb 0;  let doad = loop(aaassembly/dodad.wav); vol doad 0; vol dbrs 0;
# load_preset(per2, "HIGHWR"); p6 $ fblah_gen; vol per2 1; vol hhb 1;
let fbeats = combinor(bassgen(), [key]);
let fblah_gen = gen()
{
  setup()
  {
    let ix = 0;
    let imx = 3;
    let dr = 300;
    let doadcnt = 0;
  }
  run()
  {

    vol doad 0;
    if (count % 6 < 5) {
      for (i = 0; i < 16; ++i) {
        stepper(per2, fbeats, ix, i, dr);
        dr = dr + 150;
        ix = incr(ix, 0, imx);
      }
      imx = incr(imx, 3, 16);

      if (dr > 750) {
        dr = 100;
      }
    }
    if (count % 16 == 15) {
      fbeats = combinor(bassgen(), [key]);
      if (doadcnt < 5) {
        vol doad 1;
        solo(doad, at=8*pp);
        ++doadcnt;
      }
    }
  }
}



let startstringblah_fn = fn()
{
  let strn = loop(loops/strongsNHats.aiff);
  set strn:len 4;
  p5 $ strnblah_gen;
}

# let strn = loop(loops/strongsNHats.aiff); set strn:len 4; p5 $ strnblah_gen
let strnblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 3 == 0 )  {
      set strn:vol 1;
    }
    if (count % 8 == 7 )  {
      set strn:vol 1;
      solo(strn, at=12*pp);
    }
    if (count % 12 == 0) {
      set strn:vol 1;
      mashup([strn, hhb, dbrs, per2]);
    }
    if (count % 16 == 0) {
      set strn:vol 0;
    }
  }
}

# p2 $ ""; vol dbrs 0; p6 $ "" ; p5 $ ""; vol strn 0
# let rqf = loop(loops/rqfeedback.aiff); set rqf:len 8

# load_preset(dx2, "tigerking");  p6 $ melfblah_gen; vol dx2 1
# let hiha = loop(dloops/hihache.aif); send(2, hiha, 1)

let melfblah_gen = gen()
{
  setup()
  {
    let dr = 300;
    let ntz = notes_in_key(key);
    let mel1 = [0, 0, 10, 10, 0, 10, 0, 0, 10, 0, 0, 15, 19, 0, 17, 0];
    let mel2 = [10, 0, 10, 27, 0, 10, 0, 0, 10, 0, 0, 10, 0 , 0, 27, 0];
    let mel3 = [26, 0, 0, 26, 0, 10, 0, 26, 0, 0, 0, 0, 26, 0, 27, 0];
    let mel4 = [10, 0, 0, 26, 0, 10, 0, 27, 0, 10, 0, 0, 26, 0, 27, 0];
    let melz = [mel3, mel4, mel2];
    let mx = 0;

    let mix = 0;
    let mmax = 3;
    let dr = 50;
  }
  run()
  {
    let mel = melz[mx];
    for (i = 0; i < 16; ++i) {
      stepper(dx2, mel, mix, i, dr);
      mix = incr(mix, 0, mmax);
      dr = dr + 50;
      if (dr > 600) {
        dr = 50;
      }
    }
    mmax = incr(mmax, 3, 16);

    if (count % 6 == 0) {
      mx = incr(mx, 0, len(melz));
    }
  }
}

# vol hhb 0; vol hiha 0;
let fffsblah_gen = gen()
{
  setup()
  {
    let ix = 0;
    let imx = 3;
    let dr = 300;
    let fbeats = combinor(bassgen(), [key - 12]);
  }
  run()
  {

    if (count % 6 < 5) {
      for (i = 0; i < 16; ++i) {
        stepper(per2, fbeats, ix, i, dr);
        dr = dr + 150;
        ix = incr(ix, 0, imx);
      }
      imx = incr(imx, 3, 16);

      ilet beatbb = loop(dub/beatbassloop.aiff); vol hhb 0; vol hiha 0f (dr > 750) {
        dr = 100;
      }
    }
    if (count % 16 == 15) {
      fbeats = combinor(bassgen(), [key - 12]);
    }
  }
}


# p6 $ fffsblah_gen; vol rqf 0; vol hiha 1;
# vol per2 1; p7 $ newblah_gen; vol rqf 0

let newblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 3 == 0) {
      mashup([hiha, dx2, hhb]);
    }
    if (count % 4 == 0) {
    }
    if (count % 5 == 0) {
      set hiha:stutter 1;
    }
    if (count % 8 == 7) {
      solo(hiha, at=8*pp);
    }
  }
}

# STOP FBLAH and NEWFBLAH AND BRING IN DUB TO END
# p6 $ "" ; p7 $ ""; vol hiha 0;

# let dubr = loop(dub/dubriffloop.aiff);
# let beatbb = loop(dub/beatbassloop.aiff); vol hhb 0; vol hiha 0

# vol hiha 1; vol dubr 0;
# vol beatbb 0;
# let planz = loop(voices/planzcanfademe.wav); p7 $ dadubblah_gen; p6 $ fblah_gen

# p5 $ strnblah_gen; vol strn 1

let dadubblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 2 == 0) {
      set dubr:stutter 1;
      set planz:stutter 1;
    }
    if (count % 7 == 0) {
      set beatbb:scramble 1;
      set planz:scramble 1;
    }
    if (count % 8 == 0) {
      mashup([beatbb, planz, hiha, hhb]);
    }
  }
}

# vol beatbb 0;
# switch p6 between melfblah_gen and fblah_gen

