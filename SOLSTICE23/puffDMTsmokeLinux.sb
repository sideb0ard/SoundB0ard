#let key = 28;  A#
let key = 22;
let scale = notes_in_key(key);
let vi = notes_in_chord(scale[5], 1);
let ii = notes_in_chord(scale[1], 1);
let IV = notes_in_chord(scale[3]);
let V = notes_in_chord(scale[4]);
let I = notes_in_chord(scale[0]);

let chordprog = [I, V, V, I, I, IV];
let cpx = 0;

# bpm 140; p2 $ ""; load_preset(dx, "default");
# clear p2 - p2 < osc 8 "5 23"  "set dx:o1rat %"

#let into = loop(JUNALGOGZ/discoBEATloopintodanight.wav); send(2, into); p3 $ melblah_gen

let melblah_gen = gen()
{
  setup()
  {
    let bjz = [5, 7, 5, 3];
    let bjx = 0;
    let bjx2 = 1;
    let beat1 = bjork(bjz[bjx], 16);
    let beat2 = bjork(bjz[bjx], 8) + bjork(bjz[bjx2],8);
    let swg = 0;
    let drz = 150;
    let cntr = 0;
  }
  run()
  {
    ++cntr;
    let beat = beat1;
    if (cntr % 16 > 8) {
      if (count % 4 == 3) {
        beat = beat2;
      }

      if (count % 4 == 0) {
        cpx = incr(cpx, 0, len(chordprog));
        bjx = incr(bjx, 0, len(bjz));
        bjx2 = incr(bjx2, 0, len(bjz));
        beat1 = bjork(bjz[bjx], 16);
        beat2 = bjork(bjz[bjx], 8) + bjork(bjz[bjx2],8);
      }
    }

    swg = swg + 10;
    if (swg > 120) {
      swg = 0;
    }

    if (count % 16 > 13) {
      beat = mask(beat, "0F0F");
    }

    let scntr = 0;
    if (count % 4 < 3) {
      for (i = 0; i < 16; ++i) {
        if (beat[i] == 1) {
          let offset = swg;
          if (scntr % 2 == 0) {
            offset = 0;
          }
          ++scntr;
          let v = 100 + rand(27);
          if (i % 4 == 0) {
            v = 127;
          }
          note_on_at(dx, chordprog[cpx][2], i * pp + offset, dur = drz, vel = v);
          note_on_at(dx, chordprog[cpx], i * pp + offset, dur = drz, vel = v);
          note_on_at(cb, chordprog[cpx][0], i * pp + offset, dur = drz, vel = v);
        }
      }
    } else {
      set into:reverse 1;
      set into:scramble 1;
    }
    drz = drz + 50;
    if (drz > 600) {
      drz = 150;
    }
  }
}

# let ma = loop(Riser77/maCrewBEAT.wav);
#let ama = loop(Riser77/amaSuperhero.wav); set ama:len 2; p3 $ wblah_gen
let wblah_gen = gen()
{
  setup()
  {
    let sampz = [into, ama, ma];
  }
  run()
  {
    xclear();
    unsolo();

    if (count % 7 == 3) {
      mashup(sampz);
    }

    if (count % 4 == 2) {
      set ama:scramble 1;
    }
    if (count % 9 == 3) {
      set ama:stutter 1;
    }

    if (count % 8 == 6) {
      solo(sampz[rand(len(sampz))], at=13*pp);
      set ma:scramble 1;
    }
  }
}

let mashup = fn(sndgenz)
{

  if (type(sndgenz) != "ARRAY") {
    print("WHOA", type(sngenz));
    return;
  }
  if (len(sndgenz) == 0) {
    return;
  }
  for (i = 0; i < len(sndgenz); ++i) {
    xassign(i % 2, sndgenz[i]);
  }

  let poz = [-1, 1];
  let px = 0;
  for (i = 0; i < 16; ++i) {
    if (i % 4 == 0) {
      set mixer:xfader:xpos poz[px] at=i*pp;
      px = incr(px, 0, len(poz));
    }
  }
  solo(sndgenz[rand(len(sndgenz))], at = 12*pp) ;
}

# load_preset(dx2, "UFO"); load_preset(cl, "BLELL"); vol cl 1; send(2, cl);
#
# vol ama 0; vol into 0; p4 $ nnblah_gen
let nnblah_gen = gen()
{
  setup()
  {
    let d = 100;
    let sw = 180;
    let dnrz = [12, 24];
    let drx = 0;
  }
  run()
  {
    let rif = chord_riff(chordprog[cpx]);
    for (i = 0; i < 16; ++i) {
      if (rif[i] > 0) {
        let offs = sw;
        if (i % 2 == 0) {
          offs = 0;
        }
        let v = 100 + rand(27);
        if (i % 4 == 0) {
          v = 127;
        }
        note_on_at(cl, rif[i] , i * pp + offs, dur = d, vel = v);
        d = d + 30;
        if (d > 500) {
          d = 50;
        }
      }
    }
    if (count % 4 == 3) {
      set ma:reverse 1;
      drx = incr(drx, 0 ,len(dnrz));
    }
  }
}

# p7 < osc 8 "0 0.4" "send(0, ma, %)"

# let bsb = loop(aaassembly/bassbeat.wav); add_fx(bsb, "distort"); p3 $ w2blah_gen
let w2blah_gen = gen()
{
  setup()
  {
    let sampz = [bsb, into];
  }
  run()
  {
    xclear();
    unsolo();

    if (count % 4 == 2) {
      mashup(sampz);
    }

    if (count % 4 == 2) {
      set bsb:scramble 1;
    }
    if (count % 9 == 3) {
      set into:stutter 1;
    }

    if (count % 8 == 6) {
      solo(sampz[rand(len(sampz))], at=13*pp);
      set ma:scramble 1;
    }
  }
}

# vol bsb 0; vol ama 0; vol into 0; vol ma 0; p3 $ ""
#load_preset(per2, "TINPAN"); vol per2 1; send(2, per2); p4 $ wowoblah_gen; vol bsb 1;

let wowoblah_gen = gen()
{
  setup()
  {
    let plen = 32;
    let v = 100;
    let d = 100;
  }
  run()
  {
    if (count % 8 == 0) {
      set bsb:stutter 1;
    }
    if (count % 7 == 0) {
      set bsb:scramble 1;
    }
    if (count % 4 < 3) {
      let chrd = chordprog[cpx];
      let m = rand_array(16, 0, len(chrd));
      for (i = 0; i < 16; ++i) {
        note_on_at(per2, chrd[m[i]], i * pp);
      }
    }
  }
}

# vol bsb 0; vol into 1; vol ma 1;

# p3 $ wblah_gen; p4 $ melblah_gen; vol ama 1;
# let chez = loop(loops/chez1barbaby.aiff); send(2, chez)


let mel2blah_gen = gen()
{
  setup()
  {
    let beat = rand_beat();
    let drz = 150;
    let ix = 0;
    let mmax = 3;
  }
  run()
  {
    if (count % 4 == 3) {
      beat = rand_beat();
    }

    if (count % 4 < 3) {
      let mel = combinor(beat, chordprog[cpx]);
      for (i = 0; i < 16; ++i) {
        stepper(dx, mel, ix, i, drz);
        ix = incr(ix, 0, mmax);
      }
    }
    drz = drz + 50;
    if (drz > 600) {
      drz = 150;
    }
    mmax = incr(mmax, 3, 16);
  }
}
