
let ptz = [2, 0.8, 1.2, 0.6, 1, 1.7, 0.3];
let ptx = 0;
let bgen = gen()
{
  setup()
  {
    let d = 1000;
  }
  run()
  {
    if (count % 12 < 10) {
      dbeat(bd);
    }
    if (count % 17 < 15) {
      if (count % 3 == 0) {
        cbeat(cp);
      } else {
        cbeat(cp2);
      }
    }

    for (i = 0; i < 16; ++i) {
      set bd:pitch ptz[ptx] at=i*pp;
      ptx = incr(ptx, 0, len(ptz));
    }

    if (count % 4 == 0) {
      note_on(mo, notes_in_chord(36, 1, 2), dur = d);
      note_on(ik, notes_in_chord(36, 1, 2), dur = d * 5);
      d = d + 1000;
      if (d > 7000) {
        d = 1000;
      }
    }
    if (count % 7 == 0) {
      note_on(bbd, 1);
      set bbd:pitch ptz[ptx] at=i*pp;
    }

  }
}

let hhah_gen = gen()
{
  setup()
  {
    let hatz = [hh1, hh2, hh3];
    let gltz = [gl1, gl2, gl3, gl4, gl5];
  }
  run()
  {
    if (count % 2 == 0) {
      let pat = rand_array(16, 0, len(hatz) + 1);
      let gpat = rand_array(16, 0, len(gltz) + 1);

      for (i = 0; i < 16; ++i) {
        let v = 77;
        if (i % 2 == 0) {
          v = 127;
        }
        if (pat[i] < len(hatz)) {
          note_on_at(hatz[pat[i]], 1, i * pp, vel = v);
          note_on_at(wa, 1, i * pp, vel = v, dur = v);
          set wa:pitch ptz[ptx] at=i*pp;
          set hatz[pat[i]]:pitch ptz[ptx] at=i*pp;
        }
        if (gpat[i] < len(gltz)) {
          note_on_at(gltz[gpat[i]], 1, i * pp, vel = v);
          note_on_at(bet, 1, i * pp, vel = v);
          set gltz[gpat[i]]:pitch ptz[ptx] at=i*pp;
          set bet:pitch ptz[ptx] at=i*pp;
        }
      }
    }

  }
}
