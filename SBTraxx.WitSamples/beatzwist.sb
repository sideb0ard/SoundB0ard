let bd = sample(bd/boomB.aiff);
let bd2 = sample(bd/aldo_kick_6.aif);

let hh = sample(ch/CasioMT70ClosedHihat.aif);

# bpm 150; play skrslazrs/SHØCK04.wav; p1 $ ae_gen
# p1 $ ae_gen
# p2 $ dblah_gen

let echob = fn(ins, idx)
{
  let numecho = 3;
  let div = pp / numecho;
  let v = 127;
  for (i = 0; i < numecho; ++i) {
    note_on_at(ins, 1, idx + i * div, vel = v, dur=div);
    v = v - 10;
  }
}

let d = 300;
let bmash = fn(inst, beat)
{
  let pp = 3840 / len(beat);
  let swpp = pp / 4;
  for (i = 0; i < len(beat); ++i) {
    let v = 127;
    let sw = 0;
    if (beat[i] == 1) {
      if (i % 2 == 1) {
        sw = swpp;
      }
      if (rand(10) < 7) {
        if (rand(10) > 8) {
          echob(inst, i);
        } else {
          note_on_at(inst, 1, i*pp + swpp, dur = d, vel = v);
        }
      }
    }
    d = d + 10;
    if (d > 500) {
      d = 50;
    }
  }
}

let scif = sample(perc/scratchClap.aiff);
let tth = sample(perc/thee.wav);
let lzp = sample(perc/krushbrk.wav);
let gz = sample(perc/gltchString.aiff);
let sd = sample(sd/acidSnare2slow.aiff);

let dblah_gen = gen()
{
  setup()
  {
    let rhz = [bossa, shiko, son];
    let rhx = 0;
    let itz = [scif, tth, lzp, gz];
    let ix = 0;
    let rotr = 2;
    let msk = "ff00";
  }
  run()
  {

    if (count % 2 == 0) {
      let bdbeat = mask(bossa, msk);
      msk = rotate(msk, 1);
      play_array(bd, bdbeat);
      if (count % ix == 0) {
        dbeat(bd2);
      }
    } else {
      dbeat(bd);
      cbeat(sd);
    }

    let bt = rhz[rhx];

    if (count % 3 == 0) {
      bt = rotate(rhz[rhx], rotr);
      rotr = incr(rotr, 1, 5);
      bmash(itz[ix], bt);
      rhx = incr(rhx, 0, len(rhz));
    }
    if (count % 2 == 0) {
      bt = bt *2;
      bmash(itz[ix], bt);
      ix = incr(ix, 0, len(itz));
    }
    if (count % 8 == 7) {
      bt = bt * 4;
      bmash(itz[ix], bt);
      ix = incr(ix, 0, len(itz));
    }
  }
}

# let mrb = loop(loops/mrfingersbassENDer.aiff); set mrb:len 2 ; p3 $ mrbblah_gen

let mrbblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    set mrb:on 1;
    set mrb:reverse 0;
    set mrb:pitch 1;
    if (count % 2 == 0) {
      set mrb:pitch 1;
      set mrb:stutter 1;
    }
    if (count % 3 == 0) {
      set mrb:scramble 1;
    }
    if (count % 16 == 15) {
      set mrb:pitch 2;
      set mrb:reverse 1;
    }
    if (count % 4 == 0) {
      play_array(mrb, rand_beat());
    }
  }
}


let ae1 = sample(aesamples/steelxif07.WAV);
let ae2 = sample(aesamples/steelxif13.WAV);
let ae3 = sample(aesamples/shstr_27.WAV);
let ae4 = sample(aesamples/SPSKikA.WAV);
let ae5 = sample(aesamples/shstr_07.WAV);
let gp = sample(notes/garageyPiano.aiff);
let fgp = sample(notes/pierre.aiff);
let ooh = sample(TT-NOCERA/ooh.wav);
let mfh = sample(qebo/QEBO-LOCKDOWNFM-05FMHIGHHAT4.wav);

let ae_gen = gen()
{
  setup()
  {
    #let aez = [mfh, ae1, ae2, ae3, ae4, gp, ae5, fgp, ooh];
    let aez = [mfh, ae1];
    let aex = 0;
    let d = 100;
    let v = 70;
    let lenz = [4, 1, 2, 3, 4, 7];
    let lx = 0;

    let dabeat = rand_beat();
  }
  run()
  {
    if (count % 3 == 0) {
      let beaa = dabeat * lenz[lx];
      let pp = 3840 / 16 / lenz[lx];
      lx = incr(lx, 0, len(lenz));
      for (i = 0; i < len(beaa); ++i) {
        if (beaa[i] == 1) {
          note_on_at(aez[aex], 1, i * pp, dur = d, vel = v);
          aex = incr(aex, 0, len(aez));
          d = d + 1;
          v = v + 10;
          if (d > 200 ) {
            d = 10;
          }
          if (v > 117 ) {
            v = 40;
          }
        }
      }
    }
    if (count % 4 == 3) {
      hhbeat(hh);
      dabeat = rand_beat();
    }
  }
}


# bpm 150; play skrslazrs/SHØCK04.wav;

let jbh = sample(noises/jbs3rdhit.aiff);
# let rust  = loop(dloops/rsuteri.wav); set rust:len 2;
# let stv = loop(dloops/steveMUR.wav); set stv:len 0.5; vol stv 0; p1 $ rust_gen
let rust_gen = gen()
{
  setup()
  {
    let beat = rand_beat();
    let msk = "ff00";
  }
  run()
  {

    set rust:on 1;
    set rust:pitch 1;
    vol stv 0;
    if (count % 8 == 7) {
      beat = rand_beat();
      play_array(rust, beat);
      vol stv 1;
      play_array(stv, invert(beat));
    }
    if (count % 3 == 0) {
      set rust:scramble 1;
      let beat = rand_beat();
      #play_array(mrb, beat);
      #hhbeat(hh);

    }
    if (count % 5 == 0) {
      set rust:stutter 1;
      set rust:pitch 2;
      play_array(jbh, mask(beat, msk));
      msk = rotate(msk, 1);
    }
    if (count % 4 == 0) {
      cbeat(sd);
      if (rand(10) > 8) {
        set rust:stutter 1;
        set rust:pitch 0.7;
      }
    }
  }
}

#let dre = loop(loops/drestrings.aiff); set dre:len 8; p2 $ dregen
let dregen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 2 == 0) {
      set dre:stutter 1;
    }
    if (count % 3 == 0) {
      set dre:scramble 1;
    }
    if (count % 8 == 0) {
      vol dre 0.6;
    }
    if (count % 8 == 4) {
      vol dre 0;
    }
  }
}
#let nszl = loop(hallow/NOISEintroLOOP.wav); set nszl:len 8; p3 $ nzblah_gen
let nzblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 7 == 0) {
      set nszl:stutter 1;
    }
  }
}

# fade rust

# let cliff = loop(hallow/cliffLOOP.wav); set cliff:len 12; p4 $ clgen
let clgen = gen()
{
  setup()
  {
  }
  run()
  {
    set cliff:reverse 0;
    if (count % 3 == 0) {
      set cliff:stutter 1;
    }
    if (count % 4 == 3) {
      set cliff:reverse 1;
    }
  }
}



#let crnkl = loop(hallow/crnkloop.wav); p5 $ hah_gen
let bwah = sample(hallow/bwah.wav);
let ov = sample(hallow/ovalNOTE.wav);
let hahz = [bwah];

let hah_gen = gen()
{
  setup()
  {
    let bt = rand_beat();
  }
  run()
  {
    if (count % 3 == 0) {
      set crnkl:stutter 1;
    }
    if (count % 2 == 0) {
      perky(rand_beat(), hahz);
    }
    if (count % 4 == 0) {
      set crnkl:scramble 1;
      perky(bt, hahz);
    }
  }
}


let melblah_gen = gen()
{
  setup()
  {
    #let notez = [7, 4];
    let notez = [57, 48];
  }
  run()
  {
    let pat = mask(rand_beat(), "ff00");
    play_array(mo, combinor(pat, notez));
  }
}

