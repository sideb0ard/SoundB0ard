let d = 100;

let grit = sample(perc/grit.aiff);
let blip = sample(perc/blippyr.aiff);
let scif = sample(perc/scif.wav);
let sf = sample(perc/surfaceFalle.aiff);
let ksn = sample(perc/krushsn.wav);

let btz = [grit, blip, scif, sf, ksn];
let btx = 0;

let b = combinor(rand_beat(), [39, 42, 46, 51, 54, 58]);

let pblah_gen = gen()
{
  setup()
  {
  }
  run()
  {
    if (count % 4 == 3) {
      for (i = 0; i < 16; ++i) {
        if (b[i] > 0) {
          note_on_at(btz[btx], 1, i * pp);
          btx = incr(btx, 0, len(btz));
        }
      }
    }

  }
}
let mblah_gen = gen()
{
  setup()
  {
    let mmel = rotate(mell, 4);
  }
  run()
  {
    play_array(mo, sqw);
    if (count % 16 < 17) {
      if (count % 3 < 2) {
        play_array(mo,  mmel);
      } else {
        play_array(mo,  reverse(mmel));
      }
    }
  }
}


let blah_gen = gen()
{
  setup()
  {

    let ix = 0;
    let maxix = 3;
  }
  run()
  {
    if (count % 7 == 5) {
      b = down(scramble(b), 12);
      set mw:stutter 1;
      set sken:scramble 1;
    } else {
      set sken:stutter 1;
    }

    for (i = 0; i < 16; ++i) {
      stepper(bd, b, ix, i);
      if (count % 2 == 0) {
        stepper(dx, b, ix, i);
      }
      ix = incr(ix, 0, maxix);
    }
    maxix = incr(maxix, 3, 16);
    d = d + 100;
    if (d > 1500) {
      d = 100;
    }

    set mw:reverse 0;
    if (count % 8 == 7) {
      b = combinor(rand_beat(), [41]);
      set mw:reverse 1;
    }

    if (count % 4 == 3) {
      play_array(dx, p);
      #set dx:algo 2;
      #play_array(mo, poo);
    }
    if (count % 3 == 0) {
      play_array(dx, q);
      #set dx:algo 6;
      set mw:scramble 1;
      #play_array(mo, poo2);
    }
    if (count % 7 == 0) {
      play_array(dx, qp);
    }
  }
}

